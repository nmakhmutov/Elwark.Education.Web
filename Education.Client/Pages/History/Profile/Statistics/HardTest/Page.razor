@page "/history/profile/me/statistics/hard-tests"
@using Education.Client.Gateways.Models.Statistics
@using Education.Client.Gateways.History
@layout HistoryLayout

@attribute [Authorize]

<PageTitle>@L["Tests:Hard"]</PageTitle>
<MainContainer>
    <PageHeader Title="@L["Tests:Hard"]" Class="mb-6" Breadcrumbs="@Breadcrumbs"/>
    <ApiResponseViewer Response="@_response">
        <Placeholder>
            <StatisticsDetailsGrid>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
            </StatisticsDetailsGrid>
        </Placeholder>
        <Result Context="result">
            <StatisticsDetailsGrid Class="mb-3 mb-sm-6">
                <StatisticsCard Icon="@Icons.Filled.School" Title="@L["Tests"]" Value="@result.NumberOfTests.Total.Total">
                    <TwoColumnGrid>
                        <div>
                            <Subheader Title="@L["Tests"]" Subtitle="@L["ForAllTime"]"/>
                            <NumberOfTestChart Value="@result.NumberOfTests.Total"/>
                        </div>
                        <div>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.NumberOfTests.Progress.RangeTitle()"/>
                            <ProgressList Items="@result.NumberOfTests.Progress.GetProgress(L)"/>
                        </div>
                    </TwoColumnGrid>
                </StatisticsCard>
                <StatisticsCard Icon="@Icons.Filled.PendingActions" Title="@L["Score"]" Value="@result.Score.Total.Total">
                    <TwoColumnGrid>
                        <div>
                            <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                            <ScoreChart Value="@result.Score.Total"/>
                        </div>
                        <div>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.Score.Progress.RangeTitle()"/>
                            <ProgressList Items="@result.Score.Progress.GetProgress(L)"/>
                        </div>
                    </TwoColumnGrid>
                </StatisticsCard>
                <StatisticsCard Icon="@Icons.Filled.HelpOutline" Title="@L["Questions"]" Value="@result.AnswerRatio.Total.Questions">
                    <TwoColumnGrid>
                        <div>
                            <Subheader Title="@L["Questions"]" Subtitle="@L["ForAllTime"]"/>
                            <AnswerRatioChart Value="@result.AnswerRatio.Total"/>
                        </div>
                        <div>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.AnswerRatio.Progress.RangeTitle()"/>
                            <ProgressList Items="@result.AnswerRatio.Progress.GetProgress(L)"/>
                        </div>
                    </TwoColumnGrid>
                </StatisticsCard>
                <StatisticsCard Icon="@Icons.Filled.Timer" Title="@L["TimeSpent"]" Value="@result.TimeSpent.Total">
                    <TwoColumnGrid>
                        <div>
                            <Subheader Title="@L["TimeSpent"]" Subtitle="@L["ForAllTime"]"/>
                            <TimeSpentChart
                                Average="@result.TimeSpent.Average"
                                Max="@result.TimeSpent.Max"
                                Min="@result.TimeSpent.Min"
                                Total="@result.TimeSpent.Total"/>
                        </div>
                        <div>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.TimeSpent.Progress.RangeTitle()"/>
                            <ProgressList Items="@result.TimeSpent.Progress.GetProgress(L)"/>
                        </div>
                    </TwoColumnGrid>
                </StatisticsCard>
            </StatisticsDetailsGrid>
            @if (result.Conclusions.Length > 0)
            {
                <MudText Typo="Typo.h5" Class="mb-3 mt-6 mt-md-12">
                    @L["Tests:Latest"]
                </MudText>
                <DefaultFillGrid>
                    @foreach (var conclusion in result.Conclusions)
                    {
                        <MudCard>
                            <MudCardHeader Class="pa-3">
                                <CardHeaderContent>
                                    <MudLink Typo="Typo.h6" Href="@Links.Subject.History.Profile.TopicStatistics(conclusion.TopicId)">
                                        @conclusion.Title
                                    </MudLink>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent Class="pa-3">
                                <TestConclusionList
                                    Status="@conclusion.Status"
                                    CompletedAt="@conclusion.CompletedAt"
                                    TimeSpent="@conclusion.TimeSpent"
                                    Score="@conclusion.Score"
                                    AnswerRatio="@conclusion.AnswerRatio"/>
                            </MudCardContent>
                        </MudCard>
                    }
                </DefaultFillGrid>
            }
        </Result>
    </ApiResponseViewer>
</MainContainer>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index),
        new BreadcrumbItem(L["Profile"].Value, Links.Subject.History.Profile.Me)
    };

    private ApiResponse<TopicTestStatistics> _response = ApiResponse<TopicTestStatistics>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnParametersSetAsync() =>
        _response = await HistoryClient.Me.GetHardTestStatisticsAsync();

}
