@using Education.Client.Gateways.Models.User

<MudPaper Class="@(Class + " pa-3 pa-sm-6")">
    <MudText Typo="Typo.h6">
        @L["Experience:MyXp"]
    </MudText>
    <div class="header">
        <MudIcon Icon="@Icons.Material.Filled.FilterTiltShift" Class="icon" Color="Color.Primary"/>
        @if (Points > 1000)
        {
            <MudTooltip Text="@Points.ToString("N0")">
                <MudText Typo="Typo.h3">
                    @Points.ToReadable()
                </MudText>
            </MudTooltip>
        }
        else
        {
            <MudText Typo="Typo.h3">
                @Points.ToReadable()
            </MudText>
        }
    </div>
    @if (Recent.Length > 0)
    {
        <ul class="transactions">
            @foreach (var transaction in Recent)
            {
                <li>
                    <div>
                        <MudText Typo="Typo.subtitle1">
                            @L[$"XpType:{transaction.Type}"]
                        </MudText>
                        <MudText Typo="Typo.caption">
                            @transaction.CreatedAt.ToSimpleFormat()
                        </MudText>
                    </div>
                    <div class="d-flex align-center">
                        <MudIcon Icon="@Icons.Material.Filled.FilterTiltShift" Size="Size.Small" Color="Color.Primary" Class="mr-1"/>
                        <MudText Typo="Typo.subtitle1">
                            @transaction.Value.ToReadable()
                        </MudText>
                    </div>
                </li>
            }
        </ul>
    }
</MudPaper>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public long Points { get; set; }

    [Parameter, EditorRequired]
    public RecentExperience[] Recent { get; set; } = Array.Empty<RecentExperience>();

    [Parameter]
    public string? Class { get; set; }
}
