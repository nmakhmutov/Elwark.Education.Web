@page "/history/test/{id}/conclusion"
@using Education.Client.Gateways.History
@using Education.Client.Gateways.History.Test

@attribute [Authorize]

<ApiResponseViewer Response="@_response">
    <Placeholder>
        <CenteredContainer MaxWidth="ContainerWidth.W1280" Class="my-3 my-sm-6" Paper="true" Elevation="1">
            <div class="pa-3">
                <MudSkeleton Width="30%"/>
                <MudSkeleton Width="100%"/>
            </div>
        </CenteredContainer>
        <CenteredContainer MaxWidth="ContainerWidth.W1280" Class="mb-3 mb-sm-6">
            <DefaultFitGrid>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
            </DefaultFitGrid>
        </CenteredContainer>
        <CenteredContainer MaxWidth="ContainerWidth.W1280">
            <SkeletonCard/>
        </CenteredContainer>
    </Placeholder>
    <Result Context="conclusion">
        @switch (conclusion)
        {
            case EasyTestConclusion test:
                <Title Value="@test.Topic.Title"></Title>
                <EasyTestView Conclusion="@test"/>
                break;

            case HardTestConclusion test:
                <Title Value="@test.Topic.Title"></Title>
                <HardTestView Conclusion="@test"/>
                break;

            case MixedTestConclusion test:
                <Title Value="@L["Test:Mixed"]"></Title>
                <MixedTestView Conclusion="@test"/>
                break;

            default:
                throw new ArgumentOutOfRangeException(nameof(conclusion));
        }

    </Result>
</ApiResponseViewer>

@code {

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    private ApiResponse<TestConclusion> _response = ApiResponse<TestConclusion>.Loading();

    protected override async Task OnParametersSetAsync() =>
        _response = await HistoryClient.Test.GetConclusionAsync(Id);

}
