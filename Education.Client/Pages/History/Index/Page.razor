@page "/history"
@layout HistoryLayout
@using Education.Client.Gateways.History
@using Education.Client.Gateways.History.Home

@attribute [Authorize]

<SearchHeader Search="@OnSearch" Class="mb-6 mb-sm-12"/>
<ApiResponseViewer Response="@_response">
    <Placeholder>
        <CenteredContainer MaxWidth="@ContainerWidth.W1280" Class="mb-6 mb-sm-12">
            <DefaultFitGrid>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
            </DefaultFitGrid>
        </CenteredContainer>
    </Placeholder>
    <Result Context="result">
        <PageTitle>@L["Subject:History"]</PageTitle>

        <CenteredContainer MaxWidth="@ContainerWidth.W1280" Class="mb-6 mb-sm-12">
            <div class="header">
                <MudText Typo="Typo.h6">
                    @L["Topics:Trending"]
                </MudText>
            </div>
            <Trending Items="@result.TrendingTopics"/>
        </CenteredContainer>

        <CenteredContainer MaxWidth="@ContainerWidth.W1600" Class="mb-6 mb-sm-12" Style="background-color: var(--mud-palette-black)">
            <DailyTopic Topic="@result.DailyTopic" Class="mx-3 my-6"/>
        </CenteredContainer>

        <CenteredContainer MaxWidth="@ContainerWidth.W1280" Class="mb-6 mb-sm-12">
            <div class="header">
                <MudText Typo="Typo.h6">
                    @L["Topics:Hot"]
                </MudText>
            </div>
            <Trending Items="@result.HotTopics"/>
        </CenteredContainer>

        <CenteredContainer MaxWidth="@ContainerWidth.W1280" Class="mb-6 mb-sm-12">
            <div class="header">
                <MudText Typo="Typo.h6">
                    @L["Topics:Recent"]
                </MudText>
            </div>
            <Trending Items="@result.RecentTopics"/>
        </CenteredContainer>
    </Result>
</ApiResponseViewer>

<CenteredContainer MaxWidth="@ContainerWidth.W600" Class="mb-6 mb-sm-12">
    <RandomTopic/>
</CenteredContainer>

@code {

    private ApiResponse<HistoryOverview> _response = ApiResponse<HistoryOverview>.Loading();

    [Inject]
    private IHistoryClient Client { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _response = await Client.Home.GetAsync();
    }

    private async Task<IEnumerable<TopicSummary>> OnSearch(string text)
    {
        if (string.IsNullOrWhiteSpace(text) || text.Length < 2)
            return Array.Empty<TopicSummary>();

        var result = await Client.Home.SearchAsync(text);
        return result.Status == ResponseStatus.Success ? result.Data : Array.Empty<TopicSummary>();
    }

}
