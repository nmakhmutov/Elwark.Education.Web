@inherits LayoutComponentBase
@layout MainLayout

<ul class="navbar" style="background: @_static.Gradient">
    @foreach (var item in _menu)
    {
        <li>
            <a href="@item.Link" class="@(item.IsActive ? "active" : null)">
                <MudIcon Icon="@item.Icon" Size="Size.Medium" Class="navbar-icon" Color="Color.Inherit"/>
                <MudText Typo="Typo.subtitle2" Class="navbar-text" Color="Color.Inherit">
                    @item.Title
                </MudText>
            </a>
        </li>
    }
</ul>

<MainContainer>
    @Body
</MainContainer>

@code {

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    private SubjectType _subject;
    private Data[] _menu = Array.Empty<Data>();
    private SubjectStatic _static = new(string.Empty, string.Empty, string.Empty);

    protected override void OnParametersSet()
    {
        var parts = new Uri(NavigationManager.Uri).LocalPath.Trim('/').Split('/');
        _subject = Enum.Parse<SubjectType>(parts[1], true);
        _static = _subject.GetStatic();
        var page = parts.Length > 2 ? parts[2].ToLowerInvariant() : "overview";

        _menu = new Data[]
        {
    // new(L["Profile"], Links.Profile.Index, Icons.Filled.Person, false),
            new(L["Overview"], OverviewLink(_subject), Icons.Filled.CardMembership, page == "overview"),
            new(L["Statistics"], StatisticsLink(_subject), Icons.Filled.BarChart, page == "statistics"),
            new(L["Favorites"], FavoritesLink(_subject), Icons.Filled.Favorite, page == "favorites")
        };
    }

    private static string OverviewLink(SubjectType subject) =>
        subject switch
        {
            SubjectType.History => Links.Profile.History.Overview,
            _ => throw new ArgumentOutOfRangeException(nameof(subject), subject, null)
            };

    private static string StatisticsLink(SubjectType subject) =>
        subject switch
        {
            SubjectType.History => Links.Profile.History.Statistics,
            _ => throw new ArgumentOutOfRangeException(nameof(subject), subject, null)
            };

    private static string FavoritesLink(SubjectType subject) =>
        subject switch
        {
            SubjectType.History => Links.Profile.History.Favorites,
            _ => throw new ArgumentOutOfRangeException(nameof(subject), subject, null)
            };

    private sealed record Data(LocalizedString Title, string Link, string Icon, bool IsActive);

}
