@* @using Education.Client.Gateways.Models.User *@
@* @inject IStringLocalizer<App> L *@
@* *@
@* <MudCard Class="d-flex flex-column"> *@
@*     <MudCardHeader> *@
@*         <CardHeaderAvatar> *@
@*             <SubjectIcon SubjectType="@Subject.Type" Size="@Size.Medium"/> *@
@*         </CardHeaderAvatar> *@
@*         <CardHeaderContent> *@
@*             <MudText Typo="Typo.subtitle1"> *@
@*                 @L["Subscription"] *@
@*             </MudText> *@
@*             <MudText Typo="Typo.body2" Color="@Subject.Subscription.Type.GetColor()"> *@
@*                 @L[$"Subscription:{Subject.Subscription.Type}"] *@
@*             </MudText> *@
@*         </CardHeaderContent> *@
@*     </MudCardHeader> *@
@*     <MudCardContent Class="flex-grow-1"> *@
@*         <div class="content-grid"> *@
@*             @if (Subject.Subscription.Purchase is null) *@
@*             { *@
@*                 <div class="d-flex flex-row justify-center"> *@
@*                     <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@OnBuy"> *@
@*                         @L["Subscription:PricingPlan"] *@
@*                     </MudButton> *@
@*                 </div> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <div class="d-flex flex-row justify-space-between align-center"> *@
@*                     <MudTooltip Text="@L["Subscription"]"> *@
@*                         <MudChip Color="@Subject.Subscription.Type.GetColor()" Size="Size.Small" Label="true" Class="ma-0"> *@
@*                             @L[$"Subscription:{Subject.Subscription.Type}"] *@
@*                         </MudChip> *@
@*                     </MudTooltip> *@
@*                     <MudText Typo="Typo.body2" Align="Align.Right"> *@
@*                         <em> *@
@*                             @L["Subscription:ExpiresAt", Subject.Subscription.Purchase.ExpiredAt.ToSimpleFormat()] *@
@*                         </em> *@
@*                     </MudText> *@
@*                 </div> *@
@*             } *@
@*             <MudDivider DividerType="DividerType.FullWidth" Class="my-3"/> *@
@*             <div class="d-flex flex-row justify-space-between align-center"> *@
@*                 <div> *@
@*                     <MudText Typo="Typo.body1"> *@
@*                         @L["Subscription:TestRestriction"] *@
@*                     </MudText> *@
@*                     @if (Subject.TestCreating.RestoreAt.HasValue) *@
@*                     { *@
@*                         <MudText Typo="Typo.caption"> *@
@*                             <em> *@
@*                                 @L["Subscription:RestrictionRestoreAt", Subject.TestCreating.RestoreAt.Value.ToSimpleFormat()] *@
@*                             </em> *@
@*                         </MudText> *@
@*                     } *@
@*                 </div> *@
@*                 <MudText Typo="Typo.h6" Class="ml-3"> *@
@*                     @(Subject.TestCreating.Quantity < 0 ? "∞" : Subject.TestCreating.Quantity) *@
@*                 </MudText> *@
@*             </div> *@
@*             <div class="d-flex flex-row justify-space-between align-center"> *@
@*                 <div> *@
@*                     <MudText Typo="Typo.body1"> *@
@*                         @L["Subscription:AnswerRestriction"] *@
@*                     </MudText> *@
@*                     @if (Subject.TestAnswering.RestoreAt.HasValue) *@
@*                     { *@
@*                         <MudText Typo="Typo.caption"> *@
@*                             <em> *@
@*                                 @L["Subscription:RestrictionRestoreAt", Subject.TestAnswering.RestoreAt.Value.ToSimpleFormat()] *@
@*                             </em> *@
@*                         </MudText> *@
@*                     } *@
@*                 </div> *@
@*                 <MudText Typo="Typo.h6" Class="ml-3"> *@
@*                     @(Subject.TestAnswering.Quantity < 0 ? "∞" : Subject.TestAnswering.Quantity) *@
@*                 </MudText> *@
@*             </div> *@
@*         </div> *@
@*     </MudCardContent> *@
@* </MudCard> *@
@* *@
@* @code { *@
@* *@
@*     [Parameter] *@
@*     public EventCallback<SubjectType> OnBuyClick { get; set; } *@
@* *@
@*     [Parameter] *@
@*     public EventCallback<SubjectType> OnManageClick { get; set; } *@
@* *@
@*     private Task OnBuy() => *@
@*         OnBuyClick.InvokeAsync(Subject.Type); *@
@* *@
@*     private Task OnManage() => *@
@*         OnManageClick.InvokeAsync(Subject.Type); *@
@* *@
@* } *@
