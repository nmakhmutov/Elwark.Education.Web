@page "/profile/history/statistics/mixed-tests"
@using Education.Client.Gateways.Models.Statistics
@using Education.Client.Gateways.History
@layout ProfileLayout

@attribute [Authorize]

<ApiResponseViewer Response="@_response">
    <Placeholder>
        <div class="d-flex justify-center mb-3">
            <MudSkeleton SkeletonType="SkeletonType.Text" Height="35px" Width="80%"/>
        </div>
        <StatisticsDetailsGrid>
            <SkeletonCard/>
            <SkeletonCard/>
            <SkeletonCard/>
            <SkeletonCard/>
        </StatisticsDetailsGrid>
    </Placeholder>
    <Result Context="result">
        <Title Value="@L["Tests:Mixed"]"></Title>

        <StatisticsDetailsTitle Title="@L["Tests:Mixed"]" Class="mb-3"/>
        <StatisticsDetailsGrid Class="mb-3 mb-sm-6">
            <StatisticsCard Icon="@Icons.Filled.School" Title="@L["Tests"]" Subtitle="@result.NumberOfTests.Total.Total.ToReadable()">
                <TwoColumnGrid>
                    <div>
                        <Subheader Title="@L["Tests"]" Subtitle="@L["ForAllTime"]"/>
                        <NumberOfTestChart Value="@result.NumberOfTests.Total"/>
                    </div>
                    <div>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.NumberOfTests.Progress.RangeTitle()"/>
                        <ProgressList Items="@result.NumberOfTests.Progress.GetProgress(L)"/>
                    </div>
                </TwoColumnGrid>
            </StatisticsCard>
            <StatisticsCard Icon="@Icons.Filled.PendingActions" Title="@L["Score"]" Subtitle="@result.Score.Total.Total.ToReadable()">
                <TwoColumnGrid>
                    <div>
                        <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                        <ScoreChart Value="@result.Score.Total"/>
                    </div>
                    <div>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.Score.Progress.RangeTitle()"/>
                        <ProgressList Items="@result.Score.Progress.GetProgress(L)"/>
                    </div>
                </TwoColumnGrid>
            </StatisticsCard>
            <StatisticsCard Icon="@Icons.Filled.HelpOutline" Title="@L["Questions"]" Subtitle="@result.AnswerRatio.Total.Questions.ToReadable()">
                <TwoColumnGrid>
                    <div>
                        <Subheader Title="@L["Questions"]" Subtitle="@L["ForAllTime"]"/>
                        <AnswerRatioChart Value="@result.AnswerRatio.Total"/>
                    </div>
                    <div>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.AnswerRatio.Progress.RangeTitle()"/>
                        <ProgressList Items="@result.AnswerRatio.Progress.GetProgress(L)"/>
                    </div>
                </TwoColumnGrid>
            </StatisticsCard>
            <StatisticsCard Icon="@Icons.Filled.Timer" Title="@L["TimeSpent"]" Subtitle="@result.TimeSpent.Total.ToLongFormat()">
                <TwoColumnGrid>
                    <div>
                        <Subheader Title="@L["TimeSpent"]" Subtitle="@L["ForAllTime"]"/>
                        <TimeSpentChart
                            Average="@result.TimeSpent.Average"
                            Max="@result.TimeSpent.Max"
                            Min="@result.TimeSpent.Min"
                            Total="@result.TimeSpent.Total"/>
                    </div>
                    <div>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.TimeSpent.Progress.RangeTitle()"/>
                        <ProgressList Items="@result.TimeSpent.Progress.GetProgress(L)"/>
                    </div>
                </TwoColumnGrid>
            </StatisticsCard>
        </StatisticsDetailsGrid>
        @if (result.Conclusions.Length > 0)
        {
            <MudText Typo="Typo.h5" Class="mb-3">
                @L["Tests:Latest"]
            </MudText>
            <DefaultFillGrid>
                @foreach (var conclusion in result.Conclusions)
                {
                    <MudExpansionPanels>
                        <MudExpansionPanel>
                            <TitleContent>
                                <div class="d-flex">
                                    <MudText Typo="Typo.subtitle1" Class="mr-3">
                                        @conclusion.CompletedAt.ToSimpleFormat()
                                    </MudText>
                                    <MudText Typo="@Typo.subtitle1" Color="@conclusion.Status.GetColor()">
                                        @L[$"ConclusionStatus:{conclusion.Status}"]
                                    </MudText>
                                </div>
                            </TitleContent>
                            <ChildContent>
                                <TestConclusionList
                                    TimeSpent="@conclusion.TimeSpent"
                                    Score="@conclusion.Score"
                                    AnswerRatio="@conclusion.AnswerRatio"/>
                            </ChildContent>
                        </MudExpansionPanel>
                    </MudExpansionPanels>
                }
            </DefaultFillGrid>
        }
    </Result>
</ApiResponseViewer>

@code {

    private ApiResponse<MixedTestStatistics> _response = ApiResponse<MixedTestStatistics>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnParametersSetAsync() =>
        _response = await HistoryClient.Me.GetMixedTestStatisticsAsync();

}
