@if (Status is TestStatus.Allowed)
{
    @ChildContent
}
else
{
    <div class="@Class">
        <MudText Typo="@Typo" Color="Color.Info" Class="mb-3">
            @ErrorManager.Localize(Status)
        </MudText>
        @if (Status is TestStatus.TestCreationMaximum or TestStatus.TestQuestionMistakesMaximum)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OnBuyClick">
                @L["Subscription:Upgrade"]
            </MudButton>
        }
        else if (Status is TestStatus.CurrentTestsMaximum)
        {
            <MudButton Variant="Variant.Filled" Link="@Links.Profile.Index" Color="Color.Primary">
                @L["Profile"]
            </MudButton>
        }
    </div>
}

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private ErrorManager ErrorManager { get; set; } = default!;

    [Inject]
    private IDialogService Dialog { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public TestStatus Status { get; set; }

    [Parameter]
    public SubjectType Subject { get; set; }

    [Parameter]
    public Typo Typo { get; set; } = Typo.body2;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private void OnBuyClick()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Large,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };
        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = Subject
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

}
