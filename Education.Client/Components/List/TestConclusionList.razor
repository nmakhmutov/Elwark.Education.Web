<ul class="@Class">
    @if (Status.HasValue)
    {
        <li class="d-flex flex-row justify-space-between underline mb-1">
            <MudText Typo="@Typo.subtitle1" Color="@Status.Value.GetColor()">
                @L[$"ConclusionStatus:{Status.Value}"]
            </MudText>
        </li>
    }
    @if (Link is not null)
    {
        <li class="d-flex flex-row justify-space-between underline mb-1">
            <MudLink Href="@Link.Href">
                @Link.Title
            </MudLink>
        </li>
    }
    <li class="d-flex flex-row justify-space-between underline mb-1">
        <MudText Typo="Typo.subtitle1">
            @L["TimeSpent"]
        </MudText>
        <MudText Typo="Typo.subtitle1">
            @TimeSpent.ToLongFormat()
        </MudText>
    </li>
    <li class="d-flex flex-row justify-space-between underline mb-1">
        <MudText Typo="Typo.subtitle1">
            @L["Score:Total"]
        </MudText>
        <MudText Typo="Typo.subtitle1">
            @Score.Total.ToReadable()
        </MudText>
    </li>
    <li class="d-flex flex-row">
        <ul class="w-100 ml-6">
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Score:ByQuestions"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @Score.Questions.ToReadable()
                </MudText>
            </li>
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Score:BySpeedBonus"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @Score.Speed.ToReadable()
                </MudText>
            </li>
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Score:NoMistakesBonus"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @Score.NoMistakes.ToReadable()
                </MudText>
            </li>
        </ul>
    </li>
    <li class="d-flex flex-row justify-space-between underline mb-1">
        <MudText Typo="Typo.subtitle1">
            @L["Questions:Total"]
        </MudText>
        <MudText Typo="Typo.subtitle1">
            @AnswerRatio.Questions.ToReadable()
        </MudText>
    </li>
    <li class="d-flex flex-row">
        <ul class="w-100 ml-6">
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Questions:Answered"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @AnswerRatio.Answered.ToReadable()
                </MudText>
            </li>
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Questions:NotAnswered"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @AnswerRatio.NotAnswered.ToReadable()
                </MudText>
            </li>
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Questions:Correct"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @AnswerRatio.Correct.ToReadable()
                </MudText>
            </li>
            <li class="d-flex flex-row justify-space-between underline mb-1">
                <MudText Typo="Typo.subtitle1">
                    @L["Questions:Incorrect"]
                </MudText>
                <MudText Typo="Typo.subtitle1">
                    @AnswerRatio.Incorrect.ToReadable()
                </MudText>
            </li>
        </ul>
    </li>
    @if (CompletedAt.HasValue)
    {
        <li class="d-flex flex-row justify-space-between underline mb-1">
            <MudText Typo="Typo.subtitle1">
                @L["Date"]
            </MudText>
            <MudText Typo="Typo.subtitle1">
                @CompletedAt.Value.ToSimpleFormat()
            </MudText>
        </li>
    }
</ul>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public ConclusionStatus? Status { get; set; }

    [Parameter]
    public DateTime? CompletedAt { get; set; }

    [Parameter]
    public LinkModel? Link { get; set; }

    [Parameter]
    public Score Score { get; set; } = default!;

    [Parameter]
    public AnswerRatio AnswerRatio { get; set; } = default!;

    [Parameter]
    public TimeSpan TimeSpent { get; set; }

}
