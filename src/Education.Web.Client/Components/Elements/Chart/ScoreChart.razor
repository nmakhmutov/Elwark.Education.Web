@using ApexCharts
@using Education.Web.Client.Services.History.Test.Model
@using Education.Web.Client.Services.Model.Test
<div class="@Class">
    @if (Value.Total > 0)
    {
        <ApexChart TItem="Data" Options="@Options">
            <ApexPointSeries
                TItem="Data"
                Items="@Series"
                SeriesType="SeriesType.Donut"
                XValue="@(x => x.Name)"
                YAggregate="@(x => x.Sum(e => e.Value))"/>
        </ApexChart>
    }

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        Chart = new Chart
        {
            Background = "transparent",
            ForeColor = "var(--mud-palette-text-primary)"
        },
        Legend = new Legend
        {
            Show = false
        },
        Colors = new List<string>
        {
            Colors.Green.Accent4,
            Colors.Blue.Default,
            Colors.DeepPurple.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public ScoreModel Value { get; set; } = default!;

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["Score:ByQuestions"], Value.Questions, Colors.Green.Accent4),
        new ChartList.Item(L["Score:BySpeedBonus"], Value.Speed, Colors.Blue.Default),
        new ChartList.Item(L["Score:NoMistakesBonus"], Value.NoMistakes, Colors.DeepPurple.Default),
        new ChartList.Item(L["Score:Total"], Value.Total, null)
    };

    private Data[] Series => new Data[]
    {
        new(L["Score:ByQuestions"], Value.Questions),
        new(L["Score:BySpeedBonus"], Value.Speed),
        new(L["Score:NoMistakesBonus"], Value.NoMistakes)
    };

    private sealed record Data(string Name, decimal Value);

}