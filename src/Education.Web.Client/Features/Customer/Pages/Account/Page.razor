@page "/account"
@using Education.Web.Client.Features.Customer.Services.Account.Model
@using Education.Web.Client.Features.History
@using Education.Web.Client.Features.Customer.Services.Account
@layout MainLayout
@attribute [Authorize]

<PageTitle>
    @L["Account_Title"]
</PageTitle>

<ApiViewer Result="@_response">
    <EduContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1920">
        <EduFillGrid Class="align-start">
            <AccountCard Class="account"/>

            @foreach (var subject in _subjects)
            {
                <SubjectCard Title="@subject.Title" ProfileHref="@subject.ProfileHref" Background="@subject.Image">
                    <Icon>
                        <SubjectIcon Icon="@subject.Icon" Background="@subject.Gradient"/>
                    </Icon>
                    <ChildContent>
                        <UserLevelProgress
                            Class="pa-3 pa-sm-6"
                            Level="@subject.Level"
                            Experience="@subject.Experience"
                            Threshold="@subject.Threshold"/>

                        <MudDivider/>

                        <footer class="pa-3">
                            <MudButton
                                Class="text-transform-none"
                                EndIcon="@Icons.Material.Outlined.ArrowForward"
                                Href="@subject.SubjectHref">
                                @L["Shared_SeeSubjectOfStudy"]
                            </MudButton>
                        </footer>
                    </ChildContent>
                </SubjectCard>
            }
        </EduFillGrid>
    </EduContainer>
</ApiViewer>

@code {
    private ApiResult<SubjectModel[]> _response = ApiResult<SubjectModel[]>.Loading();
    private SubjectEnhancedModel[] _subjects = Array.Empty<SubjectEnhancedModel>();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private ICustomerService CustomerService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _response = await CustomerService.GetSubjectsAsync();
        _subjects = _response.Map(subjects => subjects.Select(x => Enhance(x)).Where(x => x is not null).ToArray())
            .UnwrapOr(Array.Empty<SubjectEnhancedModel>())!;
    }

    private SubjectEnhancedModel? Enhance(SubjectModel model) =>
        model switch {
        {Name: "History"} =>
            new SubjectEnhancedModel(
                L["History_Title"],
                HistoryUrl.Root,
                HistoryUrl.User.MyProfile,
                "/images/history/history.jpg",
                EduIcons.History,
                "linear-gradient(45deg, #ffa726 10%, #ef6c00 90%)",
                model.Level,
                model.Experience,
                model.Threshold
                ),
            _ => null
            };

    private sealed record SubjectEnhancedModel(
        string Title,
        string SubjectHref,
        string ProfileHref,
        string Image,
        string Icon,
        string Gradient,
        uint Level,
        ulong Experience,
        ulong Threshold
        );

}