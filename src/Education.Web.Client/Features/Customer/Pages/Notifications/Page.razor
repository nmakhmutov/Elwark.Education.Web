@page "/account/my/notifications"
@layout MainLayout
@attribute [Authorize]

<PageTitle>
    @L["Notifications_Title"]
</PageTitle>

<EduContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1920">
    <section class="grid">
        <section class="account">
            <AccountCard/>
        </section>
        <section class="notifications">
            <div class="d-flex flex-wrap justify-space-between gap-3 gap-sm-6 mb-3 mb-sm-6">
                <PageBreadcrumbsHeader Items="@Breadcrumbs"/>
                <MudButton
                    Class="text-transform-none"
                    Variant="Variant.Outlined"
                    Color="Color.Primary"
                    Size="Size.Medium"
                    StartIcon="@Icons.Material.Outlined.DoneAll"
                    Disabled="@(!NotificationService.HasNotifications)"
                    OnClick="@MarkAllAsReadAsync">
                    @L["Notifications_MarkAsRead"]
                </MudButton>
            </div>

            <ApiViewer Result="_result" OnReloadClick="@OnInitializedAsync">
                @if (_notifications.Count == 0)
                {
                    <NoContent Title="@L["Notifications_NothingNew"]"/>
                }

                <Virtualize Items="@_notifications" Context="notification">
                    <section class="mud-paper d-flex align-center gap-3 pa-3 mb-3">
                        <NotificationAvatar Subject="@notification.Subject"/>
                        <article class="flex-1">
                            <header class="d-flex align-center gap-3">
                                @if (string.IsNullOrEmpty(notification.Href))
                                {
                                    <MudText Typo="Typo.subtitle1">
                                        @notification.Title
                                    </MudText>
                                }
                                else
                                {
                                    <MudLink Typo="Typo.subtitle1" Href="@notification.Href">
                                        @notification.Title
                                    </MudLink>
                                }
                                <MudText Typo="Typo.caption" Class="mud-text-secondary">
                                    @Customer.Humanize(notification.CreatedAt)
                                </MudText>
                            </header>

                            <footer class="d-flex align-center gap-3">
                                <MudText Typo="Typo.body1">
                                    @notification.Message
                                </MudText>
                                
                                <section class="d-flex gap-3">
                                    @foreach (var reward in notification.Money)
                                    {
                                        <InternalMoney
                                            Currency="@reward.Currency"
                                            Amount="@reward.Amount"
                                            Horizontal/>
                                    }
                                </section>
                            </footer>
                        </article>
                        <aside>
                            <MudIconButton
                                Icon="@Icons.Material.Outlined.MarkEmailRead"
                                OnClick="@(() => MarkAsReadAsync(notification.Id))"/>
                        </aside>
                    </section>
                </Virtualize>

                @if (!string.IsNullOrEmpty(_request.Token))
                {
                    <asside class="d-flex justify-center">
                        <LoadingButton
                            DisableElevation
                            Variant="Variant.Filled"
                            Color="Color.Primary"
                            Text="@L["Button_SeeMore"]"
                            IsLoading="@_isMoreLoading"
                            OnClick="@LoadMoreAsync"/>
                    </asside>
                }
            </ApiViewer>
        </section>
    </section>
</EduContainer>