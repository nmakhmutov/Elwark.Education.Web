<section class="mud-paper @Class">
    <header class="d-flex align-center gap-3 pa-3 pa-sm-6">
        <img class="image object-cover object-center rounded-circle" src="@Customer.Image" alt="@Customer.Name" loading="lazy"/>
        <div class="overflow-hidden">
            <MudText Class="one-line-text" Typo="Typo.h6">
                @Customer.Name
            </MudText>
            <MudText Class="mud-text-secondary" Typo="Typo.body2">
                @L["Account_MemberSince", Customer.Humanize(Customer.CreatedAt)]
            </MudText>
        </div>
    </header>

    <article class="d-flex flex-column gap-3 px-3 px-sm-6">
        @foreach (var item in _items)
        {
            <div class="d-flex align-center">
                <MudText Typo="Typo.body2">
                    <b>@item.Key: &nbsp;</b>
                </MudText>
                <MudText Typo="Typo.body2" Class="mud-text-secondary">
                    @item.Value
                </MudText>
            </div>
        }
    </article>
    
    <MudDivider Class="mt-3 mbt-sm-6"/>
    
    <footer class="pa-3">
        <MudButton
            Class="text-transform-none"
            EndIcon="@Icons.Material.Outlined.OpenInNew"
            IconSize="Size.Small"
            Href="@Configuration["Urls:Account"]"
            Target="_blank">
            @L["Account_Elwark"]
        </MudButton>
    </footer>
</section>

@code {
    private IDictionary<string, string> _items = new Dictionary<string, string>();

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IConfiguration Configuration { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override void OnParametersSet()
    {
        var now = DateTime.Now;

        _items = new Dictionary<string, string>
        {
            [L["Account_TimeZone"]] = Customer.TimeZone.Id,
            [L["Account_StartOfWeek"]] = L[$"DayOfWeek_{Customer.StartOfWeek}"],
            [L["Account_DateFormat"]] = $"{Customer.DateFormat} ({now.ToString(Customer.DateFormat)})",
            [L["Account_TimeFormat"]] = $"{Customer.TimeFormat} ({now.ToString(Customer.TimeFormat)})"
        };
    }

}