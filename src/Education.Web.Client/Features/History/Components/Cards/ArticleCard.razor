<article class="mud-paper card @(Horizontal ? "horizontal" : "vertical") @Class">
    <div class="card-header">
        <a href="@HistoryUrl.Content.Article(Article.Id)">
            <img src="@Article.ThumbnailUrl" alt="@Article.Title" loading="lazy"/>
        </a>
    </div>

    <section class="content flex-grow-1 gap-3 pa-3">
        <header>
            <MudLink Href="@HistoryUrl.Content.Article(Article.Id)" Typo="Typo.h5">
                @Article.Title
            </MudLink>
            <br/>
            <a class="mud-typography mud-link mud-text-secondary mud-link-underline-hover mud-typography-body1" href="@HistoryUrl.Content.Articles(Article.Epoch)">
                @L[Article.Epoch.ResourceKey()]
            </a>
        </header>

        <div class="d-flex justify-space-between align-center gap-3">
            <ContentRating Rating="@Article.Rating" Size="Size.Small" ShowTooltip/>

            <MudTooltip Text="@L["TimeToRead_Title"]">
                <div class="d-flex align-center">
                    <MudIcon Class="mr-1" Icon="@EduIcons.TimeToRead" Size="Size.Small"/>
                    <MudText Typo="Typo.body1">@Article.TimeToRead.Humanize(L)</MudText>
                </div>
            </MudTooltip>
        </div>

        @if (!HideOverview)
        {
            <MudText Class="flex-grow-1" Typo="Typo.body1">
                @(ShortOverview && Article.Overview.Length > 60 ? $"{Article.Overview[..57].TrimEnd()}..." : Article.Overview)
            </MudText>
        }

        @if (!HideFooter)
        {
            <AuthorizeView>
                <aside class="d-flex align-center justify-space-between gap-3">
                    <TotalQuizzesChip
                        Easy="@(Activity?.EasyQuizzes ?? 0)"
                        Hard="@(Activity?.HardQuizzes ?? 0)"/>

                    <ArticleCompletionChip
                        IsCompleted="@Activity?.IsCompleted"
                        Href="@HistoryUrl.User.MyArticle(Article.Id)"
                        ShowTooltip/>

                    <MudSpacer/>

                    @if (OnBookmarkClick is not null)
                    {
                        <BookmarkButton
                            Id="@Article.Id"
                            IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                            OnBookmarkClick="@OnBookmarkClick"/>
                    }
                </aside>
            </AuthorizeView>
        }
    </section>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public ArticleOverviewModel Article { get; set; } = default!;

    [Parameter]
    public UserArticleActivityModel? Activity { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

    [Parameter]
    public bool HideFooter { get; set; }

    [Parameter]
    public bool ShortOverview { get; set; }

    [Parameter]
    public Func<string, Task<ApiResult<bool>>>? OnBookmarkClick { get; set; }

}