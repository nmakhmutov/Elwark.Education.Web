@using Education.Web.Client.Features.History.Services

<article class="mud-paper card @(Horizontal ? "horizontal" : "vertical") @Class">
    <div class="card-header">
        <a href="@HistoryUrl.Content.Course(Course.Id)">
            <img src="@Course.ThumbnailUrl" alt="@Course.Title" loading="lazy"/>
        </a>
    </div>

    <section class="content flex-grow-1 gap-3 pa-3">
        <header>
            <MudLink Href="@HistoryUrl.Content.Course(Course.Id)" Typo="Typo.h5">
                @Course.Title
            </MudLink>
        </header>

        <div class="d-flex justify-space-between align-center gap-3">
            <ContentRating Rating="@Course.Rating" Size="Size.Small" ShowTooltip/>

            <MudTooltip Text="@L["Articles_Title"]">
                <div class="d-flex align-center">
                    <MudIcon Class="mr-1" Icon="@EduIcons.Articles" Size="Size.Small"/>
                    <MudText Typo="Typo.body1">@Course.ArticleCount</MudText>
                </div>
            </MudTooltip>
        </div>

        <MudText Class="flex-grow-1" Typo="Typo.body1">
            @Course.Overview
        </MudText>

        <AuthorizeView>
            <aside class="d-flex align-center justify-space-between gap-3">
                <div class="flex-grow-1">
                    @if (Activity is not null)
                    {
                        if (Activity.IsStarted)
                        {
                            <MudProgressLinear Value="@Activity.Completeness" Color="Color.Primary" Size="Size.Large" Rounded>
                                <MudText Typo="Typo.body2" Color="Color.Dark">
                                    @Activity.Completeness%
                                </MudText>
                            </MudProgressLinear>
                        }
                        else
                        {
                            <MudText Typo="Typo.subtitle1">
                                Not started
                            </MudText>
                        }
                    }
                </div>

                @if (OnBookmarkClick is not null)
                {
                    <BookmarkButton
                        Id="@Course.Id"
                        IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                        OnBookmarkClick="@OnBookmarkClick"/>
                }
            </aside>
        </AuthorizeView>
    </section>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public CourseOverviewModel Course { get; set; } = default!;

    [Parameter]
    public UserCourseActivityModel? Activity { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public Func<string, Task<ApiResult<bool>>>? OnBookmarkClick { get; set; }

}