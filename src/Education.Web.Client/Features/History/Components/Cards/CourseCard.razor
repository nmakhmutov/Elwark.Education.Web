<article class="mud-paper card @(Horizontal ? "horizontal" : "vertical") @Class">
    <div class="card-header">
        <a href="@HistoryUrl.Content.Course(Course.Id)">
            <img src="@Course.ThumbnailUrl" alt="@Course.Title" loading="lazy"/>
        </a>
    </div>

    <section class="content flex-grow-1 gap-3 pa-3">
        <header>
            <div class="@(OneLineTitle ? "one-line-text" : null)">
                <a class="mud-typography mud-link mud-primary-text mud-link-underline-hover mud-typography-h6"
                   href="@HistoryUrl.Content.Course(Course.Id)"
                   alt="@Course.Title"
                   title="@Course.Title">
                    @Course.Title
                </a>
            </div>
            <div class="d-flex align-center justify-space-between">
                <ContentRating Rating="@Course.Rating" ShowTooltip/>

                <MudTooltip Text="@L["Articles_Title"]">
                    <div class="d-flex align-center">
                        <MudText Class="mr-1" Typo="Typo.body1">@Course.ArticleCount</MudText>
                        <MudIcon Icon="@EduIcons.Articles" Size="Size.Small"/>
                    </div>
                </MudTooltip>
            </div>
        </header>

        <div class="flex-grow-1">
            @if (!HideOverview)
            {
                <MudText Typo="Typo.body1">
                    @(ShortOverview && Course.Overview.Length > 60 ? $"{Course.Overview[..57].TrimEnd()}..." : Course.Overview)
                </MudText>
            }
        </div>

        @if (!HideFooter)
        {
            <footer class="d-flex align-center gap-3">
                @if (HasExamination)
                {
                    <CourseCompletion
                        Class="w-100"
                        Status="@(Activity?.Status ?? CourseLearningStatus.NotStarted)"
                        Completeness="@(Activity?.Completeness ?? 0)"
                        Typo="Typo.caption"
                        Size="Size.Small"/>
                }
                
                <MudSpacer/>
                
                <AuthorizeView>
                    <BookmarkButton
                        Id="@Course.Id"
                        IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                        OnBookmarkClick="@OnBookmarkClick"/>
                </AuthorizeView>
            </footer>
        }
    </section>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required CourseOverviewModel Course { get; set; }

    [Parameter, EditorRequired]
    public bool HasExamination { get; set; }

    [Parameter, EditorRequired]
    public UserCourseActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

    [Parameter]
    public bool HideFooter { get; set; }

    [Parameter]
    public bool ShortOverview { get; set; }

    [Parameter]
    public bool OneLineTitle { get; set; }

}