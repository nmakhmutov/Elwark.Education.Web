<article class="mud-paper card @(Horizontal ? "horizontal" : "vertical") @Class">
    <div class="card-header">
        <a href="@HistoryUrl.Content.Course(Course.Id)">
            <img src="@Course.ThumbnailUrl" alt="@Course.Title" loading="lazy"/>
        </a>
    </div>

    <section class="content flex-grow-1 gap-3 pa-3">
        <header class="@(OneLineHeader ? "one-line-text" : null)">
            <a class="mud-typography mud-link mud-primary-text mud-link-underline-hover mud-typography-h5"
               href="@HistoryUrl.Content.Course(Course.Id)"
               alt="@Course.Title">
                @Course.Title
            </a>
        </header>

        <div class="d-flex justify-space-between align-center gap-3">
            <ContentRating Rating="@Course.Rating" ShowTooltip/>

            <MudTooltip Text="@L["Articles_Title"]">
                <div class="d-flex align-center">
                    <MudIcon Class="mr-1" Icon="@EduIcons.Articles" Size="Size.Small"/>
                    <MudText Typo="Typo.body1">@Course.ArticleCount</MudText>
                </div>
            </MudTooltip>
        </div>

        @if (!HideOverview)
        {
            <MudText Class="flex-grow-1" Typo="Typo.body1">
                @(ShortOverview && Course.Overview.Length > 60 ? $"{Course.Overview[..57].TrimEnd()}..." : Course.Overview)
            </MudText>
        }

        @if (!HideFooter)
        {
            <AuthorizeView>
                <aside class="d-flex align-center gap-3">
                    @if (HasExamination)
                    {
                        <CourseCompletion
                            Class="flex-grow-1"
                            Status="@(Activity?.Status ?? CourseLearningStatus.NotStarted)"
                            Completeness="@(Activity?.Completeness ?? 0)"/>
                    }
                    
                    <MudSpacer/>
                    
                    @if (OnBookmarkClick is not null)
                    {
                        <BookmarkButton
                            Id="@Course.Id"
                            IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                            OnBookmarkClick="@OnBookmarkClick"/>
                    }
                </aside>
            </AuthorizeView>
        }
    </section>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public CourseOverviewModel Course { get; set; } = default!;

    [Parameter, EditorRequired]
    public bool HasExamination { get; set; }

    [Parameter]
    public UserCourseActivityModel? Activity { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool OneLineHeader { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

    [Parameter]
    public bool HideFooter { get; set; }

    [Parameter]
    public bool ShortOverview { get; set; }

    [Parameter]
    public Func<string, Task<ApiResult<bool>>>? OnBookmarkClick { get; set; }

}