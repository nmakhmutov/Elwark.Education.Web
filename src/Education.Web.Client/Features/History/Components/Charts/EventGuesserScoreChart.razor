@using ApexCharts
@using Education.Web.Client.Features.History.Services.EventGuesser.Model
<div class="@Class">
    @if (Score.Total > 0)
    {
        <div class="d-flex justify-center">
            <div class="wrapper">
                <ApexChart TItem="Data" Options="@Options">
                    <ApexPointSeries
                        TItem="Data"
                        Items="@Series"
                        SeriesType="SeriesType.Donut"
                        XValue="@(x => x.Name)"
                        YAggregate="@(x => x.Sum(e => e.Value))"/>
                </ApexChart>
            </div>
        </div>
    }

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        Legend = new Legend
        {
            Show = false
        },
        Colors = new List<string>
        {
            Colors.Blue.Default,
            Colors.DeepPurple.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public ScoreModel Score { get; set; } = new(0, 0, 0);

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["EventGuesser:Points"], Score.Points, Colors.Blue.Default),
        new ChartList.Item(L["EventGuesser:Bonus"], Score.Bonus, Colors.DeepPurple.Default),
        new ChartList.Item(L["EventGuesser:Score"], Score.Total, null)
    };

    private Data[] Series => new[]
    {
        new Data(L["EventGuesser:Points"], Score.Points),
        new Data(L["EventGuesser:Bonus"], Score.Bonus)
    };

    private sealed record Data(string Name, decimal Value);

}