@using Education.Web.Client.Features.History.Services
<div class="container @Class">
    <MudRadioGroup Class="radio-group" SelectedOption="@SelectedEpoch" SelectedOptionChanged="@SelectedEpochChanged">
        @foreach (var epoch in GetEpochs())
        {
            <MudRadio Class="radio" Option="@epoch.Type" Color="Color.Primary">
                <div class="mud-paper">
                    <MudImage
                        Class="radio-image rounded-t"
                        Src="@epoch.Image"
                        ObjectFit="ObjectFit.Cover"
                        ObjectPosition="ObjectPosition.Center"
                        Alt="@epoch.Title"/>
                    <MudText Class="pb-1" Typo="Typo.subtitle1" Align="Align.Center">
                        @epoch.Title
                    </MudText>
                </div>
            </MudRadio>
        }
    </MudRadioGroup>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public EpochType SelectedEpoch { get; set; }

    [Parameter]
    public EventCallback<EpochType> SelectedEpochChanged { get; set; }

    [Parameter]
    public string? Class { get; set; }

    private IEnumerable<Epoch> GetEpochs()
    {
        foreach (var epoch in EpochTypeExtensions.List[1..])
            yield return new Epoch(epoch, L[$"Epoch:{epoch.ToFastString()}"], epoch.Image());

        yield return new Epoch(EpochType.None, L["Epoch:Any"], "/images/history/history.jpg");
    }

    private sealed record Epoch(EpochType Type, string Title, string Image);

}