@if (ShowTooltip)
{
    <MudTooltip Text="@L["LearningStatus_Title"]">
        @Chip
    </MudTooltip>
}
else
{
    @Chip
}

@code {

    private Color _color;
    private string? _icon;

    private RenderFragment Chip =>
        @<MudChip
             Class="ma-0"
             Variant="Variant.Outlined"
             Size="@Size"
             Color="_color"
             Icon="@_icon"
             Text="@L.GetStatusTitle(Status)"
             Href="@(Status == CourseLearningStatus.NotStarted ? null : Href)"/>;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public CourseLearningStatus Status { get; set; }

    [Parameter]
    public string? Href { get; set; }

    [Parameter]
    public bool ShowTooltip { get; set; }

    [Parameter]
    public Size Size { get; set; } = Size.Medium;

    protected override void OnParametersSet() =>
        (_color, _icon) = Status switch
        {
            CourseLearningStatus.NotStarted => (Color.Default, Icons.Material.Outlined.RadioButtonUnchecked),
            CourseLearningStatus.InProgress => (Color.Default, Icons.Material.Outlined.RadioButtonUnchecked),
            CourseLearningStatus.ExaminationReady => (Color.Info, Icons.Material.Outlined.ModeStandby),
            CourseLearningStatus.Completed => (Color.Success, Icons.Material.Outlined.CheckCircle),
            _ => throw new ArgumentOutOfRangeException()
        };

}