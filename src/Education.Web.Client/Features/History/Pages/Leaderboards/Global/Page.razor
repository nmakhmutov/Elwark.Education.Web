@page "/history/leaderboards/global"
@using Education.Web.Client.Features.History.Services.Leaderboard.Model
@using Education.Web.Client.Features.History.Services.Leaderboard
@layout HistoryLayout

<PageTitle>@L["LeaderboardGlobal:Name"]</PageTitle>
<ApiViewer Result="@_result" Context="items">
    <EduContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1920">
        <header class="header">
            <section class="title">
                <div class="d-flex align-center">
                    <div class="d-flex align-center justify-center mud-primary white-text rounded mr-3 mr-sm-6">
                        <MudIcon Icon="@Icons.Material.Outlined.StarOutline" Size="Size.Large" Class="ma-6"/>
                    </div>
                    <MudText Typo="Typo.h4">
                        @L["Leaderboard:GlobalName"]
                    </MudText>
                </div>
            </section>
            @foreach (var user in items[..3])
            {
                <RankingCard
                    Rank="@user.Rank"
                    Level="@user.Level"
                    Experience="@user.Experience"
                    Name="@user.FullName"
                    Image="@user.Image"/>
            }
        </header>
    </EduContainer>

    <EduContainer Class="pb-3 pb-sm-6" MaxWidth="EduWidth.W1920">
        <RegularRanking DisableHover>
            <Rank>
                <MudText Typo="Typo.subtitle2">@L["Leaderboard:Rank"]</MudText>
            </Rank>
            <Name>
                <MudText Typo="Typo.subtitle2">@L["Leaderboard:UserName"]</MudText>
            </Name>
            <Level>
                <MudText Typo="Typo.subtitle2">@L["Leaderboard:UserLevel"]</MudText>
            </Level>
            <Experience>
                <MudText Typo="Typo.subtitle2">@L["Leaderboard:UserExperience"]</MudText>
            </Experience>
        </RegularRanking>

        <Virtualize Items="@items[3..]" ItemSize="64" Context="user">
            <RegularRanking Class="mb-3" Background="@GetBackgroundColor(user.Id)">
                <Rank>
                    <MudAvatar Color="Color.Primary">@user.Rank</MudAvatar>
                </Rank>
                <Name>
                    <MudAvatar Image="@user.Image" Alt="@user.FullName" Class="mr-3"/>
                    <MudText Typo="Typo.subtitle1">@user.FullName</MudText>
                </Name>
                <Level>
                    <MudIcon Icon="@EduIcons.Level" Class="green-text text-darken-1 mr-3"/>
                    <MudText Typo="Typo.h6">
                        @user.Level
                    </MudText>
                </Level>
                <Experience>
                    <MudIcon Icon="@EduIcons.Experience" Class="mr-3"/>
                    <MetricNumber Value="@user.Experience" Typo="Typo.h6"/>
                </Experience>
            </RegularRanking>
        </Virtualize>
    </EduContainer>
</ApiViewer>

@code {
    private long _highlightUser;
    private ApiResult<GlobalRankingModel[]> _result = ApiResult<GlobalRankingModel[]>.Loading();

    [Inject]
    private IHistoryLeaderboardService LeaderboardService { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    public AuthenticationStateProvider StateProvider { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _result = await LeaderboardService.GetGlobalAsync();

        var state = await StateProvider.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated ?? false)
            _highlightUser = state.User.GetId();
    }

    private RegularRanking.BackgroundColor GetBackgroundColor(long userId) =>
        _highlightUser == userId ? RegularRanking.BackgroundColor.Highlight : RegularRanking.BackgroundColor.Paper;

}