@using Education.Web.Client.Features.History.Services

<section class="image-background rounded" style="background-image: url('@Image')">
    <article class="cover rounded">
        <header class="header">
            <Breadcrumbs Class="pa-0" Items="@Breadcrumbs" Color="Color.Inherit" SeparatorClass="mud-text-white"/>

            <MudText Typo="Typo.h1" Color="Color.Inherit">
                @Title
            </MudText>

            <MudSpacer/>

            <section>
                <div class="d-flex align-center flex-wrap gap-3 gap-sm-6">
                    <div class="d-flex align-center">
                        <MudIcon Class="mr-1" Icon="@EduIcons.Articles"/>

                        <MudText Typo="Typo.subtitle1">
                            @ArticleCount @L["Shared_Articles"]
                        </MudText>
                    </div>

                    <div class="d-flex align-center">
                        <MudIcon Class="mr-1" Icon="@Icons.Material.Outlined.AccessTime"/>

                        <MudText Typo="Typo.subtitle1">
                            @TimeToRead.Humanize(L)
                        </MudText>
                    </div>
                </div>

                <AuthorizeView>
                    <div class="mt-3">
                        @if (UserActivity.IsStarted)
                        {
                            <MudProgressLinear Value="@UserActivity.Completeness" Color="Color.Primary" Size="Size.Medium" Rounded/>
                        }
                        else
                        {
                            <MudButton
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                Size="Size.Large"
                                DisableElevation
                                DisableRipple
                                OnClick="@(_ => OnStartClick.InvokeAsync(Id))">
                                Start
                            </MudButton>
                        }
                    </div>
                </AuthorizeView>
            </section>
        </header>
    </article>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public string Id { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public string Image { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public int ArticleCount { get; set; }

    [Parameter, EditorRequired]
    public TimeSpan TimeToRead { get; set; }

    [Parameter, EditorRequired]
    public UserCourseActivityModel UserActivity { get; set; } = default!;

    [Parameter, EditorRequired]
    public List<BreadcrumbItem>? Breadcrumbs { get; set; }

    [Parameter, EditorRequired]
    public Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; } = _ => Task.FromResult(ApiResult<bool>.Success(false));

    [Parameter, EditorRequired]
    public EventCallback<string> OnStartClick { get; set; }

}