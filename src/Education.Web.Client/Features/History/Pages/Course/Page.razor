@page "/history/course/{id}"
@layout HistoryLayout

<ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync" Context="model">
    <PageTitle>
        @model.Course.Title
    </PageTitle>

    <PageMetaContent
        Title="@model.Course.Title"
        Description="@model.Course.Description"
        Image="@model.Course.ImageUrl"/>

    <EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1600">
        <CourseHeader
            Class="mb-3 mb-sm-6"
            CourseId="@model.Course.Id"
            Title="@model.Course.Title"
            Image="@model.Course.ImageUrl"
            HasExaminations="@(model.HasEasyExamination || model.HasHardExamination)"
            ArticleCount="@model.Course.Articles.Length"
            Activity="@model.Activity"
            OnLikeClick="@LearnerService.LikeCourseAsync"
            OnDislikeClick="@LearnerService.DislikeCourseAsync"
            OnBookmarkClick="@LearnerService.ToggleCourseBookmarkAsync"
            OnStartClick="@StartCourseAsync"/>

        <section class="content">
            <div class="articles">
                <MudText Typo="Typo.h5">
                    @L["Articles_Title"]
                </MudText>

                @foreach (var (article, activity, hasQuiz) in model.Course.Articles)
                {
                    <ArticleCard
                        Article="@article"
                        HasQuiz="@hasQuiz"
                        Activity="@activity"
                        OnBookmarkClick="@LearnerService.ToggleArticleBookmarkAsync"
                        Horizontal/>
                }
            </div>

            <EduFillGrid Class="aside">
                <section>
                    <MudText Class="mb-3 mb-sm-6" Typo="Typo.h5">
                        @L["Course_Description_Title"]
                    </MudText>

                    <MudText Typo="Typo.body1">
                        @model.Course.Description
                    </MudText>
                </section>

                <CourseDetails Details="@model.Course.Details"/>

                @if (model.Activity?.Status != CourseLearningStatus.NotStarted)
                {
                    <ExaminationCard
                        CourseId="@model.Course.Id"
                        Activity="@model.Activity"
                        HasEasyExamination="@model.HasEasyExamination"
                        HasHardExamination="@model.HasHardExamination"/>
                }
            </EduFillGrid>
        </section>
    </EduContainer>
</ApiViewer>