@page "/history/course/{id}"
@using Education.Web.Client.Features.History.Services.Learner
@layout HistoryLayout

<ApiViewer Result="@_result" Context="course">
    <PageTitle>
        @course.Title
    </PageTitle>

    <PageMetaContent
        Title="@course.Title"
        Description="@course.Description"
        Image="@course.ImageUrl"/>

    <EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1600">
        <CourseHeader
            Class="mb-3 mb-sm-6"
            CourseId="@course.Id"
            Title="@course.Title"
            Image="@course.ImageUrl"
            TimeToRead="@course.TimeToRead"
            ArticleCount="@course.Articles.Length"
            Activity="@course.UserActivity"
            OnLikeClick="@LearnerService.LikeCourseAsync"
            OnDislikeClick="@LearnerService.DislikeCourseAsync"
            OnBookmarkClick="@LearnerService.ToggleCourseBookmarkAsync"
            OnStartClick="@StartCourseAsync"/>

        <section class="content">
            <div class="articles">
                <MudText Typo="Typo.h5">
                    @L["Articles_Title"]
                </MudText>

                @foreach (var (article, activity) in course.Articles)
                {
                    <ArticleCard
                        Article="@article"
                        Activity="@activity"
                        OnBookmarkClick="@LearnerService.ToggleArticleBookmarkAsync"
                        Horizontal/>
                }
            </div>

            <EduFillGrid Class="aside">
                <section>
                    <MudText Class="mb-3 mb-sm-6" Typo="Typo.h5">
                        @L["Course_Description_Title"]
                    </MudText>

                    <MudText Typo="Typo.body1">
                        @course.Description
                    </MudText>
                </section>

                <CourseDetails 
                    Learners="@course.Learners"
                    Rating="@course.Rating"/>
            </EduFillGrid>
        </section>
    </EduContainer>
</ApiViewer>

@code {
    private ApiResult<CourseModel> _result = ApiResult<CourseModel>.Loading();

    [Inject]
    private IHistoryCourseService CourseService { get; set; } = default!;

    [Inject]
    private IHistoryLearnerService LearnerService { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync() =>
        _result = await CourseService.GetAsync(Id);

    private async Task StartCourseAsync(string id)
    {
        var result = await LearnerService.StartCourseAsync(id);
        result.Map(x => _result = ApiResult<CourseModel>.Success(_result.Unwrap() with { UserActivity = x }));
    }

}