@page "/history/date-guessers/{id}/conclusion"
@using Education.Web.Client.Features.History.Services.DateGuesser.Model
@using Education.Web.Client.Features.History.Services.DateGuesser
@layout HistoryLayout
@attribute [Authorize]

<PageTitle>
    @L["History_DateGuesser_Completed"]
</PageTitle>

<ApiViewer Result="@_result" Context="conclusion">
    <MudAlert Class="mb-6 mb-sm-12" Severity="Severity.Success" Square ContentAlignment="HorizontalAlignment.Center">
        @L["History_DateGuesser_Completed"]
    </MudAlert>

    <CompletedStars Class="mb-6" Progress="@_progress"/>

    <RewardsContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1280" Rewards="@conclusion.Rewards"/>

    <EduContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1280">
        <MudTable
            Items="@conclusion.Questions"
            Breakpoint="Breakpoint.Sm"
            Class="mb-3 mb-sm-6"
            Bordered="false"
            Elevation="0"
            Hover>
            <HeaderContent>
                <MudTh>@L["Article_Title"]</MudTh>
                <MudTh>@L["Question_Title"]</MudTh>
                <MudTh>@L["History_DateGuesserCorrect_Answer"]</MudTh>
                <MudTh>@L["History_DateGuesser_UserAnswer"]</MudTh>
                <MudTh>@L["History_DateGuesser_Points"]</MudTh>
                <MudTh>@L["History_DateGuesser_x2Bonus"]</MudTh>
                <MudTh>@L["History_DateGuesser_Score"]</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="@L["Article_Title"]">
                    <MudLink Href="@HistoryUrl.Content.Article(context.Article.Id)">
                        @context.Article.Title
                    </MudLink>
                </MudTd>
                <MudTd DataLabel="@L["Question_Title"]">
                    @context.Title
                </MudTd>
                <MudTd DataLabel="@L["History_DateGuesserCorrect_Answer"]">
                    <HistoryDate
                        Typo="Typo.body2"
                        Date="@context.CorrectAnswer"
                        DateTimeFormatter="@DateTimeFormatter"/>
                </MudTd>
                <MudTd DataLabel="@L["History_DateGuesser_UserAnswer"]">
                    <HistoryDate
                        Typo="Typo.body2"
                        Date="@context.UserAnswer"
                        DateTimeFormatter="@DateTimeFormatter"
                        Color="@(context.IsCorrect ? Color.Success : Color.Error)"/>
                </MudTd>
                <MudTd DataLabel="@L["History_DateGuesser_Points"]">
                    @context.Score.Points
                </MudTd>
                <MudTd DataLabel="@L["History_DateGuesser_x2Bonus"]">
                    @context.Score.Bonus
                </MudTd>
                <MudTd DataLabel="@L["History_DateGuesser_Score"]">
                    @context.Score.Total
                </MudTd>
            </RowTemplate>
            <FooterContent>
                <MudTh/>
                <MudTh/>
                <MudTh/>
                <MudTh/>
                <MudTh>
                    @conclusion.Score.Points
                </MudTh>
                <MudTh>
                    @conclusion.Score.Bonus
                </MudTh>
                <MudTh>
                    <div class="d-flex align-center">
                        <MudText Typo="Typo.subtitle1">
                            @conclusion.Score.Total
                        </MudText>
                        <MudIcon Icon="@EduIcons.Score" Class="ml-1" Size="Size.Small" Color="Color.Primary"/>
                    </div>
                </MudTh>
            </FooterContent>
        </MudTable>

        <div class="d-flex justify-center">
            <MudButton
                Href="@HistoryUrl.DateGuesser.Index"
                Color="Color.Primary"
                Variant="Variant.Filled"
                DisableElevation>
                @L["History_DateGuesser_TakeTheGuesserAgain"]
            </MudButton>
        </div>
    </EduContainer>
</ApiViewer>

@code {
    private ApiResult<DateGuesserConclusionModel> _result = ApiResult<DateGuesserConclusionModel>.Loading();
    private double _progress;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryDateGuesserService DateGuesserService { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _result = await DateGuesserService.GetConclusionAsync(Id);
        _result.Match(
            x => _progress = Math.Round((double)x.Score.Total / x.MaxScore * 100),
            e =>
            {
                if (e.IsDateGuesserNotFound())
                    Navigation.NavigateTo(HistoryUrl.DateGuesser.Index);
            }
            );
    }

    private string DateTimeFormatter(DateTime date) =>
        Customer.Humanize(date);

}