@using Education.Web.Client.Features.History.Services.Store.Model
<article class="mud-paper pa-3">
    <img class="rounded object-cover object-center fluid w-100 mb-3" src="@Product.ImageUrl" alt="@Product.Title" loading="lazy"/>
    <MudText Class="one-line-text" Typo="Typo.subtitle1">
        @Product.Title
    </MudText>
    <MudText Class="one-line-text mud-text-secondary mb-3" Typo="Typo.subtitle2">
        @_subtitle
    </MudText>

    <footer class="d-flex justify-space-between align-center">
        <div>
            @if (Product.Selling.Discount > 0)
            {
                <div class="d-flex align-center">
                    <MudIcon
                        Class="mr-1"
                        Color="Color.Error"
                        Icon="@Icons.Material.Outlined.Discount"
                        Style="width: 15px; height: 15px"/>
                    <MudText Typo="Typo.caption">
                        -@Product.Selling.Discount%
                    </MudText>
                </div>
                <div class="d-flex align-center gap-1">
                    <MudIcon Icon="@EduIcons.Silver" Style="width: 15px; height: 15px"/>
                    <MudText Typo="Typo.body1">
                        @Product.Selling.Total.Amount
                    </MudText>
                    <MudText Class="align-self-start mud-text-secondary" Typo="Typo.caption">
                        <s>@Product.Selling.Original.Amount.ToMetric()</s>
                    </MudText>
                </div>
            }
            else
            {
                <InternalMoney Money="@Product.Selling.Total" Typo="Typo.h6" IconSize="Size.Medium" Horizontal/>
            }
        </div>

        <MudBadge Icon="@Icons.Material.Outlined.Lock" Color="@Color.Error" Visible="@ShowLockBadge" Bordered Overlap>
            <MudButton
                Variant="Variant.Filled"
                Color="Color.Primary"
                OnClick="@(() => OnPurchaseClick.InvokeAsync(Product))"
                DisableElevation>
                @L["Product:Details"]
            </MudButton>
        </MudBadge>
    </footer>
</article>

@code {
    private string? _subtitle;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public ProductModel Product { get; set; } = default!;

    [Parameter, EditorRequired]
    public bool ShowLockBadge { get; set; }

    [Parameter]
    public EventCallback<ProductModel> OnPurchaseClick { get; set; }

    protected override void OnParametersSet() =>
        _subtitle = Product.Inventories.Length > 1
            ? L["Product:InventoryCount", Product.Inventories.Length]
            : Product.Inventories[0].Category.Title;

}