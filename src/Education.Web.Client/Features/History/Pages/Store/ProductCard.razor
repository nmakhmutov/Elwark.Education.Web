@using Education.Web.Client.Features.History.Services.Store.Model

<article class="mud-paper pa-3">
    <MudImage
        Class="w-100 rounded mb-3"
        Src="@Product.ImageUrl"
        Alt="@Product.Title"
        ObjectFit="ObjectFit.Cover"
        ObjectPosition="ObjectPosition.Center"
        Fluid/>

    <MudText Class="one-line-text" Typo="Typo.subtitle1">@Product.Title</MudText>

    <MudText Class="one-line-text mud-text-secondary mb-3" Typo="Typo.subtitle2">@Categories</MudText>

    <footer class="d-flex align-center gap-3">
        <MudIconButton
            Variant="Variant.Outlined"
            Color="Color.Default"
            Icon="@Icons.Material.Outlined.Info"
            OnClick="@(() => OnInformationClick.InvokeAsync(Product))"
            DisableElevation/>

        <MudButton
            Variant="Variant.Filled"
            Color="Color.Primary"
            OnClick="@(() => OnPurchaseClick.InvokeAsync(Product))"
            DisableElevation
            FullWidth>
            <InternalMoney Money="@Product.Selling.Total" IconSize="Size.Small" Horizontal/>
        </MudButton>
    </footer>
</article>

@code {
    private string Categories => string.Join(", ", Product.Inventories.Select(x => x.Category.Title).Distinct());

    [Parameter, EditorRequired]
    public ProductModel Product { get; set; } = default!;

    [Parameter]
    public EventCallback<ProductModel> OnInformationClick { get; set; }

    [Parameter]
    public EventCallback<ProductModel> OnPurchaseClick { get; set; }

}