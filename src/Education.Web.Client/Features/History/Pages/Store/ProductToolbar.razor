@using Education.Web.Client.Models.Inventory
@using Education.Web.Client.Features.History.Services.User.Model
@using Education.Web.Client.Models

<section class="d-flex flex-wrap align-center gap-3 gap-sm-3 @Class">
    <section class="wallet">
        <div>
            <MudText Typo="Typo.caption">
                @L["Shared_Wallet"]
            </MudText>
            @if (Wallet is null)
            {
                <section class="d-flex align-center">
                    <MudSkeleton Class="mr-1" SkeletonType="@SkeletonType.Circle" Width="20px" Height="20px"/>
                    <MudSkeleton SkeletonType="@SkeletonType.Text" Width="22px" Height="16px"/>
                </section>
            }
            else
            {
                <div class="d-flex align-center gap-3">
                    @foreach (var money in Wallet.Wallet)
                    {
                        <InternalMoney
                            Currency="@money.Key"
                            Amount="@money.Value"
                            Typo="Typo.subtitle1"
                            Horizontal/>
                    }
                </div>
            }
        </div>

        <div>
            <MudText Typo="Typo.caption">
                @L["Shared_Backpack"]
            </MudText>
            <section class="d-flex align-center">
                @if (Wallet is null)
                {
                    <MudSkeleton Class="mr-1" SkeletonType="@SkeletonType.Circle" Width="20px" Height="20px"/>
                    <MudSkeleton SkeletonType="@SkeletonType.Text" Width="22px" Height="16px"/>
                }
                else
                {
                    <MudIcon Class="mr-1" Icon="@EduIcons.Backpack" Size="@Size.Small"/>
                    <div class="d-flex align-center">
                        <MetricNumber Value="@Wallet.Backpack.Fullness"
                                      Typo="@Typo.subtitle1"
                                      Color="@GetBackpackColor()"/>
                        <MudText Typo="@Typo.subtitle1">/</MudText>
                        <MetricNumber Value="@Wallet.Backpack.Capacity"
                                      Typo="@Typo.subtitle1"/>
                    </div>
                }
            </section>
        </div>
    </section>

    <MudSpacer/>

    <div class="dropdown">
        <MudSelect T="CategoryType"
                   Value="@Filter.Category"
                   ValueChanged="@CategoryChanged"
                   Label="@L["History_ProductsFilterCategory"]"
                   Margin="Margin.Dense"
                   Dense>
            <MudSelectItem Value="@CategoryType.None">
                @L["History_ProductsFilterCategoryAll"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Profile">
                @L["History_ProductsFilterCategoryProfile"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Quiz">
                @L["History_ProductsFilterCategoryQuiz"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Examination">
                @L["History_ProductsFilterCategoryExamination"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.EventGuesser">
                @L["History_ProductsFilterCategoryEventGuesser"]
            </MudSelectItem>
        </MudSelect>
    </div>

    <div class="dropdown">
        <MudSelect T="Sort"
                   Value="@Filter.Sort"
                   ValueChanged="@SortChanged"
                   Label="@L["Shared_Sort"]"
                   Margin="Margin.Dense"
                   Dense>
            <MudSelectItem Value="@Sort.Featured">
                @L["History_ProductsFilterSortFeatured"]
            </MudSelectItem>
            <MudSelectItem Value="@Sort.PriceAsc">
                @L["History_ProductsFilterSortPriceAsc"]
            </MudSelectItem>
            <MudSelectItem Value="@Sort.PriceDesc">
                @L["History_ProductsFilterSortPriceDesc"]
            </MudSelectItem>
            <MudSelectItem Value="@Sort.DiscountAsc">
                @L["History_ProductsFilterSortDiscountAsc"]
            </MudSelectItem>
            <MudSelectItem Value="@Sort.DiscountDesc">
                @L["History_ProductsFilterSortDiscountDesc"]
            </MudSelectItem>
            <MudSelectItem Value="@Sort.Title">
                @L["History_ProductsFilterSortTitle"]
            </MudSelectItem>
        </MudSelect>
    </div>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public InventoryModel? Wallet { get; set; }

    [Parameter]
    public ProductsFilter Filter { get; set; } = ProductsFilter.Empty;

    [Parameter]
    public EventCallback<ProductsFilter> FilterChanged { get; set; }

    private Task CategoryChanged(CategoryType value) =>
        FilterChanged.InvokeAsync(Filter = Filter with { Category = value });

    private Task SortChanged(Sort value) =>
        FilterChanged.InvokeAsync(Filter = Filter with { Sort = value });

    private Color GetBackpackColor()
    {
        if (Wallet is null)
            return Color.Default;

        return Wallet.Backpack.Fullness > Wallet.Backpack.Capacity ? Color.Error : Color.Default;
    }

}