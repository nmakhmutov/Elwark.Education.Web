<article class="mud-paper pa-3">
    <img class="rounded object-cover object-center fluid w-100 mb-3" src="@Bundle.ImageUrl" alt="@Bundle.Title" loading="lazy"/>

    <MudText Class="one-line-text" Typo="Typo.subtitle1">
        @Bundle.Title
    </MudText>

    <MudText Class="one-line-text mud-text-secondary mb-3" Typo="Typo.subtitle2">
        @Subtitle
    </MudText>

    <footer class="d-flex justify-space-between align-center">
        <div>
            @if (Bundle.Price.Discount > 0)
            {
                <div class="d-flex align-center">
                    <MudIcon
                        Class="mr-1"
                        Color="Color.Error"
                        Icon="@Icons.Material.Outlined.Discount"
                        Style="width: 15px; height: 15px"/>
                    <MudText Typo="Typo.caption">
                        -@Bundle.Price.Discount%
                    </MudText>
                </div>
                <div class="d-flex align-center gap-1">
                    <MudIcon Icon="@EduIcons.Silver" Style="width: 15px; height: 15px"/>
                    <MudText Typo="Typo.body1">
                        @Bundle.Price.Total.Amount
                    </MudText>
                    <MudText Class="align-self-start mud-text-secondary" Typo="Typo.caption">
                        <s>@Bundle.Price.Original.Amount.ToMetric()</s>
                    </MudText>
                </div>
            }
            else
            {
                <InternalMoney
                    Currency="@Bundle.Price.Total.Currency"
                    Amount="@Bundle.Price.Total.Amount"
                    Typo="Typo.h6"
                    IconSize="Size.Medium"
                    Horizontal/>
            }
        </div>

        <MudBadge Icon="@Icons.Material.Outlined.Lock" Color="@Color.Error" Visible="@ShowLockBadge" Bordered Overlap>
            <MudButton
                Variant="Variant.Filled"
                Color="Color.Primary"
                OnClick="@(() => OnPurchaseClick.InvokeAsync(Bundle))"
                DisableElevation>
                @L["Button_Details"]
            </MudButton>
        </MudBadge>
    </footer>
</article>

@code {

    private string Subtitle =>
        Bundle.Inventories.Length > 1
            ? L["Product_InventoryCount", Bundle.Inventories.Length]
            : Bundle.Inventories[0].Category.Title;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public Product.BundleModel Bundle { get; set; } = default!;

    [Parameter, EditorRequired]
    public bool ShowLockBadge { get; set; }

    [Parameter]
    public EventCallback<Product.BundleModel> OnPurchaseClick { get; set; }

}