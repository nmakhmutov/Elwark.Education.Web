@using Education.Web.Client.Models.Inventory
<section class="d-flex flex-wrap align-center gap-3 gap-sm-3 @Class">
    <MudTextField
        T="string"
        Value="@Filter.Search"
        ValueChanged="@SearchChanged"
        Variant="Variant.Outlined"
        Margin="Margin.Dense"
        Adornment="Adornment.Start"
        AdornmentIcon="@Icons.Material.Outlined.Search"
        Placeholder="@L["Search_Title"]"
        Clearable
        Immediate/>

    <div class="dropdown">
        <MudSelect T="CategoryType"
                   Value="@Filter.Category"
                   ValueChanged="@CategoryChanged"
                   Margin="Margin.Dense"
                   Variant="Variant.Outlined"
                   Label="@L["History_InventoryStore_Category_Title"]"
                   Dense>
            <MudSelectItem Value="@CategoryType.None">
                @L["History_InventoryStore_Category_All"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Profile">
                @L["History_InventoryStore_Category_Profile"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Quiz">
                @L["History_InventoryStore_Category_Quiz"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.Examination">
                @L["History_InventoryStore_Category_Examination"]
            </MudSelectItem>
            <MudSelectItem Value="@CategoryType.DateGuesser">
                @L["History_InventoryStore_Category_DateGuesser"]
            </MudSelectItem>
        </MudSelect>
    </div>

    <div class="dropdown">
        <MudSelect T="ProductSort"
                   Value="@Filter.Sort"
                   ValueChanged="@SortChanged"
                   Variant="Variant.Outlined"
                   Label="@L["SortBy_Title"]"
                   Margin="Margin.Dense"
                   Dense>
            <MudSelectItem Value="@ProductSort.Featured">
                @L["History_InventoryStore_Sort_Featured"]
            </MudSelectItem>
            <MudSelectItem Value="@ProductSort.PriceAsc">
                @L["History_InventoryStore_Sort_PriceAsc"]
            </MudSelectItem>
            <MudSelectItem Value="@ProductSort.PriceDesc">
                @L["History_InventoryStore_Sort_PriceDesc"]
            </MudSelectItem>
            <MudSelectItem Value="@ProductSort.DiscountAsc">
                @L["History_InventoryStore_Sort_DiscountAsc"]
            </MudSelectItem>
            <MudSelectItem Value="@ProductSort.DiscountDesc">
                @L["History_InventoryStore_Sort_DiscountDesc"]
            </MudSelectItem>
            <MudSelectItem Value="@ProductSort.Title">
                @L["History_InventoryStore_Sort_ProductTitle"]
            </MudSelectItem>
        </MudSelect>
    </div>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public ProductsFilter Filter { get; set; } = ProductsFilter.Empty;

    [Parameter]
    public EventCallback<ProductsFilter> FilterChanged { get; set; }

    [Parameter]
    public string? Class { get; set; }

    private Task CategoryChanged(CategoryType category) =>
        FilterChanged.InvokeAsync(Filter with { Category = category });

    private Task SortChanged(ProductSort sort) =>
        FilterChanged.InvokeAsync(Filter with { Sort = sort });

    private void SearchChanged(string? search) =>
        FilterChanged.InvokeAsync(Filter with { Search = search });

}