<article class="mud-paper pa-3">
    <img class="rounded object-cover object-center fluid w-100 mb-3" src="@Bundle.ImageUrl" alt="@Bundle.Title" loading="lazy"/>

    <MudText Class="one-line-text" Typo="Typo.subtitle1">
        @Bundle.Title
    </MudText>

    <MudText Class="one-line-text mud-text-secondary mb-3" Typo="Typo.subtitle2">
        @Subtitle
    </MudText>

    <footer class="d-flex justify-space-between align-center">
        <ProductPrice Price="@Bundle.Price"/>

        <MudBadge Icon="@Icons.Material.Outlined.Lock" Color="@Color.Error" Visible="@ShowLockBadge" Bordered Overlap>
            <MudIconButton
                Icon="@Icons.Material.Outlined.ShoppingCart"
                Variant="Variant.Filled"
                Color="Color.Primary"
                OnClick="@(() => OnPurchaseClick.InvokeAsync(Bundle))"
                DisableElevation/>
        </MudBadge>
    </footer>
</article>

@code {

    private string Subtitle =>
        Bundle.Inventories.Length > 1
            ? L["Product_InventoryCount", Bundle.Inventories.Length]
            : L.GetInventoryCategoryTypeTitle(Bundle.Inventories[0].Category);

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public Product.BundleModel Bundle { get; set; } = default!;

    [Parameter, EditorRequired]
    public bool ShowLockBadge { get; set; }

    [Parameter]
    public EventCallback<Product.BundleModel> OnPurchaseClick { get; set; }

}