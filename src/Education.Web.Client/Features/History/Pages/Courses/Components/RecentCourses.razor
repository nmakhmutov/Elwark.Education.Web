@using Education.Web.Client.Features.History.Clients
@using Education.Web.Client.Features.History.Clients.Course
@using Education.Web.Client.Features.History.Clients.Course.Request
@using Education.Web.Client.Features.History.Clients.Learner
@using Education.Web.Client.Clients
<EduFillGrid>
    <ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync">
        <Loading>
            @for (var i = 0; i < 12; i++)
            {
                <SkeletonCard/>
            }
        </Loading>
        <ChildContent Context="articles">
            @foreach (var item in articles.Items)
            {
                <CourseCard
                    Course="@item.Course"
                    Activity="@item.Activity"
                    HasExamination="@item.HasExamination"
                    OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"
                    OneLineTitle/>
            }
        </ChildContent>
    </ApiViewer>
</EduFillGrid>

@code {

    private ApiResult<PagingOffsetModel<UserCourseOverviewModel>> _result =
        ApiResult<PagingOffsetModel<UserCourseOverviewModel>>.Loading();

    [Inject]
    private IHistoryCourseClient CourseClient { get; set; } = default!;

    [Inject]
    private IHistoryLearnerClient LearnerClient { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _result = await CourseClient
            .GetAsync(new GetCourseRequest(GetCourseRequest.SortType.Newest, 0, 12));

}