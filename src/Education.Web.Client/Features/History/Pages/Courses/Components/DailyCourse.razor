<ApiViewer Result="@_result" Context="item">
    <div class="grid @Class">
        <div class="image">
            <img src="@item.Course.ThumbnailUrl" alt="@item.Course.Title" loading="lazy"/>
        </div>
        <article class="text">
            <MudText Class="mb-12" Typo="Typo.subtitle1" Color="Color.Default">
                <em>
                    From today's featured course
                </em>
            </MudText>

            <ContentRating
                Class="d-flex align-center my-3"
                Rating="@item.Course.Rating"
                Size="Size.Small"
                ShowTooltip/>

            <MudLink Href="@HistoryUrl.Content.Course(item.Course.Id)" Typo="Typo.h4" Color="Color.Inherit">
                @item.Course.Title
            </MudLink>

            <MudText Class="my-6" Typo="Typo.subtitle1">
                @item.Course.Overview
            </MudText>

            <MudButton
                Link="@HistoryUrl.Content.Course(item.Course.Id)"
                Variant="Variant.Filled"
                Color="Color.Primary"
                DisableElevation>
                @L["Button_Details"]
            </MudButton>
        </article>
    </div>
</ApiViewer>

@code {

    private ApiResult<UserCourseOverviewModel> _result =
        ApiResult<UserCourseOverviewModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryCourseService HistoryCourseService { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var request = new GetCourseRequest(GetCourseRequest.SortType.Trending, 10, 1);
        _result = (await HistoryCourseService.GetAsync(request))
            .Map(x => x.Items.First());
    }

}