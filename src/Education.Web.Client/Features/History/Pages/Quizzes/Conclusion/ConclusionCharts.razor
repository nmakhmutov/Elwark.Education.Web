@using Education.Web.Client.Features.History.Services.Quiz.Model
<div class="statistics">
    <PercentChartCard
        Title="@L["TimeSpent"]"
        Subtitle="@($"{ConclusionModel.TimeSpent.Raw.Humanize()} / {ConclusionModel.TimeSpent.Possible.Humanize()}")"
        Percentage="@Math.Round(ConclusionModel.TimeSpent.Scaled * 100)"/>

    <PercentChartCard
        Title="@L["Score"]"
        Subtitle="@($"{ConclusionModel.TotalScore.Raw.ToMetric()} / {ConclusionModel.TotalScore.Possible.ToMetric()}")"
        Percentage="@Math.Round(ConclusionModel.TotalScore.Scaled * 100)"/>

    <PercentChartCard
        Title="@L["Score:ByQuestions"]"
        Subtitle="@($"{ConclusionModel.QuestionScore.Raw.ToMetric()} / {ConclusionModel.QuestionScore.Possible.ToMetric()}")"
        Percentage="@Math.Round(ConclusionModel.QuestionScore.Scaled * 100)"/>

    <PercentChartCard
        Title="@L["Score:NoMistakesBonus"]"
        Subtitle="@($"{ConclusionModel.NoMistakeScore.Raw.ToMetric()} / {ConclusionModel.NoMistakeScore.Possible.ToMetric()}")"
        Percentage="@Math.Round(ConclusionModel.NoMistakeScore.Scaled * 100)"/>

    <PercentChartCard
        Title="@L["Score:BySpeedBonus"]"
        Subtitle="@($"{ConclusionModel.SpeedScore.Raw.ToMetric()} / {ConclusionModel.SpeedScore.Possible.ToMetric()}")"
        Percentage="@Math.Round(ConclusionModel.SpeedScore.Scaled * 100)"/>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public QuizConclusionModel ConclusionModel { get; set; } = default!;

}