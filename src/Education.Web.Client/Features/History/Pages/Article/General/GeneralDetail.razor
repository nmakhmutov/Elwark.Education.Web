@using Education.Web.Client.Features.History.Services
@using Education.Web.Client.Features.History.Services.Article.Model
@using Education.Web.Client.Models.Content

<EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1440">
    <header class="d-flex flex-column align-center mb-3 mb-sm-6">
        <Breadcrumbs Items="@Breadcrumbs" Class="pa-0 mb-3"/>

        <ArticleTitle Class="mb-3">
            @Article.Title
        </ArticleTitle>

        <MudText Class="w-max-960" Typo="Typo.body1" Align="Align.Justify">
            @Article.Description
        </MudText>
    </header>

    <aside class="image-wrapper mx-auto mb-3 mb-sm-6">
        <img class="image object-cover object-center" src="@Article.ImageUrl" alt="@Article.Title"/>
    </aside>

    <ContentGrid>
        <Header>
            <ContentToolbarCard/>
        </Header>

        <Content>
            <ContentCard Content="@Article.Content"/>
        </Content>

        <Sidebar>
            <ArticleInformation TimeToRead="@Article.TimeToRead" Rating="@Article.Rating"/>

            <AuthorizeView>
                <QuizCard ArticleId="@Article.Id" HasQuiz="@HasQuiz" Activity="@Activity"/>

                <UserToolbarCard
                    ArticleId="@Article.Id"
                    Activity="@Activity"
                    OnBookmarkClick="@OnBookmarkClick"
                    OnLikeClick="@OnLikeClick"
                    OnDislikeClick="@OnDislikeClick"/>
            </AuthorizeView>
        </Sidebar>
    </ContentGrid>

    <RelatedArticles
        Class="mt-sm-6"
        ArticleId="@Article.Id"
        Title="@L["Shared_RelatedArticles"]"
        OnBookmarkClick="@OnBookmarkClick"/>
</EduContainer>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History_Title"], HistoryUrl.Root),
        new BreadcrumbItem(L[$"History_Epoch{Article.Epoch.ToFastString()}"], HistoryUrl.Content.Articles(Article.Epoch))
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public ArticleDetail.GeneralModel Article { get; set; } = default!;

    [Parameter, EditorRequired]
    public UserArticleActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public bool HasQuiz { get; set; }

    [Parameter, EditorRequired]
    public Func<Task<bool>> OnLikeClick { get; set; } = () => Task.FromResult(false);

    [Parameter, EditorRequired]
    public Func<Task<bool>> OnDislikeClick { get; set; } = () => Task.FromResult(false);

    [Parameter, EditorRequired]
    public Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; } = _ => Task.FromResult(ApiResult<bool>.Success(false));

}