@using Education.Web.Client.Features.History.Services

<div class="d-flex justify-center justify-md-space-around align-center">
    <div>
        <MudText Class="text-transform-uppercase" Typo="Typo.body2">
            @L["History_Person_Born"]
        </MudText>
        <HistoryDate 
            Class="date"
            Typo="Typo.h4"
            Date="@Born"
            DateTimeFormatter="@DateTimeFormatter"
            Color="Color.Info"/>
        <MudText Typo="Typo.body2">
            @Born?.Place
        </MudText>
    </div>

    @if (Born is not null && Died is not null)
    {
        <MudText Class="px-6 px-md-0" Typo="Typo.h2" Color="Color.Info">&#8212;</MudText>
    }

    <div>
        <MudText Class="text-transform-uppercase" Typo="Typo.body2">
            @L["History_Person_Died"]
        </MudText>
        <HistoryDate 
            Class="date"
            Typo="Typo.h4"
            Date="@Died"
            DateTimeFormatter="@DateTimeFormatter"
            Color="Color.Info"/>
        <MudText Typo="Typo.body2">
            @Died?.Place
        </MudText>
    </div>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public PersonBirthdayModel? Born { get; set; }

    [Parameter, EditorRequired]
    public PersonBirthdayModel? Died { get; set; }

    [Parameter, EditorRequired]
    public Func<DateTime, string> DateTimeFormatter { get; set; } = date => date.ToLongDateString();
}