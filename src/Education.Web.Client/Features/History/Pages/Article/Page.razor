@page "/history/article/{id}"
@using Education.Web.Client.Features.History.Services.Article.Model
@layout HistoryLayout

<ApiViewer Result="@_result" Context="result">
    <PageTitle>
        @result.Article.Title
    </PageTitle>

    <PageMetaContent
        Title="@result.Article.Title" 
        Description="@result.Article.Description" 
        Image="@result.Article.ImageUrl"/>

    @switch (result.Article)
    {
        case ArticleDetail.BattleModel battle:
            <BattleDetail
                Battle="@battle"
                HasQuiz="@result.HasQuiz"
                Activity="@result.Activity"
                OnLikeClick="@LikeAsync"
                OnDislikeClick="@DislikeAsync"
                OnBookmarkClick="@UserService.ToggleArticleBookmarkAsync"/>
            break;

        case ArticleDetail.EmpireModel empire:
            <EmpireDetail
                Empire="@empire"
                HasQuiz="@result.HasQuiz"
                Activity="@result.Activity"
                OnLikeClick="@LikeAsync"
                OnDislikeClick="@DislikeAsync"
                OnBookmarkClick="@UserService.ToggleArticleBookmarkAsync"/>
            break;

        case ArticleDetail.GeneralModel article:
            <GeneralDetail
                Article="@article"
                HasQuiz="@result.HasQuiz"
                Activity="@result.Activity"
                OnLikeClick="@LikeAsync"
                OnDislikeClick="@DislikeAsync"
                OnBookmarkClick="@UserService.ToggleArticleBookmarkAsync"/>
            break;

        case ArticleDetail.PersonModel person:
            <PersonDetail
                Person="@person"
                HasQuiz="@result.HasQuiz"
                Activity="@result.Activity"
                OnLikeClick="@LikeAsync"
                OnDislikeClick="@DislikeAsync"
                OnBookmarkClick="@UserService.ToggleArticleBookmarkAsync"/>
            break;
    }
</ApiViewer>

@code {
    private ApiResult<UserArticleDetailModel> _result = ApiResult<UserArticleDetailModel>.Loading();

    [Inject]
    private IHistoryArticleService ArticleService { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        _result = ApiResult<UserArticleDetailModel>.Loading();
        _result = await ArticleService.GetAsync(Id);
    }

    private async Task<bool> LikeAsync()
    {
        var response = await UserService.LikeArticleAsync(Id);
        return response.IsSuccess;
    }

    private async Task<bool> DislikeAsync()
    {
        var response = await UserService.DislikeArticleAsync(Id);
        return response.IsSuccess;
    }

}