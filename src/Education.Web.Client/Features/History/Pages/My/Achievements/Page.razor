@page "/history/my/achievements"
@using Education.Web.Client.Features.History.Services.User.Model
@layout HistoryLayout
@attribute [Authorize]

<PageTitle>
    @L["Achievements_Title"]
</PageTitle>

<EduPageHeader Class="pa-3 pa-sm-6" Title="@L["Achievements_Title"]" Breadcrumbs="@Breadcrumbs">
    <MudText Typo="Typo.h5">
        @_subtitle
    </MudText>
</EduPageHeader>

<ApiViewer Result="@_result" Context="achievements">
    <EduContainer Class="pb-3 pb-sm-6" MaxWidth="EduWidth.W1920">
        <section class="grid">
            @foreach (var category in achievements.Categories)
            {
                <section class="sidebar">
                    <div class="sticky-info">
                        <div class="d-flex align-center justify-space-between gap-3 mb-3">
                            <MudText Typo="@Typo.h5">
                                @category.Title
                            </MudText>
                            <MudText Typo="@Typo.subtitle1">
                                @category.Unlocked/@category.Total
                            </MudText>
                        </div>

                        <MudText Typo="@Typo.body1">
                            @category.Description
                        </MudText>
                    </div>
                </section>

                <section class="content">
                    <EduFillGrid>
                        @foreach (var achievement in category.Achievements)
                        {
                            <AchievementCard Achievement="@achievement" DateTimeFormatter="@Customer.Humanize" Paper/>
                        }
                    </EduFillGrid>
                </section>
            }
        </section>
    </EduContainer>
</ApiViewer>

@code {
    private string? _subtitle;

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History_Title"], HistoryUrl.Root),
        new BreadcrumbItem(L["User_Profile_Title"], HistoryUrl.User.MyProfile)
    };

    private ApiResult<AchievementsModel> _result = ApiResult<AchievementsModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _result = await UserService.GetAchievementsAsync();
        _subtitle = _result.Map(x => $"{x.Unlocked} / {x.Total}")
            .UnwrapOr(string.Empty);
    }

}