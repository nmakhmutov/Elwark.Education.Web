@page "/history/my/event-guessers"
@using Education.Web.Client.Features.History.Services.User.Model.EventGuesser
@layout HistoryLayout
@attribute [Authorize]

<PageTitle>
    @L["History_EventGuessers"]
</PageTitle>

<EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1920">
    <EduPageHeader Title="@L["History_EventGuessers"]" Breadcrumbs="@Breadcrumbs"/>
</EduContainer>

<ApiViewer Result="@_result" Context="profile">
    <EduContainer Class="pb-3 pb-sm-6" MaxWidth="EduWidth.W1920">
        <EduFillGrid>
            <StatisticsCard
                Title="@L["History_EventGuessersSmall"]"
                Value="@profile.SmallEventGuesser.Tests"
                Href="@HistoryUrl.User.MySmallEventGuessers">
                <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                <EventGuesserScoreChart Score="@profile.SmallEventGuesser.Score"/>
            </StatisticsCard>

            <StatisticsCard
                Title="@L["History_EventGuessersMedium"]"
                Value="@profile.MediumEventGuesser.Tests"
                Href="@HistoryUrl.User.MyMediumEventGuessers">
                <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                <EventGuesserScoreChart Score="@profile.MediumEventGuesser.Score"/>
            </StatisticsCard>

            <StatisticsCard
                Title="@L["History_EventGuessersLarge"]"
                Value="@profile.LargeEventGuesser.Tests"
                Href="@HistoryUrl.User.MyLargeEventGuessers">
                <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                <EventGuesserScoreChart Score="@profile.LargeEventGuesser.Score"/>
            </StatisticsCard>

            <ActivityCard
                Class="grid-column-sm-full"
                Title="@L["Statistics:Daily"]"
                Activities="@_daily"
                DateFormat="dd MMM"/>

            @if (_monthly.Length > 1)
            {
                <ActivityCard
                    Class="grid-column-full"
                    Title="@L["Statistics:Monthly"]"
                    Activities="@_monthly"
                    DateFormat="MMM yyyy"/>
            }
        </EduFillGrid>
    </EduContainer>
</ApiViewer>

@code {
    private EventGuessersStatisticsModel.ProgressModel[] _daily = Array.Empty<EventGuessersStatisticsModel.ProgressModel>();
    private EventGuessersStatisticsModel.ProgressModel[] _monthly = Array.Empty<EventGuessersStatisticsModel.ProgressModel>();
    private ApiResult<EventGuessersStatisticsModel> _result = ApiResult<EventGuessersStatisticsModel>.Loading();

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History_Title"].Value, HistoryUrl.Root),
        new BreadcrumbItem(L["Shared_UserProfile"].Value, HistoryUrl.User.MyProfile)
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _result = await UserService.GetEventGuesserStatisticsAsync();
        _result.Match(model =>
        {
            var today = DateOnly.FromDateTime(DateTime.UtcNow);
            _daily = model.Daily
                .FillDailyGaps(today, x => x.Date, x => new EventGuessersStatisticsModel.ProgressModel(x, 0, 0, 0))
                .ToArray();

            _monthly = model.Monthly
                .FillMonthlyGaps(today, x => x.Date, x => new EventGuessersStatisticsModel.ProgressModel(x, 0, 0, 0))
                .ToArray();
        });
    }

}