@using ApexCharts
@using Education.Web.Client.Features.History.Services.User.Model.EventGuesser
<div class="@Class">
    @if (AnswerRatio.Total > 0)
    {
        <ApexChart TItem="Data" Options="@Options">
            <ApexPointSeries
                TItem="Data"
                Items="@Series"
                SeriesType="SeriesType.Donut"
                XValue="@(x => x.Name)"
                YAggregate="@(x => x.Sum(e => e.Value))"/>
        </ApexChart>
    }

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        Legend = new Legend
        {
            Show = false
        },
        Colors = new List<string>
        {
            Colors.Green.Accent4,
            Colors.Red.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public AnswerRatioModel AnswerRatio { get; set; } = new(0, 0, 0);

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["History_EventGuesserCorrect"], AnswerRatio.Correct, Colors.Green.Accent4),
        new ChartList.Item(L["History_EventGuesserIncorrect"], AnswerRatio.Incorrect, Colors.Red.Default),
        new ChartList.Item(L["History_EventGuesserQuestions"], AnswerRatio.Total, null)
    };

    private Data[] Series => new[]
    {
        new Data(L["History_EventGuesserCorrect"], AnswerRatio.Correct),
        new Data(L["History_EventGuesserIncorrect"], AnswerRatio.Incorrect)
    };

    private sealed record Data(string Name, decimal Value);

}