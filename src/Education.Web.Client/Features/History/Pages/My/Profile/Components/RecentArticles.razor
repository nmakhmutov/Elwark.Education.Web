@using Education.Web.Client.Features.History.Services.Learner
@using Education.Web.Client.Features.History.Services.Learner.Request
<section class="mud-paper pa-3 pa-sm-6 @Class">
    <MudText Class="mb-3 mb-sm-6" Typo="Typo.h6">
        Recent articles
    </MudText>
    <ApiViewer Result="@_response" OnReloadClick="@OnInitializedAsync">
        <ChildContent Context="page">
            <EduFillGrid>
                @foreach (var article in page.Items)
                {
                    <ArticleCard
                        Article="@article.Article"
                        HasQuiz="@article.HasQuiz"
                        Activity="@article.Activity"/>
                }
            </EduFillGrid>
        </ChildContent>
        <Loading>
            <EduFillGrid>
                @for (var i = 0; i < _count; i++)
                {
                    <SkeletonCard/>
                }
            </EduFillGrid>
        </Loading>
    </ApiViewer>
</section>

@code {
    private int _count = 6;

    private ApiResult<PagingTokenModel<UserArticleOverviewModel>> _response =
        ApiResult<PagingTokenModel<UserArticleOverviewModel>>.Loading();

    [Inject]
    private IHistoryLearnerService LearnerService { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override async Task OnInitializedAsync() =>
        _response = await LearnerService.GetArticleHistoryAsync(new HistoryRequest(true, _count));

}