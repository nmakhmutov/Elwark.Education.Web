@page "/history/my/quizzes/{test}"
@using Education.Web.Client.Features.History.Services.User
@using Education.Web.Client.Features.History.Services.User.Model.Quiz
@layout HistoryLayout
@attribute [Authorize]

<PageTitle>
    @_title
</PageTitle>

<EduContainer Class="py-3 py-sm-6">
    <EduPageHeader Title="@_title" Breadcrumbs="@Breadcrumbs"/>
</EduContainer>

<ApiViewer Result="@_result" Context="result">
    <EduContainer Class="pb-3 pb-sm-6">
        <StatisticDetailsGrid>
            <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                <TotalContent>
                    <Subheader Title="@L["Shared_Quizzes"]" Subtitle="@L["ForAllTime"]"/>
                    <NumberOfQuizzesChart Value="@result.NumberOfQuizzes"/>
                </TotalContent>
                <ProgressContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <ProgressList Items="@result.RangeContrast.NumberOfQuizzes.GetProgress(L)"/>
                </ProgressContent>
                <ActivityContent>
                    <Subheader Title="@L["Shared_MyActivity"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <NumberOfTestDailyProgressChart Progress="@result.Progress"/>
                </ActivityContent>
            </StatisticDetailsCard>

            <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                <TotalContent>
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@result.Score"/>
                </TotalContent>
                <ProgressContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <ProgressList Items="@result.RangeContrast.Score.GetProgress(L)"/>
                </ProgressContent>
                <ActivityContent>
                    <Subheader Title="@L["Shared_MyActivity"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <ScoreDailyProgressChart Progress="@result.Progress"/>
                </ActivityContent>
            </StatisticDetailsCard>

            <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                <TotalContent>
                    <Subheader Title="@L["Questions"]" Subtitle="@L["ForAllTime"]"/>
                    <AnswerRatioChart Value="@result.AnswerRatio"/>
                </TotalContent>
                <ProgressContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <ProgressList Items="@result.RangeContrast.AnswerRatio.GetProgress(L)"/>
                </ProgressContent>
                <ActivityContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <AnswerRatioDailyProgressChart Progress="@result.Progress"/>
                </ActivityContent>
            </StatisticDetailsCard>

            <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                <TotalContent>
                    <Subheader Title="@L["TimeSpent"]" Subtitle="@L["ForAllTime"]"/>
                    <TimeSpentChart Value="@result.TimeSpent"/>
                </TotalContent>
                <ProgressContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <ProgressList Items="@result.RangeContrast.TimeSpent.GetProgress(L)"/>
                </ProgressContent>
                <ActivityContent>
                    <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                    <TimeSpentDailyProgressChart Progress="@result.Progress"/>
                </ActivityContent>
            </StatisticDetailsCard>
        </StatisticDetailsGrid>
    </EduContainer>
</ApiViewer>

@code {
    private string? _title;
    private ApiResult<QuizStatisticsModel> _result = ApiResult<QuizStatisticsModel>.Loading();

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History_Title"].Value, HistoryUrl.Root),
        new BreadcrumbItem(L["Shared_UserProfile"].Value, HistoryUrl.User.MyProfile),
        new BreadcrumbItem(L["Statistics"].Value, HistoryUrl.User.MyStatistics)
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    [Parameter]
    public string? Test { get; set; }

    protected override void OnParametersSet() =>
        _title = Test?.ToLowerInvariant() switch
        {
            "easy" => L["Shared_QuizzesEasy"],
            "hard" => L["Shared_QuizzesHard"],
            _ => L["Error_NotFound"]
            };

    protected override async Task OnParametersSetAsync() =>
        _result = Test?.ToLowerInvariant() switch
        {
            "easy" => await UserService.GetEasyQuizStatisticsAsync(),
            "hard" => await UserService.GetHardQuizStatisticsAsync(),
            _ => ApiResult<QuizStatisticsModel>.Fail(Error.Create(L["Error_NotFound"], 404))
            };

}