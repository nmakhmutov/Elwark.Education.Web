@using Education.Web.Client.Pages.Account.Components
@using Education.Web.Client.Pages.Account.Home.Components
@using Education.Web.Client.Services.Customer
@using Education.Web.Client.Services.Customer.Model
@using Education.Web.Client.Pages.History

@page "/account"
@layout MainLayout
@attribute [Authorize]

<EduPage Title="@L["Account"]">
    <ApiViewer Result="@_response">
        <EduContainer Class="pa-3 pa-sm-6" MaxWidth="EduWidth.W1920">
            <EduFillGrid>
                <AccountCard Class="account"/>
                @foreach (var subject in _subjects)
                {
                    <SubjectCard
                        Level="@subject.Level"
                        Experience="@subject.Experience"
                        Threshold="@subject.Threshold"
                        Title="@subject.Title"
                        HomeHref="@subject.HomeHref"
                        ProfileHref="@subject.ProfileHref"
                        Icon="@subject.Icon"
                        Background="@subject.Background"/>
                }
            </EduFillGrid>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private ApiResult<SubjectModel[]> _response = ApiResult<SubjectModel[]>.Loading();
    private readonly List<SubjectEnhancedModel> _subjects = new();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private ICustomerService CustomerService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _response = await CustomerService.GetSubjectsAsync();
        if (_response.IsFailed)
            return;

        foreach (var subject in _response.Value)
            if (Enhance(subject) is {} item)
                _subjects.Add(item);
    }

    private SubjectEnhancedModel? Enhance(SubjectModel model) =>
        model switch {
        {Name: "History"} =>
            new SubjectEnhancedModel(
                L["Subject:History"],
                HistoryUrl.Root,
                HistoryUrl.User.MyProfile,
                EduIcons.History,
                "/images/history/history.jpg",
                model.Level,
                model.Experience,
                model.Threshold
                ),
            _ => null
            };

    private sealed record SubjectEnhancedModel(
        string Title,
        string HomeHref,
        string ProfileHref,
        string Icon,
        string Background,
        uint Level,
        ulong Experience,
        ulong Threshold
        );

}