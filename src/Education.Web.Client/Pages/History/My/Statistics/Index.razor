@using Education.Web.Client.Pages.History.My.Components
@using Education.Web.Client.Pages.History.My.Statistics.Components
@using Education.Web.Client.Services.History.User.Model
@using Education.Web.Client.Services.History.User

@page "/history/my/statistics"
@layout HistoryLayout
@attribute [Authorize]

<EduPage Title="@L["Statistics"]">
    <EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1920">
        <EduPageHeader Title="@L["Statistics"]" Breadcrumbs="@Breadcrumbs"/>
    </EduContainer>

    <ApiViewer Result="@_result" Context="profile">
        <EduContainer Class="pb-3 pb-sm-6" MaxWidth="EduWidth.W1920">
            <EduFillGrid>
                <StatisticsCard
                    Title="@L["Tests:Easy"]"
                    Value="@profile.EasyTest.NumberOfTests.Total"
                    Href="@HistoryUrl.User.MyEasyTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.EasyTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Title="@L["Tests:Hard"]"
                    Value="@profile.HardTest.NumberOfTests.Total"
                    Href="@HistoryUrl.User.MyHardTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.HardTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Title="@L["Tests:Mixed"]"
                    Value="@profile.MixedTest.NumberOfTests.Total"
                    Href="@HistoryUrl.User.MyMixedTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.MixedTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Title="@L["EventGuessers:Small"]"
                    Value="@profile.SmallEventGuesser.Tests"
                    Href="@HistoryUrl.User.MySmallEventGuessers">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <EventGuesserScoreChart Score="@profile.SmallEventGuesser.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Title="@L["EventGuessers:Medium"]"
                    Value="@profile.MediumEventGuesser.Tests"
                    Href="@HistoryUrl.User.MyMediumEventGuessers">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <EventGuesserScoreChart Score="@profile.MediumEventGuesser.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Title="@L["EventGuessers:Large"]"
                    Value="@profile.LargeEventGuesser.Tests"
                    Href="@HistoryUrl.User.MyLargeEventGuessers">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <EventGuesserScoreChart Score="@profile.LargeEventGuesser.Score"/>
                </StatisticsCard>

                <ActivityCard
                    Class="grid-full-row"
                    Title="@L["Statistics:Daily"]"
                    Activities="@profile.Daily"
                    DateFormat="dd MMM"/>

                @if (profile.Monthly.Length > 1)
                {
                    <ActivityCard
                        Class="grid-full-row"
                        Title="@L["Statistics:Monthly"]"
                        Activities="@profile.Monthly"
                        DateFormat="MMM yyyy"/>
                }
            </EduFillGrid>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private ApiResult<HistoryUserStatisticsModel> _result = ApiResult<HistoryUserStatisticsModel>.Loading();

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History"].Value, HistoryUrl.Root),
        new BreadcrumbItem(L["Profile"].Value, HistoryUrl.User.MyProfile)
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _result = await UserService.GetStatisticsAsync();

}