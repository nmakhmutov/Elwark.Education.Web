@using Education.Web.Client.Pages.History.My.Components
@using Education.Web.Client.Services.History.User.Model
@using Education.Web.Client.Services.History.User

@page "/history/my/achievements"
@layout HistoryLayout
@attribute [Authorize]

<PageTitle>@L["Achievements"]</PageTitle>
<EduPage>
    <EduContainer Class="pb-0">
        <EduPageHeader Title="@L["Achievements"]" Breadcrumbs="@Breadcrumbs">
            <MudText Typo="Typo.h5">
                @_subtitle
            </MudText>
        </EduPageHeader>
    </EduContainer>
    <ApiViewer Result="@_result" Context="achievements">
        <EduContainer>
            <MudGrid>
                @for (var index = 0; index < achievements.Categories.Length; index++)
                {
                    var category = achievements.Categories[index];
                    var classes = index == 0 ? null : "mt-6 mt-sm-16";

                    <MudItem xs="12" md="3" xl="2" Class="@classes">
                        <div class="sticky-info">
                            <div class="d-flex align-end">
                                <MudText Typo="@Typo.h5">
                                    @category.Title
                                </MudText>
                                <MudText Typo="@Typo.subtitle1" Class="ml-3">
                                    @category.Completed/@category.Total
                                </MudText>
                            </div>

                            <MudText Typo="@Typo.body1">
                                @category.Description
                            </MudText>
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="9" xl="10" Class="@classes">
                        <EduFillGrid>
                            @foreach (var achievement in category.Achievements)
                            {
                                <AchievementView Class="mud-paper pa-3 pa-sm-6" Achievement="@achievement"/>
                            }
                        </EduFillGrid>
                    </MudItem>
                }
            </MudGrid>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private string? _subtitle;

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History"].Value, HistoryUrl.Root),
        new BreadcrumbItem(L["Profile"].Value, HistoryUrl.User.MyProfile)
    };

    private ApiResult<AchievementsDetailModel> _result = ApiResult<AchievementsDetailModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        _result = await UserService.GetAchievementsAsync();
        if (_result.IsSuccess)
            _subtitle = $"{_result.Data.Completed} / {_result.Data.Total}";
    }

}