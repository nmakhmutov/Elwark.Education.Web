@using Education.Web.Client.Pages.History.My.Components
@using Education.Web.Client.Pages.History.My.Tests.Components
@using Education.Web.Client.Services.History.User
@using Education.Web.Client.Services.History.User.Model.Test

@page "/history/my/tests/{test}"
@layout HistoryLayout
@attribute [Authorize]

<EduPage Title="@_title">
    <EduContainer Class="py-3 py-sm-6">
        <EduPageHeader Title="@_title" Breadcrumbs="@Breadcrumbs"/>
    </EduContainer>
    <ApiViewer Result="@_result" Context="result">
        <EduContainer Class="pb-3 pb-sm-6">
            <StatisticDetailsGrid>
                <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                    <TotalContent>
                        <Subheader Title="@L["Tests"]" Subtitle="@L["ForAllTime"]"/>
                        <NumberOfTestChart Value="@result.NumberOfTests"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@result.RangeContrast.NumberOfTests.GetProgress(L)"/>
                    </ProgressContent>
                    <ActivityContent>
                        <Subheader Title="@L["Test:MyActivity"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <NumberOfTestDailyProgressChart Progress="@result.Progress"/>
                    </ActivityContent>
                </StatisticDetailsCard>

                <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                    <TotalContent>
                        <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                        <ScoreChart Value="@result.Score"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@result.RangeContrast.Score.GetProgress(L)"/>
                    </ProgressContent>
                    <ActivityContent>
                        <Subheader Title="@L["Test:MyActivity"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ScoreDailyProgressChart Progress="@result.Progress"/>
                    </ActivityContent>
                </StatisticDetailsCard>

                <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                    <TotalContent>
                        <Subheader Title="@L["Questions"]" Subtitle="@L["ForAllTime"]"/>
                        <AnswerRatioChart Value="@result.AnswerRatio"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@result.RangeContrast.AnswerRatio.GetProgress(L)"/>
                    </ProgressContent>
                    <ActivityContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <AnswerRatioDailyProgressChart Progress="@result.Progress"/>
                    </ActivityContent>
                </StatisticDetailsCard>

                <StatisticDetailsCard DisableActivity="@(result.Progress.Length == 0)">
                    <TotalContent>
                        <Subheader Title="@L["TimeSpent"]" Subtitle="@L["ForAllTime"]"/>
                        <TimeSpentChart Value="@result.TimeSpent"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@result.RangeContrast.TimeSpent.GetProgress(L)"/>
                    </ProgressContent>
                    <ActivityContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <TimeSpentDailyProgressChart Progress="@result.Progress"/>
                    </ActivityContent>
                </StatisticDetailsCard>
            </StatisticDetailsGrid>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private string? _title;
    private ApiResult<TestStatisticsModel> _result = ApiResult<TestStatisticsModel>.Loading();

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["History"].Value, HistoryUrl.Root),
        new BreadcrumbItem(L["Profile"].Value, HistoryUrl.User.MyProfile),
        new BreadcrumbItem(L["Statistics"].Value, HistoryUrl.User.MyStatistics)
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    [Parameter]
    public string? Test { get; set; }

    protected override void OnParametersSet() =>
        _title = Test?.ToLowerInvariant() switch
        {
            "easy" => L["Tests:Easy"],
            "hard" => L["Tests:Hard"],
            "mixed" => L["Tests:Mixed"],
            _ => L["Error:NotFound"]
            };

    protected override async Task OnParametersSetAsync() =>
        _result = Test?.ToLowerInvariant() switch
        {
            "easy" => await UserService.GetEasyTestStatisticsAsync(),
            "hard" => await UserService.GetHardTestStatisticsAsync(),
            "mixed" => await UserService.GetMixedTestStatisticsAsync(),
            _ => ApiResult<TestStatisticsModel>.Fail(Error.Create(L["Error:NotFound"], 404))
            };

}