@using Education.Web.Client.Services.Model.Content
@using Education.Web.Client.Services.History
<section class="@Class mud-paper d-flex justify-space-between pa-3">
    <MudToolBar Dense DisableGutters Class="d-flex justify-center">
        <BookmarkButton
            IsBookmarked="@UserActivity.IsBookmarked"
            TopicId="@TopicId"
            OnBookmarkClick="@OnBookmarkClick"/>

        <MudTooltip Text="@L["Topic:ILikeThis"]">
            <MudIconButton
                Icon="@Icons.Rounded.ThumbUp"
                OnClick="@OnLike"
                Color="@(_isLiked == true ? Color.Primary : Color.Default)"/>
        </MudTooltip>

        <MudTooltip Text="@L["Topic:IDislikeThis"]">
            <MudIconButton
                Icon="@Icons.Rounded.ThumbDown"
                OnClick="@OnDislike"
                Color="@(_isLiked == false ? Color.Primary : Color.Default)"/>
        </MudTooltip>
    </MudToolBar>

    <TopicRating Rating="@Rating" ShowDetails Class="d-flex flex-column align-center justify-center"/>
</section>

@code {
    private bool? _isLiked;

    [Inject]
    public IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public string TopicId { get; set; } = default!;

    [Parameter, EditorRequired]
    public ContentRatingModel Rating { get; set; } = default!;

    [Parameter, EditorRequired]
    public UserActivityOverviewModel UserActivity { get; set; } = default!;

    [Parameter, EditorRequired]
    public Func<Task<bool>> OnLikeClick { get; set; } = () => Task.FromResult(false);

    [Parameter, EditorRequired]
    public Func<Task<bool>> OnDislikeClick { get; set; } = () => Task.FromResult(false);

    [Parameter, EditorRequired]
    public Func<string, Task<bool>> OnBookmarkClick { get; set; } = _ => Task.FromResult(false);

    protected override void OnParametersSet() => _isLiked = UserActivity.IsLiked;

    private async Task OnLike()
    {
        if (_isLiked == true)
            return;

        if (await OnLikeClick())
            _isLiked = true;
    }

    private async Task OnDislike()
    {
        if (_isLiked == false)
            return;

        if (await OnDislikeClick())
            _isLiked = false;
    }

}