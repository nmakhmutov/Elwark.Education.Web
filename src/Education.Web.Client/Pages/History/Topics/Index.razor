@using Education.Web.Client.Pages.History.Topics.Components
@using Education.Web.Client.Services.History.Topic.Model
@using Education.Web.Client.Services.History.Topic
@using Education.Web.Client.Services.History.User

@page "/history/topics/{id}"
@layout HistoryLayout

<EduPage Title="@_title">
    <ApiViewer Result="@_result" Context="result">
        @switch (result.Topic)
        {
            case HistoryTopicDetail.BattleModel battle:
                <BattleDetail
                    Battle="@battle"
                    Rating="@result.Rating"
                    HasTest="@result.HasTest"
                    UserActivity="@result.UserActivity"
                    RelatedTopics="@result.RelatedTopics"
                    OnLikeClick="@LikeAsync"
                    OnDislikeClick="@DislikeAsync"
                    OnBookmarkClick="@ToggleBookmarkAsync"/>
                break;

            case HistoryTopicDetail.EmpireModel empire:
                <EmpireDetail
                    Empire="@empire"
                    Rating="@result.Rating"
                    HasTest="@result.HasTest"
                    UserActivity="@result.UserActivity"
                    RelatedTopics="@result.RelatedTopics"
                    OnLikeClick="@LikeAsync"
                    OnDislikeClick="@DislikeAsync"
                    OnBookmarkClick="@ToggleBookmarkAsync"/>
                break;

            case HistoryTopicDetail.GeneralModel topic:
                <GeneralDetail
                    Topic="@topic"
                    Rating="@result.Rating"
                    HasTest="@result.HasTest"
                    UserActivity="@result.UserActivity"
                    RelatedTopics="@result.RelatedTopics"
                    OnLikeClick="@LikeAsync"
                    OnDislikeClick="@DislikeAsync"
                    OnBookmarkClick="@ToggleBookmarkAsync"/>
                break;

            case HistoryTopicDetail.PersonModel person:
                <PersonDetail
                    Person="@person"
                    Rating="@result.Rating"
                    HasTest="@result.HasTest"
                    UserActivity="@result.UserActivity"
                    RelatedTopics="@result.RelatedTopics"
                    OnLikeClick="@LikeAsync"
                    OnDislikeClick="@DislikeAsync"
                    OnBookmarkClick="@ToggleBookmarkAsync"/>
                break;
        }
    </ApiViewer>
</EduPage>

@code {
    private string? _title;
    private ApiResult<TopicDetailCompositionModel> _result = ApiResult<TopicDetailCompositionModel>.Loading();

    [Inject]
    private IHistoryTopicService TopicService { get; set; } = default!;

    [Inject]
    private IHistoryUserService UserService { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        _result = ApiResult<TopicDetailCompositionModel>.Loading();
        _result = await TopicService.GetAsync(Id);

        if (_result.IsSuccess)
        {
            _title = _result.Value.Topic.Title;
        }
    }

    private async Task<bool> LikeAsync()
    {
        var response = await UserService.LikeAsync(Id);
        return response.IsSuccess;
    }

    private async Task<bool> DislikeAsync()
    {
        var response = await UserService.DislikeAsync(Id);
        return response.IsSuccess;
    }

    private async Task<bool> ToggleBookmarkAsync(string id)
    {
        var result = await UserService.ToggleBookmarkAsync(id);
        return result is { IsSuccess: true, Value: true };
    }

}