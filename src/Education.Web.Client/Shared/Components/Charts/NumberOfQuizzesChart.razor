@using ApexCharts
@using Education.Web.Client.Features.History.Services.Learner.Model.Quiz
<div class="@Class">
    @if (Value.Total > 0)
    {
        <div class="d-flex justify-center">
            <div class="wrapper">
                <ApexChart TItem="Data" Options="@Options">
                    <ApexPointSeries
                        TItem="Data"
                        Items="@Series"
                        SeriesType="SeriesType.Donut"
                        XValue="@(x => x.Name)"
                        YAggregate="@(x => x.Sum(e => e.Value))"/>
                </ApexChart>
            </div>
        </div>
    }

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        Chart = new Chart
        {
            Background = "transparent",
            ForeColor = "var(--mud-palette-text-primary)"
        },
        Legend = new Legend
        {
            Show = false
        },
        Colors = new List<string>
        {
            Colors.Green.Accent4,
            Colors.Red.Default,
            Colors.Blue.Default,
            Colors.DeepPurple.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public NumberOfQuizzesModel Value { get; set; } = default!;

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["NumberOfQuizzes_Successful_Title"], Value.Succeeded, Colors.Green.Accent4),
        new ChartList.Item(L["NumberOfQuizzes_Failed_Title"], Value.Failed, Colors.Red.Default),
        new ChartList.Item(L["NumberOfQuizzes_MistakesExceeded_Title"], Value.MistakesExceeded, Colors.Blue.Default),
        new ChartList.Item(L["NumberOfQuizzes_TimeExceeded_Title"], Value.TimeExceeded, Colors.DeepPurple.Default),
        new ChartList.Item(L["NumberOfQuizzes_Total_Title"], Value.Total, null)
    };

    private Data[] Series => new[]
    {
        new Data(L["NumberOfQuizzes_Successful_Title"], Value.Succeeded),
        new Data(L["NumberOfQuizzes_Failed_Title"], Value.Failed),
        new Data(L["NumberOfQuizzes_MistakesExceeded_Title"], Value.MistakesExceeded),
        new Data(L["NumberOfQuizzes_TimeExceeded_Title"], Value.TimeExceeded)
    };

    private sealed record Data(string Name, decimal Value);

}