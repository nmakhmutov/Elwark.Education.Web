@using ApexCharts
@using Education.Web.Client.Features.History.Services.Learner.Model.Quiz
<div class="@Class">
    @if (Value.Total > TimeSpan.Zero)
    {
        <ApexChart TItem="Data" Options="@Options">
            <ApexRangeSeries
                TItem="Data"
                Items="@Series"
                XValue="@(x => x.Name)"
                YValue="@(x => x.Value)"
                PointColor="@(x => x.Color)"/>
        </ApexChart>
    }

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        PlotOptions = new PlotOptions
        {
            Bar = new PlotOptionsBar
            {
                Horizontal = true
            }
        },
        Xaxis = new XAxis
        {
            Labels = new XAxisLabels
            {
                Formatter = @"
function(value) {
    var minutes = Math.floor(value / 60000);
    var seconds = ((value % 60000) / 1000).toFixed(0);
    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
}"
            }
        },
        Tooltip = new Tooltip
        {
            Enabled = false
        },
        Chart = new Chart
        {
            Toolbar = new Toolbar
            {
                Show = false
            },
            Background = "transparent",
            ForeColor = "var(--mud-palette-text-primary)"
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public QuizStatisticsModel.TimeSpentModel Value { get; set; } = default!;

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["TimeSpent_Min_Title"], Value.Min.Humanize(), Colors.Green.Accent4),
        new ChartList.Item(L["TimeSpent_Average_Title"], Value.Average.Humanize(), Colors.Blue.Default),
        new ChartList.Item(L["TimeSpent_Max_Title"], Value.Max.Humanize(), Colors.DeepPurple.Default),
        new ChartList.Item(L["TimeSpent_Total_Title"], Value.Total.Humanize(), null)
    };

    private Data[] Series => new[]
    {
        new Data(L["TimeSpent_Min_Title"], 0, Colors.Green.Accent4),
        new Data(L["TimeSpent_Min_Title"], (decimal)Value.Min.TotalMilliseconds, Colors.Green.Accent4),
        new Data(L["TimeSpent_Average_Title"], 0, Colors.Blue.Default),
        new Data(L["TimeSpent_Average_Title"], (decimal)Value.Average.TotalMilliseconds, Colors.Blue.Default),
        new Data(L["TimeSpent_Max_Title"], 0, Colors.DeepPurple.Default),
        new Data(L["TimeSpent_Max_Title"], (decimal)Value.Max.TotalMilliseconds, Colors.DeepPurple.Default)
    };

    private sealed record Data(string Name, decimal Value, string Color);

}