@using Education.Web.Client.Models.Content
<div class="@Class">
    @if (ShowTooltip)
    {
        <MudTooltip RootClass="d-flex" Placement="Placement.Bottom" Text="@($"{L["Rating"]}: {Rating.Stars:F1}")">
            <MudRating
                Class="@_ratingClass"
                MaxValue="5"
                Size="@Size"
                SelectedValue="@_selectedStart"
                ReadOnly/>
        </MudTooltip>
    }
    else
    {
        <MudRating
            Class="@_ratingClass"
            MaxValue="5"
            Size="@Size"
            SelectedValue="@_selectedStart"
            ReadOnly/>
    }

    @if (ShowDetails)
    {
        <MudText Typo="Typo.caption" Class="ml-1">
            @($"{Rating.Stars:F1} / {Rating.Votes.ToReadable()}")
        </MudText>
    }
</div>

@code {
    private string? _ratingClass;
    private int _selectedStart;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public ContentRatingModel Rating { get; set; } = default!;

    [Parameter]
    public Size Size { get; set; } = Size.Medium;

    [Parameter]
    public bool ShowTooltip { get; set; }

    [Parameter]
    public bool ShowDetails { get; set; }

    protected override void OnParametersSet()
    {
        _selectedStart = (int)Math.Round(Rating.Stars);
        _ratingClass = Size switch{
            Size.Small => "rating small",
            Size.Medium => "rating medium",
            Size.Large => "rating large",
            _ => "rating"
            };
    }


}