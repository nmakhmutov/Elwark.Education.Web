@using Education.Web.Client.Features.Authentication
@using Education.Web.Client.Features.Customer
<AuthorizeView>
    <NotAuthorized>
        <MudButton
            Class="ml-3"
            DisableElevation
            Variant="Variant.Filled"
            Color="Color.Primary"
            Size="Size.Small"
            OnClick="@OnLogin">
            @L["Account_SignIn"]
        </MudButton>
    </NotAuthorized>

    <Authorizing>
        <MudSkeleton Class="ml-3" SkeletonType="SkeletonType.Circle" Width="40px" Height="40px"/>
    </Authorizing>

    <Authorized>
        <MudMenu Class="ml-3" OffsetX Dense Direction="Direction.Left">
            <ActivatorContent>
                <img class="image rounded-circle object-cover object-center" src="@Customer.Image" alt="@Customer.Name" loading="lazy"/>
            </ActivatorContent>

            <ChildContent>
                <section class="mud-paper pa-3 mt-n2">
                    <header class="customer">
                        <img class="image rounded-circle object-cover object-center mr-3" src="@Customer.Image" alt="@Customer.Name" loading="lazy"/>
                        <MudText Class="one-line-text" Typo="Typo.body1">
                            @Customer.Name
                        </MudText>
                    </header>
                </section>

                <MudDivider Class="mb-3"/>

                <MudListItem
                    Class="px-3"
                    Text="@L["Account_Title"]"
                    Icon="@Icons.Material.Outlined.Person"
                    Href="@CustomerUrl.Root"/>

                <MudListItem
                    Class="px-3 mb-n2"
                    Text="@L["Account_Logout"]"
                    Icon="@Icons.Material.Outlined.Login"
                    OnClick="@OnLogout"/>
            </ChildContent>
        </MudMenu>
    </Authorized>
</AuthorizeView>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    private void OnLogin() =>
        Navigation.NavigateToLogin(AuthenticationUrl.LogIn(Navigation.Uri));

    private void OnLogout() =>
        Navigation.NavigateToLogout(AuthenticationUrl.LogOut);

}