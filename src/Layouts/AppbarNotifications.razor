@using Education.Web.Hubs.Notification
@using Education.Web.Pages
@using Education.Web.Pages.Account
@implements IDisposable

<MudBadge Color="Color.Secondary" Dot Overlap Visible="NotificationService.HasNotifications">
    <MudMenu
        Icon="@Icons.Outlined.Notifications"
        Color="Color.Inherit"
        AnchorOrigin="Origin.BottomLeft"
        TransformOrigin="Origin.TopLeft"
        ListClass="pa-0">

        <div class="d-flex justify-space-between align-center px-3 pt-3 pb-1">
            <MudText Typo="Typo.subtitle1" Class="pr-16">
                @L["Notifications"]
            </MudText>
            <MudButton
                Style="text-transform: none"
                Disabled="@(!NotificationService.HasNotifications)"
                OnClick="NotificationService.MarkAsReadAsync"
                StartIcon="@Icons.Outlined.DoneAll"
                Variant="Variant.Text"
                Size="Size.Small"
                Color="Color.Primary">
                @L["Notifications:MarkAsRead"]
            </MudButton>
        </div>

        @if (NotificationService.HasNotifications)
        {
            @foreach (var notification in NotificationService.Notifications)
            {
                <MudDivider/>
                <MudMenuItem Class="px-3 py-2">
                    <MudText Typo="Typo.subtitle2">
                        @notification.Content
                    </MudText>
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.body2">
                            @notification.CreatedAt.ToCustomerFormat(Customer.DateTimeInfo)
                        </MudText>
                        <MudText Typo="Typo.body2">
                            @L[$"Subject:{notification.Subject}"]
                        </MudText>
                    </div>
                </MudMenuItem>
            }
            <MudDivider/>
            <div class="d-flex justify-center py-3">
                <MudLink Href="@AccountLinks.Notifications" Typo="Typo.button" Style="text-transform: none">
                    @L["Notifications:All"]
                </MudLink>
            </div>
        }
        else
        {
            <div class="d-flex justify-center align-center py-6">
                <MudText Class="mud-text-secondary my-12">
                    @L["Notifications:NothingNew"]
                </MudText>
            </div>
        }
    </MudMenu>
</MudBadge>

@code {

    [Inject]
    private NotificationService NotificationService { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;
    
    protected override void OnInitialized() =>
        NotificationService.OnChanged += StateHasChanged;

    public void Dispose() =>
        NotificationService.OnChanged -= StateHasChanged;

}
