@using MudBlazor.Utilities
@using Education.Web.Services.History

<div class="@_class">
    <MudRadioGroup SelectedOption="@SelectedEpoch" SelectedOptionChanged="@SelectedEpochChanged" Class="radio-group">
        @foreach (var epoch in GetEpochs())
        {
            <MudRadio Option="@epoch.Type" Color="Color.Primary" Class="radio">
                <MudPaper Elevation="0">
                    <MudImage
                        Src="@epoch.Image"
                        Class="radio-image rounded-t"
                        ObjectFit="ObjectFit.Cover"
                        ObjectPosition="ObjectPosition.Center"
                        Alt="@epoch.Title"/>
                    <MudText Typo="Typo.subtitle1" Align="Align.Center">
                        @epoch.Title
                    </MudText>
                </MudPaper>
            </MudRadio>
        }
    </MudRadioGroup>
</div>

@code {
    private string? _class;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    private IEnumerable<Epoch> GetEpochs()
    {
        foreach (var epoch in EpochTypeExtensions.List[1..])
            yield return new Epoch(epoch, L[$"Epoch:{epoch.ToFastString()}"], epoch.Image());

        yield return new Epoch(EpochType.None, L["Topics:Any"], "/images/history/history.jpg");
    }

    [Parameter]
    public EpochType SelectedEpoch { get; set; }

    [Parameter]
    public EventCallback<EpochType> SelectedEpochChanged { get; set; }

    [Parameter]
    public string? Class { get; set; }

    protected override void OnParametersSet() =>
        _class = CssBuilder.Default("container")
            .AddClass(Class, () => Class is not null)
            .Build();

    private sealed record Epoch(EpochType Type, string Title, string Image);
}
