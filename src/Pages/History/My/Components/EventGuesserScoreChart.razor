@using ApexCharts

<div class="@Class">
    @if (Score > 0)
    {
        <ApexChart TItem="Data" Options="@Options">
            <ApexPointSeries
                TItem="Data"
                Items="@Series"
                SeriesType="SeriesType.Donut"
                XValue="@(x => x.Name)"
                YAggregate="@(x => x.Sum(e => e.Value))"/>
        </ApexChart>
    }
    
    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        Legend = new Legend
        {
            Show = false
        },
        Colors = new List<string>
        {
            Colors.Blue.Default,
            Colors.DeepPurple.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public uint Points { get; set; }

    [Parameter]
    public uint Bonus { get; set; }

    [Parameter]
    public uint Score { get; set; }

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["EventGuesser:Points"], Points, Colors.Blue.Default),
        new ChartList.Item(L["EventGuesser:Bonus"], Bonus, Colors.DeepPurple.Default),
        new ChartList.Item(L["EventGuesser:Score"], Score, null)
    };

    private Data[] Series => new[]
    {
        new Data(L["EventGuesser:Points"], Points),
        new Data(L["EventGuesser:Bonus"], Bonus)
    };

    private sealed record Data(string Name, decimal Value);

}
