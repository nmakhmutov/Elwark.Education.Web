@page "/history/my/inventories"
@layout HistoryLayout
@attribute [Authorize]

@using Education.Web.Gateways.History
@using Education.Web.Gateways.History.Users.Model
@using Education.Web.Pages.History.Components

<PageTitle>@L["Inventory"]</PageTitle>

<EduPage ShowFooter="@_response.IsLoaded">
    <ApiViewer Response="@_response">
        <Success Context="data">
            <EduContainer>
                <PageHeader Title="@L["Inventory"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs">
                    <MudText Typo="Typo.h5">
                        @data.Inventory.Fullness / @data.Inventory.Capacity
                    </MudText>
                </PageHeader>
                <InventoryGrid>
                    @foreach (var item in data.Inventory.Items)
                    {
                        <InventoryInfoCard Id="@item.Id" Title="@item.Title" Overview="@item.Overview">
                            <div class="d-flex justify-center">
                                <HumanReadableText Typo="Typo.h6" Value="@item.Count"/>
                            </div>
                        </InventoryInfoCard>
                    }
                </InventoryGrid>
            </EduContainer>
        </Success>
    </ApiViewer>
</EduPage>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, CommonLinks.Account),
        new BreadcrumbItem(L["Profile"].Value, HistoryLinks.User.MyProfile)
    };

    private ApiResponse<InventoryCompositionModel> _response = ApiResponse<InventoryCompositionModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;
    
    [Inject]
    private IHistoryClient Client { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _response = await Client.User.GetInventoryAsync();

}
