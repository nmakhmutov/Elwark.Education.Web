@page "/history/my/event-guessers"
@layout HistoryLayout
@attribute [Authorize]
@using Education.Web.Gateways.History
@using Education.Web.Gateways.History.Users.Model
@using Education.Web.Pages.History.My.Components
@using Education.Web.Pages.History.My.Tests.Components

<PageTitle>@L["EventGuesser"]</PageTitle>

<EduPage ShowFooter="@_response.IsLoaded">
    <ApiViewer Response="@_response">
        <Loading>
            <PageSpinner/>
        </Loading>
        <Success Context="result">
            <EduContainer>
                <PageHeader Title="@L["EventGuesser"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs"/>

                <TestPageGrid>
                    <StatisticDetailsCard Title="@L["Tests"]" Value="@result.Tests">
                        <ProgressContent>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                            <ProgressList Items="@GetTest(result.RangeContrast)"/>
                        </ProgressContent>
                    </StatisticDetailsCard>
                    <StatisticDetailsCard Title="@L["EventGuesser:Score"]" Value="@result.Score">
                        <TotalContent>
                            <Subheader Title="@L["EventGuesser:Score"]" Subtitle="@L["ForAllTime"]"/>
                            <EventGuesserScoreChart Bonus="@result.Bonus" Points="@result.Points" Score="@result.Score"/>
                        </TotalContent>
                        <ProgressContent>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                            <ProgressList Items="@GetScore(result.RangeContrast)"/>
                        </ProgressContent>
                    </StatisticDetailsCard>
                    <StatisticDetailsCard Title="@L["EventGuesser:Questions"]" Value="@result.Questions">
                        <TotalContent>
                            <Subheader Title="@L["EventGuesser:Questions"]" Subtitle="@L["ForAllTime"]"/>
                            <EventGuesserQuestionChart 
                                Correct="@result.Correct" 
                                Incorrect="@result.Incorrect" 
                                Questions="@result.Questions"/>
                        </TotalContent>
                        <ProgressContent>
                            <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                            <ProgressList Items="@GetQuestions(result.RangeContrast)"/>
                        </ProgressContent>
                    </StatisticDetailsCard>
                </TestPageGrid>
            </EduContainer>
        </Success>
    </ApiViewer>
</EduPage>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index),
        new BreadcrumbItem(L["Profile"].Value, Links.History.User.MyProfile)
    };

    private ApiResponse<EventGuesserStatisticsModel> _response = ApiResponse<EventGuesserStatisticsModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _response = await HistoryClient.User.GetEventGuesserStatisticsAsync();

    private ProgressList.Item[] GetTest(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["Tests"], progress.Tests.Current.ToReadable(), progress.Tests.Difference)
        };

    private ProgressList.Item[] GetScore(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["EventGuesser:Score"], progress.Score.Current.ToReadable(), progress.Score.Difference),
            new(L["EventGuesser:Points"], progress.Points.Current.ToReadable(), progress.Points.Difference),
            new(L["EventGuesser:Bonus"], progress.Bonus.Current.ToReadable(), progress.Bonus.Difference)
        };

    private ProgressList.Item[] GetQuestions(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["EventGuesser:Questions"], progress.Questions.Current.ToReadable(), progress.Questions.Difference),
            new(L["EventGuesser:Correct"], progress.Correct.Current.ToReadable(), progress.Correct.Difference),
            new(L["EventGuesser:Incorrect"], progress.Incorrect.Current.ToReadable(), progress.Incorrect.Difference)
        };

}
