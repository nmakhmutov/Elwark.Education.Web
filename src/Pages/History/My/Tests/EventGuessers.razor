@page "/history/my/event-guessers"
@layout HistoryLayout
@using Education.Web.Gateways.History.Users.Model
@using Education.Web.Pages.History.My.Tests.Components
@using Education.Web.Gateways.History
@using Education.Web.Pages.History.My.Components

@attribute [Authorize]

<PageTitle>@L["EventGuesser"]</PageTitle>

<EduPage ShowFooter="@_response.IsLoaded">
    <EduContainer Class="pb-0">
        <PageHeader Title="@L["EventGuesser"]" Breadcrumbs="@Breadcrumbs"/>
    </EduContainer>
    <ApiViewer Response="@_response" Context="result">
        <EduContainer>
            <TestPageGrid>
                <StatisticDetailsCard>
                    <TotalContent>
                        <Subheader Title="@L["EventGuesser:Score"]" Subtitle="@L["ForAllTime"]"/>
                        <EventGuesserScoreChart Bonus="@result.Bonus" Points="@result.Points" Score="@result.Score"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@GetScore(result.RangeContrast)"/>
                    </ProgressContent>
                </StatisticDetailsCard>

                <StatisticDetailsCard>
                    <TotalContent>
                        <Subheader Title="@L["EventGuesser:Questions"]" Subtitle="@L["ForAllTime"]"/>
                        <EventGuesserQuestionChart
                            Correct="@result.Correct"
                            Incorrect="@result.Incorrect"
                            Questions="@result.Questions"/>
                    </TotalContent>
                    <ProgressContent>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@GetQuestions(result.RangeContrast)"/>
                    </ProgressContent>
                </StatisticDetailsCard>

                <MudPaper Elevation="0" Class="pa-3 pa-sm-6">
                    <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mb-3 mb-sm-6">
                        <MudText Typo="Typo.h5">
                            @L["Tests"]
                        </MudText>
                        <HumanReadableNumber Value="@result.Tests" Typo="Typo.h5"/>
                    </MudStack>
                    <section>
                        <Subheader Title="@L["Progress"]" Subtitle="@result.RangeContrast.RangeTitle()"/>
                        <ProgressList Items="@GetTest(result.RangeContrast)"/>
                    </section>
                </MudPaper>
            </TestPageGrid>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Profile"].Value, HistoryLinks.User.MyProfile)
    };

    private ApiResponse<EventGuesserStatisticsModel> _response = ApiResponse<EventGuesserStatisticsModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _response = await HistoryClient.User.GetEventGuesserStatisticsAsync();

    private ProgressList.Item[] GetTest(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["Tests"], progress.Tests.Current.ToReadable(), progress.Tests.Difference)
        };

    private ProgressList.Item[] GetScore(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["EventGuesser:Score"], progress.Score.Current.ToReadable(), progress.Score.Difference),
            new(L["EventGuesser:Points"], progress.Points.Current.ToReadable(), progress.Points.Difference),
            new(L["EventGuesser:Bonus"], progress.Bonus.Current.ToReadable(), progress.Bonus.Difference)
        };

    private ProgressList.Item[] GetQuestions(EventGuesserStatisticsModel.Contrast progress) =>
        new ProgressList.Item[]
        {
            new(L["EventGuesser:Questions"], progress.Questions.Current.ToReadable(), progress.Questions.Difference),
            new(L["EventGuesser:Correct"], progress.Correct.Current.ToReadable(), progress.Correct.Difference),
            new(L["EventGuesser:Incorrect"], progress.Incorrect.Current.ToReadable(), progress.Incorrect.Difference)
        };

}
