<div class="@Class mud-paper pa-3 pa-sm-6">
    <MudText Typo="Typo.h6" Align="Align.Center">
        @Title
    </MudText>
    <MudText Class="mb-3 mb-sm-6" Typo="Typo.body1" Align="Align.Center">
        @Subtitle
    </MudText>
    @if (Rewards.Length > 0)
    {
        <div class="d-flex flex-row align-center justify-center gap-3 mb-3 mb-sm-6">
            @foreach (var reward in Rewards)
            {
                <InternalMoney Money="@reward" Typo="Typo.h5" IconSize="Size.Large" Horizontal/>
            }
        </div>
    }
    @if (ExpiresAt.HasValue)
    {
        <div class="d-flex align-center justify-center mb-3 mb-sm-6">
            <MudIcon Class="mr-1" Icon="@Icons.Outlined.Timer"/>
            <CountdownTimer Date="@ExpiresAt.Value"/>
        </div>
    }
    <MudButton Variant="Variant.Outlined" Color="Color.Primary">
        Claim
    </MudButton>
</div>

@code {

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public string Subtitle { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public IInternalMoney[] Rewards { get; set; } = Array.Empty<IInternalMoney>();
    
    [Parameter, EditorRequired]
    public DateTime? ExpiresAt { get; set; }
}