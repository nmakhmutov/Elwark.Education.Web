@page "/history/my/favorites"
@layout HistoryLayout
@attribute [Authorize]

@using Education.Web.Gateways.History
@using Education.Web.Gateways.History.Users.Request
@using Margin = MudBlazor.Margin

<PageTitle>@L["Favorites"]</PageTitle>
<EduPage ShowFooter="true">
    <EduContainer MaxWidth="EduWidth.W1920">
        <PageHeader Title="@L["Favorites"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs"/>
        <div class="d-flex flex-wrap justify-sm-space-between align-center mb-3 mb-sm-6">
            <div>
                <MudSelect T="FavoritesRequest.SortType" Value="@_request.Sort" ValueChanged="@Callback" Margin="Margin.Dense">
                    @foreach (var sort in Enum.GetValues<FavoritesRequest.SortType>())
                    {
                        <MudSelectItem T="FavoritesRequest.SortType" Value="sort">
                            @L[$"Sort:{sort}"]
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="ml-3 ml-sm-6" style="align-self: end">
                <MudCheckBox @bind-Checked="@_dense" Label="@L["CompactView"]" Color="Color.Primary" Dense="true"/>
            </div>
        </div>
        <MudTable
            ServerData="@ServerReload"
            Dense="@_dense"
            Loading="@_loading"
            Elevation="0"
            Hover="true"
            RowsPerPage="@_request.Count"
            Breakpoint="Breakpoint.Sm"
            LoadingProgressColor="Color.Primary"
            @ref="@_table">
            <HeaderContent>
                <MudTh/>
                <MudTh>@L["Topic"]</MudTh>
                <MudTh>@L["History:Epoch"]</MudTh>
                <MudTh>@L["NumberOfTests:TotalPassed"]</MudTh>
                <MudTh>@L["TimeSpent:Total"]</MudTh>
                <MudTh/>
            </HeaderContent>
            <RowTemplate>
                <MudTd HideSmall="true">
                    <MudAvatar Image="@context.Topic.Image"/>
                </MudTd>
                <MudTd DataLabel="@L["Title"]">
                    <MudLink Href="@Links.History.Content.Topic(context.Topic.Id)">
                        @context.Topic.Title
                    </MudLink>
                </MudTd>
                <MudTd DataLabel="@L["History:Epoch"]">
                    <MudLink Href="@Links.History.Content.Epoch(context.Topic.Epoch)">
                        @L[$"History:{context.Topic.Epoch}"]
                    </MudLink>
                </MudTd>
                <MudTd DataLabel="@L["NumberOfTests:TotalPassed"]">
                    @context.UserActivity.PassedTests.ToReadable()
                </MudTd>
                <MudTd DataLabel="@L["TimeSpent:Total"]">
                    @context.UserActivity.TimeSpent.ToSimpleFormat()
                </MudTd>
                <MudTd>
                    <div class="d-flex flex-row justify-end">
                        <FavoriteToggleButton
                            IsFavorite="@context.UserActivity.IsFavorite"
                            TopicId="@context.Topic.Id"
                            OnFavoriteClick="@OnFavoriteClick"/>
                        <MudTooltip Text="@L["Details"]">
                            <MudIconButton 
                                Link="@Links.History.User.MyTopic(context.Topic.Id)" 
                                Icon="@Icons.Material.Outlined.RemoveRedEye"/>
                        </MudTooltip>
                    </div>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <EmptyResult
                    Class="grid-full-row"
                    Title="@L["Empty:FavoritesTitle"]"
                    Subtitle="@L["Empty:FavoritesSubtitle"]"/>
            </NoRecordsContent>
            <LoadingContent>
                <MudText>@L["Loading"]</MudText>
            </LoadingContent>
            <PagerContent>
                <MudTablePager RowsPerPageString="@L["RowsPerPage"]"/>
            </PagerContent>
        </MudTable>
    </EduContainer>
</EduPage>

@code {
    private bool _loading = true;
    private bool _dense;
    private MudTable<UserTopicOverviewModel> _table = default!;
    private FavoritesRequest _request = new(FavoritesRequest.SortType.DateAddedNewest, 1, 25);

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index),
        new BreadcrumbItem(L["Profile"].Value, Links.History.User.MyProfile)
    };

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    private async Task<TableData<UserTopicOverviewModel>> ServerReload(TableState state)
    {
        _loading = true;
        _request = _request with { Page = state.Page + 1, Count = state.PageSize };

        var data = await HistoryClient.User.GetFavoritesAsync(_request);

        _loading = false;

        return new TableData<UserTopicOverviewModel>
        {
            Items = data.Data.Items,
            TotalItems = (int)data.Data.Count
        };
    }

    private async Task<bool> OnFavoriteClick(string topicId)
    {
        var result = await HistoryClient.Topic.ToggleFavoriteAsync(topicId);
        return result.Status == ResponseStatus.Success && result.Data;
    }

    private async Task Callback(FavoritesRequest.SortType arg)
    {
        _request = _request with { Sort = arg };
        await _table.ReloadServerData();
    }

}
