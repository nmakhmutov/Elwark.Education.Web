@page "/history/my/profile"
@using Education.Web.Gateways.History.Users.Model
@using Education.Web.Pages.History.My.Components
@using Education.Web.Pages.History.My.Profile.Components
@using Education.Web.Gateways.History
@layout HistoryLayout

@attribute [Authorize]

<PageTitle>
    @Customer.Name
</PageTitle>

<EduPage ShowFooter="@_response.IsLoaded">
    <ApiViewer Response="@_response" Context="profile">
        <EduContainer MaxWidth="EduWidth.W1920">
            <div class="grid">
                <ProfileCard Class="profile" Customer="Customer" Level="@profile.Level" />

                <DailyRewardCard
                    Class="daily-reward"
                    Reward="@profile.DailyReward"
                    OnCollect="@CollectDailyReward"
                    OnReject="@RejectDailyReward"
                    OnReached="@OnInitializedAsync"/>
                
                <WalletCard Class="wallet" Silver="@profile.Silver"/>

                <AchievementsCard Class="achievements" Achievements="@profile.Achievements"/>

                <StatisticsCard
                    Class="easy-test"
                    Title="@L["Tests:Easy"]"
                    Value="@profile.EasyTest.NumberOfTests.Total"
                    Href="@HistoryLinks.User.MyEasyTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.EasyTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="hard-test"
                    Title="@L["Tests:Hard"]"
                    Value="@profile.HardTest.NumberOfTests.Total"
                    Href="@HistoryLinks.User.MyHardTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.HardTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="mixed-test"
                    Title="@L["Tests:Mixed"]"
                    Value="@profile.MixedTest.NumberOfTests.Total"
                    Href="@HistoryLinks.User.MyMixedTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@profile.MixedTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="event-guesser"
                    Title="@L["EventGuesser"]"
                    Value="@profile.EventGuesser.Tests"
                    Href="@HistoryLinks.User.MyEventGuessers">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <EventGuesserScoreChart
                        Score="@profile.EventGuesser.Score"
                        Points="@profile.EventGuesser.Points"
                        Bonus="@profile.EventGuesser.Bonus"/>
                </StatisticsCard>

                <ActivityCard Class="activity" Activities="@profile.DailyProgress"/>
            </div>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private ApiResponse<HistoryUserProfileModel> _response = ApiResponse<HistoryUserProfileModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    protected override async Task OnInitializedAsync() =>
        _response = await HistoryClient.User.GetOverviewAsync();

    private async Task CollectDailyReward()
    {
        var response = await HistoryClient.User.CollectDailyReward();
        if (response.IsSuccess)
            await OnInitializedAsync();
    }

    private async Task RejectDailyReward()
    {
        var response = await HistoryClient.User.RejectDailyReward();
        if (response.IsSuccess)
            await OnInitializedAsync();
    }

}
