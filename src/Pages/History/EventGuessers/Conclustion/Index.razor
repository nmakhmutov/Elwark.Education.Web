@using Education.Web.Pages.History.Components
@using Education.Web.Services.History.EventGuesser
@using Education.Web.Services.History.EventGuesser.Model

@page "/history/event-guessers/{id}/conclusion"
@layout HistoryLayout
@attribute [Authorize]

<EduPage>
    <ApiViewer Result="@_result" Context="conclusion">
        <MudAlert Class="mb-6 mb-sm-12" Severity="Severity.Success" Square ContentAlignment="HorizontalAlignment.Center">
            @L["EventGuesser:Completed"]
        </MudAlert>

        <CompletedStars Class="mb-6" Progress="@_progress"/>

        <RewardsContainer MaxWidth="EduWidth.W1280" Rewards="@conclusion.Rewards"/>
        
        <EduContainer MaxWidth="EduWidth.W1280">
            <MudTable
                Items="@conclusion.Questions"
                Breakpoint="Breakpoint.Sm"
                Class="mb-3 mb-sm-6"
                Bordered="false"
                Elevation="0"
                Hover>
                <HeaderContent>
                    <MudTh>@L["Topic"]</MudTh>
                    <MudTh>@L["Question"]</MudTh>
                    <MudTh>@L["EventGuesser:CorrectAnswer"]</MudTh>
                    <MudTh>@L["EventGuesser:UserAnswer"]</MudTh>
                    <MudTh>@L["EventGuesser:Points"]</MudTh>
                    <MudTh>@L["EventGuesser:Bonus"]</MudTh>
                    <MudTh>@L["EventGuesser:Score"]</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="@L["Topic"]">
                        <MudLink Href="@HistoryUrl.Content.Topic(context.Topic.Id)">
                            @context.Topic.Title
                        </MudLink>
                    </MudTd>
                    <MudTd DataLabel="@L["Question"]">
                        @context.Title
                    </MudTd>
                    <MudTd DataLabel="@L["EventGuesser:CorrectAnswer"]">
                        <HistoryDate Typo="Typo.body2" Date="@context.CorrectAnswer"/>
                    </MudTd>
                    <MudTd DataLabel="@L["EventGuesser:UserAnswer"]">
                        <HistoryDate Typo="Typo.body2" Date="@context.UserAnswer" Color="@(context.IsCorrect ? Color.Success : Color.Error)"/>
                    </MudTd>
                    <MudTd DataLabel="@L["EventGuesser:Points"]">
                        @context.Points
                    </MudTd>
                    <MudTd DataLabel="@L["EventGuesser:Bonus"]">
                        @context.Bonus
                    </MudTd>
                    <MudTd DataLabel="@L["EventGuesser:Score"]">
                        @context.Score
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <div class="d-flex justify-end align-center pa-3">
                        <MudText Typo="Typo.subtitle1">
                            @L["EventGuesser:TotalScore"]: @conclusion.Score
                        </MudText>
                        <MudIcon Icon="@EduIcons.Score" Class="ml-1" Size="Size.Small" Color="Color.Primary"/>
                    </div>
                </PagerContent>
            </MudTable>
        </EduContainer>
    </ApiViewer>
</EduPage>

@code {
    private ApiResult<ConclusionModel> _result = ApiResult<ConclusionModel>.Loading();
    private double _progress;

    [Inject]
    public IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryEventGuesserService EventGuesserService { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _result = await EventGuesserService.GetConclusionAsync(Id);
        if (_result.IsFailed)
        {
            if (_result.Error.IsEventGuesserNotFound())
                Navigation.NavigateTo(HistoryUrl.EventGuesser.Index);
            
            return;
        }
        
        _progress = Math.Round((double)_result.Data.Score / _result.Data.MaxScore * 100);
    }

}
