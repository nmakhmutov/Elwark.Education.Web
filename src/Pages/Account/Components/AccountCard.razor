@using MudBlazor.Utilities

<MudPaper Class="@_class" Elevation="0">
    <MudStack Row Justify="Justify.Center" Class="mb-3">
        <MudImage
            Src="@Customer.Image"
            Alt="@Customer.Name"
            Width="120"
            Class="rounded"
            ObjectPosition="ObjectPosition.Center"
            ObjectFit="ObjectFit.Cover"/>
    </MudStack>
    <MudText Typo="Typo.h6" Align="Align.Center" Class="mb-3">
        @Customer.Name
    </MudText>

    <MudText Typo="Typo.h6" Class="mb-3">
        @L["Customer:Details"]
    </MudText>
    <MudDivider Class="mb-3"/>

    @foreach (var item in _items)
    {
        <MudStack Row Spacing="1" AlignItems="AlignItems.Center" Class="mb-3">
            <MudText Typo="Typo.body2" Style="font-weight: bold">
                @item.Key:
            </MudText>
            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                @item.Value
            </MudText>
        </MudStack>
    }

    <MudStack Row Justify="Justify.Center" Class="mt-6">
        <MudButton Color="Color.Primary" Variant="Variant.Filled" EndIcon="@Icons.Outlined.OpenInNew" Link="@Configuration["Urls:Account"]" Target="_blank">
            @L["Account:Elwark"]
        </MudButton>
    </MudStack>
</MudPaper>

@code {
    private string? _class;
    private IDictionary<string, string> _items = new Dictionary<string, string>();

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IConfiguration Configuration { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }
    
    protected override void OnParametersSet()
    {
        var now = DateTime.Now;
        _class = CssBuilder.Default("pa-3 pa-sm-6")
            .AddClass(Class, Class is not null)
            .Build();

        _items = new Dictionary<string, string>
        {
            [L["Customer:TimeZone"]] = Customer.DateTimeInfo.TimeZone.Id,
            [L["Customer:WeekStart"]] = L[$"DayOfWeek:{Customer.WeekStart}"],
            [L["Customer:DateFormat"]] = $"{now.ToString(Customer.DateTimeInfo.DateFormat)} ({Customer.DateTimeInfo.DateFormat})",
            [L["Customer:TimeFormat"]] = $"{now.ToString(Customer.DateTimeInfo.TimeFormat)} ({Customer.DateTimeInfo.TimeFormat})"
        };
    }

}
