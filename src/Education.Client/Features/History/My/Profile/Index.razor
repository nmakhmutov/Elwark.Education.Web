@page "/history/my/profile"
@layout HistoryLayout

@using Education.Client.Gateways.History
@using Education.Client.Gateways.History.Me
@using Education.Client.Features.History.My.Components
@using Education.Client.Features.History.My.Profile.Components

@attribute [Authorize]

<PageTitle>@L["Profile"]</PageTitle>

<ApiViewer Response="@_overview">
    <Loading>
        <PageSpinner/>
    </Loading>
    <Success Context="overview">
        <MainContainer>
            <PageHeader Title="@L["Profile"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs"/>
            <div class="grid">
                <SubjectCard
                    Class="subject"
                    Subject="SubjectType.History"
                    Subscription="@overview.Subscription"
                    TestCreation="@overview.TestCreation"
                    TestQuestionMistakes="@overview.TestMistakes"
                    TestDurationCoefficient="@overview.TestDurationCoefficient"
                    EventGuesserCreation="@overview.EventGuesser"
                    OnBuyClick="@OnBuyClick"/>

                <WalletCard
                    Class="balance"
                    Wallet="@overview.Profile.Wallet"/>

                <LevelCard
                    Class="level"
                    Level="@overview.Profile.Level"/>

                <AchievementsCard
                    Class="achievements"
                    Achievements="@overview.Achievements"/>

                <RecentTransactionsCard
                    Class="transactions"
                    Transactions="@overview.Profile.Transactions"/>

                <DailyRewardCard
                    Class="daily-reward"
                    Reward="@overview.DailyReward"
                    OnCollect="@CollectDailyReward"/>

                <StatisticsCard
                    Class="easy-test"
                    Title="@L["Tests:Easy"]"
                    Value="@overview.Statistics.EasyTest.NumberOfTests.Total"
                    Href="@Links.History.MyEasyTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@overview.Statistics.EasyTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="hard-test"
                    Title="@L["Tests:Hard"]"
                    Value="@overview.Statistics.HardTest.NumberOfTests.Total"
                    Href="@Links.History.MyHardTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@overview.Statistics.HardTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="mixed-test"
                    Title="@L["Tests:Mixed"]"
                    Value="@overview.Statistics.MixedTest.NumberOfTests.Total"
                    Href="@Links.History.MyMixedTests">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <ScoreChart Value="@overview.Statistics.MixedTest.Score"/>
                </StatisticsCard>

                <StatisticsCard
                    Class="event-guesser"
                    Title="@L["EventGuesser"]"
                    Value="@overview.Statistics.EventGuesser.Tests"
                    Href="@Links.History.MyEventGuessers">
                    <Subheader Title="@L["Score"]" Subtitle="@L["ForAllTime"]"/>
                    <EventGuesserScoreChart
                        Score="@overview.Statistics.EventGuesser.Score"
                        Points="@overview.Statistics.EventGuesser.Points"
                        Bonus="@overview.Statistics.EventGuesser.Bonus"/>
                </StatisticsCard>

                <ActivityStatisticsCard
                    Class="activity"
                    Title="@L["Statistics"]"
                    Activities="@overview.Statistics.Activities"/>
            </div>
        </MainContainer>
    </Success>
</ApiViewer>

@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index)
    };

    private ApiResponse<HistoryUserProfile> _overview = ApiResponse<HistoryUserProfile>.Loading();

    [Inject]
    private IDialogService Dialog { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnInitializedAsync() => 
        _overview = await HistoryClient.User.GetOverviewAsync();

    private void OnBuyClick()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Medium,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };

        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = SubjectType.History
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

    private async Task CollectDailyReward()
    {
        var response = await HistoryClient.User.CollectDailyReward();
        if (response.Status == ResponseStatus.Success)
            await OnInitializedAsync();
    }

}
