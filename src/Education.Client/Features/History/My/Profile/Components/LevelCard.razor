@using Education.Client.Extensions
<MudCard Class="@Class">
    <MudCardContent Class="pa-3 pa-sm-6">
        <MudText Typo="Typo.h6" Align="Align.Center" Class="mb-3">
            @L["Experience:MyLevel"]
        </MudText>
        <div class="hexagon-wrapper">
            <div class="hexagon">
                <span>@Level</span>
            </div>
        </div>
        <MudProgressLinear Min="0" Max="@NextLevelExperience" Value="@Experience.Value" Color="Color.Primary" Class="mb-2"/>
        <div class="d-flex justify-space-between mb-6">
            <div class="d-flex align-center">
                <MudIcon Icon="@EducationIcons.Experience" Class="mr-1" Size="Size.Small" Color="Color.Primary"/>
                <MudText Typo="Typo.body2">
                    @L["Experience:PointsToNextLevel", (NextLevelExperience - Experience.Value).ToString("N0")]
                </MudText>
            </div>
            <MudText Typo="Typo.body2">
                @(((double)Experience.Value / NextLevelExperience * 100).ToReadable())%
            </MudText>
        </div>
        <GameCurrencyView Currency="@Experience"/>
        <GameCurrencyView Currency="@Silver"/>
    </MudCardContent>
</MudCard>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public uint Level { get; set; }

    [Parameter, EditorRequired]
    public ulong NextLevelExperience { get; set; }

    [Parameter, EditorRequired]
    public ExperienceCurrency Experience { get; set; } = default!;

    [Parameter, EditorRequired]
    public SilverCurrency Silver { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

}
