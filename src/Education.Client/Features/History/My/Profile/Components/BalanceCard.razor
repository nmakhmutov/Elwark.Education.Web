@using Education.Client.Gateways.Models.User
@using Education.Client.Extensions

<MudCard Class="@Class">
    <MudCardHeader Class="pa-3 pa-sm-6">
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Primary" Size="Size.Medium">
                <MudIcon Icon="@EducationIcons.Experience" Size="Size.Medium"/>
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <div class="d-flex align-center justify-space-between">
                <MudText Typo="Typo.h6">
                    @L["Experience:MyPoints"]
                </MudText>
                <HumanReadableText Value="@Balance" Typo="Typo.h5"/>
            </div>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Class="pa-3 pa-sm-6">
        <MudList Clickable="false" Dense="true" DisableGutters="true" DisablePadding="true">
            @foreach (var transaction in Transactions)
            {
                <MudListItem>
                    <div class="d-flex flex-row justify-space-between">
                        <div>
                            <MudText Typo="Typo.body1" Style="word-wrap: break-word">
                                @if (transaction.Type == TransactionType.Achievement)
                                {
                                    @L[$"ExperienceType:{transaction.Type}", transaction.Comment ?? string.Empty]
                                }
                                else
                                {
                                    @L[$"ExperienceType:{transaction.Type}"]
                                }
                            </MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                @transaction.CreatedAt.ToSimpleFormat()
                            </MudText>
                        </div>
                        <div class="d-flex flex-row align-center">
                            @foreach (var currency in transaction.Currencies)
                            {
                                <GameCurrencyView Currency="@currency"/>
                            }
                        </div>
                    </div>
                </MudListItem>
            }
        </MudList>
    </MudCardContent>
</MudCard>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public long Balance { get; set; }

    [Parameter, EditorRequired]
    public Transaction[] Transactions { get; set; } = Array.Empty<Transaction>();

}
