@page "/history/my/achievements"
@layout HistoryLayout

@using Education.Client.Gateways.History.User
@using Education.Client.Gateways.History
@using Education.Client.Features.History.My.Components

@attribute [Authorize]

<PageTitle>@L["Achievements"]</PageTitle>

<ApiViewer Response="@_response">
    <Loading>
        <PageSpinner/>
    </Loading>

    <Success Context="statistics">
        <EduContainer>
            <PageHeader Title="@L["Achievements"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs"/>

            @for (var index = 0; index < statistics.Length; index++)
            {
                var statistic = statistics[index];
                var css = index + 1 == statistics.Length ? "grid" : "grid mb-6 mb-sm-12";

                <MudText Typo="Typo.h5" Class="mb-3">
                    @L[$"AchievementCategory:{statistic.Category}"]
                    <MudText Typo="Typo.subtitle1" Inline="true">
                        @statistic.Completed/@statistic.Total
                    </MudText>
                </MudText>
                <div class="@css">
                    @foreach (var achievement in statistic.Items)
                    {
                        <AchievementView Achievement="@achievement"/>
                    }
                </div>
            }
        </EduContainer>
    </Success>
</ApiViewer>


@code {

    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index),
        new BreadcrumbItem(L["Profile"].Value, Links.History.MyProfile)
    };

    private ApiResponse<CategorizedAchievements[]> _response = ApiResponse<CategorizedAchievements[]>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    protected override async Task OnParametersSetAsync() =>
        _response = await HistoryClient.User.GetAchievementsAsync();

}
