@page "/history/my/topics"
@layout HistoryLayout

@using Education.Client.Gateways.History
@using Education.Client.Features.History.Components
@using Education.Client.Gateways.History.Me

@attribute [Authorize]

<PageTitle>@L["Test:MyProgress"]</PageTitle>
<MainContainer>
    <PageHeader Title="@L["Test:MyProgress"]" Class="mb-3 mb-sm-6" Breadcrumbs="@Breadcrumbs"/>

    <ApiViewer Response="@_topics">
        <Loading>
            <DefaultFitGrid>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
                <SkeletonCard/>
            </DefaultFitGrid>
        </Loading>
        <Success Context="topics">
            <DefaultFitGrid>
                @if (topics.Items.Length > 0)
                {
                    foreach (var item in topics.Items)
                    {
                        <TopicCard
                            Id="@item.Id"
                            Epoch="@item.Epoch"
                            Image="@item.Image"
                            Title="@item.Title"
                            Overview="@item.Overview"
                            Rating="@item.Rating"
                            Progress="@item.Progress"
                            IsFavorite="@item.IsFavorite"
                            OnFavoriteClick="@OnFavoriteClick"/>
                    }
                    
                    if (topics.Pages > 1)
                    {
                        <div class="grid-full-row d-flex justify-center mt-6 mt-sm-12">
                            <MudPagination Selected="@CurrentPage" SelectedChanged="@OnPagination" Count="@((int)topics.Pages)"/>
                        </div>
                    }
                }
                else
                {
                    <EmptyResult
                        Class="grid-full-row"
                        Title="@L["Profile:EmptyFavoritesTitle"]"
                        Subtitle="@L["Profile:EmptyFavoritesSubtitle"]"/>
                }
            </DefaultFitGrid>
        </Success>
    </ApiViewer>

</MainContainer>

@code {
    private TopicsProgressRequest _request = new(false, TopicsProgressRequest.SortType.DateAddedNewest, 1, 20);
    private ApiResponse<PageResponse<UserTopicSummary>> _topics = ApiResponse<PageResponse<UserTopicSummary>>.Loading();
    private List<BreadcrumbItem> Breadcrumbs => new()
    {
        new BreadcrumbItem(L["Account"].Value, Links.Account.Index),
        new BreadcrumbItem(L["Profile"].Value,  Links.History.MyProfile)
    };

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Parameter, SupplyParameterFromQuery(Name = "page")]
    public int CurrentPage { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        _topics = ApiResponse<PageResponse<UserTopicSummary>>.Loading();
        CurrentPage = CurrentPage < 1 ? 1 : CurrentPage;

        _request = _request with { Page = CurrentPage };
        _topics = await HistoryClient.Me.GetTopicsProgressAsync(_request);
    }

    private async Task<bool> OnFavoriteClick(string topicId)
    {
        var result = await HistoryClient.Topic.ToggleFavoriteAsync(topicId);
        return result.Status == ResponseStatus.Success && result.Data;
    }

    private void OnPagination(int page)
    {
        CurrentPage = page;
        Navigation.NavigateTo(Navigation.GetUriWithQueryParameter("page", CurrentPage));
    }

}
