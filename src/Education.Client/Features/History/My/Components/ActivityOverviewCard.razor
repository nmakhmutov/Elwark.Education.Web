@using Education.Client.Gateways.History.Me

<MudCard Class="@Class">
    <MudCardHeader Class="pa-3 pa-sm-6">
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Primary" Size="Size.Medium">
                <MudIcon Icon="@EducationIcons.MyActivity" Size="Size.Medium"/>
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">
                @Title
            </MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Class="pa-3 pa-sm-6">
        <MudChart
            ChartType="ChartType.Bar"
            Width="100%"
            Height="300px"
            ChartOptions="@(new ChartOptions { DisableLegend = true })"
            ChartSeries="@_dailyChartSeries"
            XAxisLabels="@_dailyXAxis.ToArray()"/>
    </MudCardContent>
</MudCard>

@code {
    private readonly List<string> _dailyXAxis = new();
    private readonly List<ChartSeries> _dailyChartSeries = new();

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public Activity[] Activities { get; set; } = Array.Empty<Activity>();

    protected override void OnParametersSet()
    {
        _dailyXAxis.Clear();
        _dailyChartSeries.Clear();
        var list = new List<double>();

        foreach (var (createdAt,points) in Activities.OrderBy(x => x.Date))
        {
            _dailyXAxis.Add(createdAt.ToString("dd MMM"));
            list.Add(points);
        }

        _dailyChartSeries.Add(new ChartSeries
        {
            Data = list.ToArray()
        });
    }

}
