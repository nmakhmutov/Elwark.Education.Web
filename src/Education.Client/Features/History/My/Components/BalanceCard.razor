@using Education.Client.Gateways.Models.User
@using Education.Client.Extensions

<MudCard Class="@Class">
    <MudCardHeader Class="pa-3 pa-sm-6">
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Primary" Size="Size.Medium">
                <MudIcon Icon="@EducationIcons.Experience" Size="Size.Medium"/>
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">
                @L["Experience:MyPoints"]
            </MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <HumanReadableText Value="@Balance" Typo="Typo.h5" Class="mt-2 mr-2"/>
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent Class="pa-0">
        @if (Experiences.Length > 0)
        {
            <MudTimeline Class="@Class" TimelineOrientation="@Orientation" TimelinePosition="@TimelinePosition">
                @foreach (var experience in Experiences)
                {
                    <MudTimelineItem Color="Color.Transparent" Size="Size.Medium" Variant="Variant.Outlined" Class="px-0 mx-0">
                        <ItemOpposite>
                            <MudText Typo="Typo.h6">
                                @experience.Value
                            </MudText>
                        </ItemOpposite>
                        <ItemDot>
                            <MudIcon Icon="@EducationIcons.Experience" Size="Size.Medium" Color="Color.Primary"/>
                        </ItemDot>
                        <ItemContent>
                            <div class="@(Orientation == TimelineOrientation.Horizontal ? "d-flex flex-column align-center" : null)">
                                <MudText Typo="Typo.button" Align="Align.Center" Style="word-wrap: break-word">
                                    @if (experience.Type == ExperienceType.Achievement)
                                    {
                                        @L[$"ExperienceType:{experience.Type}", L[$"Achievement:{experience.Comment}"]]
                                    }
                                    else
                                    {
                                        @L[$"ExperienceType:{experience.Type}"]
                                    }
                                </MudText>
                                <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                    @experience.CreatedAt.ToSimpleFormat()
                                </MudText>
                            </div>
                        </ItemContent>
                    </MudTimelineItem>
                }
            </MudTimeline>
        }
    </MudCardContent>
</MudCard>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public TimelineOrientation Orientation { get; set; }

    [Parameter, EditorRequired]
    public TimelinePosition TimelinePosition { get; set; }

    [Parameter, EditorRequired]
    public long Balance { get; set; }

    [Parameter, EditorRequired]
    public Experience[] Experiences { get; set; } = Array.Empty<Experience>();

}
