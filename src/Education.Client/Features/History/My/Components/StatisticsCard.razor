@typeparam TValue

<MudCard Class="@Class">
    <MudCardHeader Class="pb-0 px-3 pt-3 px-sm-6 pt-sm-6">
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Primary" Size="Size.Medium">
                <MudIcon Icon="@Icon" Size="Size.Medium"/>
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <div class="d-flex align-center justify-space-between">
                @if (Href is not null)
                {
                    <MudLink Typo="Typo.h6" Href="@Href">
                        @Title
                    </MudLink>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        @Title
                    </MudText>
                }
                <HumanReadableText Value="@Value" Typo="Typo.h5"/>
            </div>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Class="pa-3 pa-sm-6">
        @ChildContent
    </MudCardContent>
</MudCard>

@code {

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public string Icon { get; set; } = Icons.Filled.Circle;

    [Parameter, EditorRequired]
    public string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public TValue Value { get; set; } = default!;

    [Parameter]
    public string? Href { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

}
