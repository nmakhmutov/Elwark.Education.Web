@using Education.Client.Gateways.History
@inherits LayoutComponentBase

<MudLayout>
    <MudThemeProvider Theme="@ThemeProvider.Theme"/>
    <MudDialogProvider/>
    <MudSnackbarProvider/>

    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@SidebarService.ToggleAsync"/>
        <MudLink Href="@Links.History.Index" Typo="Typo.h5" Color="Color.Default" Underline="Underline.None" Class="d-none d-sm-block">
            @L["Subject:History"] <sup class="mud-typography mud-typography-caption mud-primary-text">beta</sup>
        </MudLink>
        <MudSpacer/>
        <MudAutocomplete
            T="TopicSummary"
            @ref="@_searchAutocomplete"
            Dense="true"
            DebounceInterval="300"
            AdornmentIcon="@Icons.Outlined.Search"
            Placeholder="@L["Search"]"
            Variant="Variant.Outlined"
            Margin="Margin.Dense"
            SearchFunc="OnSearch"
            CoerceValue="true"
            ResetValueOnEmptyText="true"
            ValueChanged="OnSearchResult">
            <ItemTemplate Context="result">
                <div class="d-flex align-center">
                    <MudAvatar Image="@result.Image" Size="Size.Large" Square="true" Class="mr-4"/>
                    <div>
                        <MudText>@result.Title</MudText>
                    </div>
                </div>
            </ItemTemplate>
        </MudAutocomplete>
        <MudSpacer/>
        <MudIconButton Icon="@ThemeProvider.Icon" Color="Color.Inherit" OnClick="@ThemeProvider.ToggleAsync"/>
    </MudAppBar>

    <MudDrawer Open="@SidebarService.IsOpen" OpenChanged="@SidebarService.SetAsync" Breakpoint="Breakpoint.Lg" ClipMode="DrawerClipMode.Docked" Elevation="0">
        <UserDrawerHeader/>
        <MudNavMenu>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.Index" Icon="@EducationIcons.History">
                @L["Page:Home"]
            </MudNavLink>
            <MudNavGroup Title="@L["History:Epochs"]" Icon="@EducationIcons.Epochs">
                @foreach (var epoch in Enum.GetValues<EpochType>().Where(x => x != EpochType.None))
                {
                    <MudNavLink Href="@Links.History.TopicByEpoch(epoch)">
                        @L[$"History:{epoch}"]
                    </MudNavLink>
                }
            </MudNavGroup>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.Empires" Icon="@EducationIcons.Empires">
                @L["History:Empires"]
            </MudNavLink>
            <MudDivider Class="my-2"/>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.TestBuilder" Icon="@EducationIcons.Tests">
                @L["Tests"]
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.EventGuesserBuilder" Icon="@EducationIcons.EventGuesser">
                @L["EventGuesser"]
            </MudNavLink>
            <MudDivider Class="my-2"/>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.MyProfile" Icon="@EducationIcons.MyProfile">
                @L["Profile"]
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Href="@Links.History.MyTopics" Icon="@EducationIcons.MyTopics">
                @L["Test:MyActivity"]
            </MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent Class="d-flex flex-column h-100">
        <main style="flex: 1 1 auto">
            @Body
        </main>

        <footer >
            <MudDivider/>
            <CenteredContainer MaxWidth="ContainerWidth.W1600">
                <div class="d-flex justify-space-between align-center my-3 my-sm-6">
                    <img style="width: 40px; height: 40px"
                         src="https://res.cloudinary.com/elwark/image/upload/v1613019539/Elwark/primary/60x60_eonbge.png"
                         alt="elwark logo"/>

                    <MudText Typo="Typo.subtitle1">
                        Elwark @L["Subject:History"]. &copy; @DateTime.Now.Year
                    </MudText>
                </div>
            </CenteredContainer>
        </footer>
    </MudMainContent>

    <MudScrollToTop TopOffset="400" Style="z-index:2000;">
        <MudFab Icon="@Icons.Outlined.KeyboardArrowUp" Color="Color.Primary"/>
    </MudScrollToTop>
</MudLayout>

@code {
    private MudAutocomplete<TopicSummary> _searchAutocomplete = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Inject]
    private ThemeProvider ThemeProvider { get; set; } = default!;

    [Inject]
    private SidebarService SidebarService { get; set; } = default!;

    [Inject]
    private IHistoryClient Client { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private async Task<IEnumerable<TopicSummary>> OnSearch(string text)
    {
        if (string.IsNullOrWhiteSpace(text) || text.Length < 2)
            return Array.Empty<TopicSummary>();

        var result = await Client.Home.SearchAsync(text);
        return result.IsSuccess ? result.Data : Array.Empty<TopicSummary>();
    }

    private Task OnSearchResult(TopicSummary entry)
    {
        NavigationManager.NavigateTo(Links.History.TopicById(entry.Id));
        return _searchAutocomplete.Clear();
    }

}
