@using Education.Client.Features.History.Clients.Store.Model
@using Education.Client.Features.History.Clients.User.Model
@using Education.Client.Features.History.Clients.Store
<MudDialog
    Class="pa-3 pa-sm-6"
    ClassContent="pa-0"
    ClassActions="pa-0"
    DefaultFocus="DefaultFocus.Element"
    DisableSidePadding>
    <DialogContent>
        <header class="d-sm-flex pa-3 pa-sm-6">
            <img class="avatar rounded" src="@Image" alt="@FullName"/>
            <section class="d-flex flex-grow-1 flex-column justify-space-between">
                <MudText Typo="Typo.h4">
                    @FullName
                </MudText>

                <UserLevelProgress Level="@Level.Current" Experience="@Level.Experience" Threshold="@Level.Threshold"/>
            </section>
        </header>

        <div class="mud-background rounded pa-3 pa-sm-6 mb-3 mb-sm-6">
            <ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync">
                <ChildContent Context="upcoming">
                    <MudText Class="mb-3 mb-sm-6" Typo="Typo.subtitle1" Align="Align.Center">
                        <b>@L["User_ReachLevelToUnlock", upcoming.NextLevel]:</b>
                    </MudText>

                    <section class="d-flex flex-wrap gap-3 gap-sm-6 justify-center">
                        @foreach (var inventory in upcoming.Inventories)
                        {
                            <InventoryInfoCard
                                Class="w-max-180"
                                Title="@inventory.Title"
                                IconUrl="@inventory.ImageUrl"
                                Subtitle="@L.GetInventoryCategoryTitles(inventory.Categories)"
                                Overview="@inventory.Overview"/>
                        }
                    </section>
                </ChildContent>
                <Loading>
                    <div class="d-flex justify-center">
                        <MudSkeleton Class="mb-3 mb-sm-6" SkeletonType="SkeletonType.Text" Width="30%"/>
                    </div>

                    <section class="d-flex flex-wrap gap-3 gap-sm-6 justify-center">
                        <InventorySkeletonCard/>
                        <InventorySkeletonCard/>
                    </section>
                </Loading>
            </ApiViewer>
        </div>

        <div class="d-flex justify-end">
            <MudButton Color="Color.Default" Variant="Variant.Filled" OnClick="@(() => MudDialog.Close())" DisableElevation>
                @L["Button_Close"]
            </MudButton>
        </div>
    </DialogContent>
</MudDialog>

@code {
    private ApiResult<UpcomingInventoriesModel> _result = ApiResult<UpcomingInventoriesModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Inject]
    private IHistoryStoreClient StoreClient { get; init; } = default!;

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter, EditorRequired]
    public required string FullName { get; set; }

    [Parameter, EditorRequired]
    public required string Image { get; set; }

    [Parameter, EditorRequired]
    public required UserLevelModel Level { get; set; }

    protected override async Task OnInitializedAsync() =>
        _result = await StoreClient.GetUpcomingInventoriesAsync();

}
