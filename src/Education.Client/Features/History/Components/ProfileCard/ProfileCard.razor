@using Education.Client.Features.History.Clients.User
@using Education.Client.Features.History.Clients.User.Model
<section class="d-flex flex-column mud-paper @Class">
    <header class="header px-3 pt-3 px-sm-6 pt-sm-6">
        <div class="avatar-wrapper">
            <img class="avatar rounded" src="@Customer.Image" alt="@Customer.Name" loading="lazy"/>
        </div>

        <MudText Class="one-line-text" Typo="Typo.subtitle1">
            @Customer.Name
        </MudText>

        <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Size="Size.Small" OnClick="@OnLevelClick"/>
    </header>

    <UserLevelProgress
        Class="flex-grow-1 pa-3 pa-sm-6"
        Level="@Level.Current"
        Experience="@Level.Experience"
        Threshold="@Level.Threshold"/>

    <section class="d-flex flex-wrap flex-sm-nowrap justify-space-between align-center border-t mud-border-lines-default gap-3 pa-3 px-sm-6">
        <div>
            <MudLink Typo="Typo.subtitle2" Color="Color.Primary" Href="@HistoryUrl.User.MyFinance">
                @L["Wallet_Title"]
            </MudLink>
            <div class="d-flex align-center gap-3">
                @foreach (var (currency, amount) in Wallet)
                {
                    <InternalMoney Currency="@currency" Amount="@amount" Typo="Typo.body1" Horizontal ShowFullValue/>
                }
            </div>
        </div>
        <div class="d-flex flex-column align-end">
            <MudLink Typo="Typo.subtitle2" Color="Color.Primary" Href="@HistoryUrl.User.MyBackpack">
                @L["Backpack_Title"]
            </MudLink>
            <BackpackOverview Fullness="@Backpack.Fullness" Capacity="@Backpack.Capacity"/>
        </div>
    </section>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Inject]
    private IHistoryUserClient UserClient { get; init; } = default!;

    [Inject]
    private IDialogService DialogService { get; init; } = default!;

    [CascadingParameter]
    public CustomerState Customer { get; init; } = default!;

    [Parameter, EditorRequired]
    public required UserLevelModel Level { get; set; }

    [Parameter, EditorRequired]
    public required BackpackOverviewModel Backpack { get; set; }

    [Parameter, EditorRequired]
    public required Dictionary<InternalCurrency, long> Wallet { get; set; }

    [Parameter]
    public string? Class { get; set; }

    private async Task OnLevelClick()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Medium,
            CloseOnEscapeKey = true,
            FullWidth = true,
            NoHeader = true,
            CloseButton = false
        };

        var parameters = new DialogParameters
        {
            [nameof(NextLevelDialog.FullName)] = Customer.Name,
            [nameof(NextLevelDialog.Image)] = Customer.Image,
            [nameof(NextLevelDialog.Level)] = Level
        };

        await DialogService.ShowAsync<NextLevelDialog>(string.Empty, parameters, options);
    }

}
