@using ApexCharts
@using Education.Client.Features.History.Clients.Learner.Model.Examination
<div class="@Class">
    <ApexChartContainer>
        <ApexChart TItem="Data" Options="@Options">
            <ApexRangeSeries
                TItem="Data"
                Items="@Series"
                XValue="@(x => x.Name)"
                YValue="@(x => x.Value)"
                PointColor="@(x => x.Color)"/>
        </ApexChart>
    </ApexChartContainer>

    <ChartList Items="@Items"/>
</div>

@code {

    private static ApexChartOptions<Data> Options =>
        new()
        {
            PlotOptions = new PlotOptions
            {
                Bar = new PlotOptionsBar
                {
                    Horizontal = true
                }
            },
            Tooltip = new Tooltip
            {
                Enabled = false
            },
            Chart = new Chart
            {
                Toolbar = new Toolbar
                {
                    Show = false
                },
                Background = "transparent",
                ForeColor = "var(--mud-palette-text-primary)"
            },
            Stroke = new Stroke
            {
                Show = false
            },
            Colors =
            [
                HistoryChart.Examination.Question.Correct,
                HistoryChart.Examination.Question.Incorrect,
                HistoryChart.Examination.Question.Answered,
                HistoryChart.Examination.Question.NotAnswered
            ]
        };

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required AnswerRatioModel Ratio { get; set; }

    [Parameter]
    public string? Class { get; set; }

    private List<Data> Series =>
    [
        new(L["Questions_Correct"], 0, HistoryChart.Examination.Question.Correct),
        new(L["Questions_Correct"], Ratio.Correct, HistoryChart.Examination.Question.Correct),
        new(L["Questions_Incorrect"], 0, HistoryChart.Examination.Question.Incorrect),
        new(L["Questions_Incorrect"], Ratio.Incorrect, HistoryChart.Examination.Question.Incorrect),
        new(L["Questions_Answered"], 0, HistoryChart.Examination.Question.Answered),
        new(L["Questions_Answered"], Ratio.Answered, HistoryChart.Examination.Question.Answered),
        new(L["Questions_NotAnswered"], 0, HistoryChart.Examination.Question.NotAnswered),
        new(L["Questions_NotAnswered"], Ratio.NotAnswered, HistoryChart.Examination.Question.NotAnswered)
    ];

    private EduChartListItem[] Items =>
    [
        new(L["Questions_Correct"], Ratio.Correct, HistoryChart.Examination.Question.Correct),
        new(L["Questions_Incorrect"], Ratio.Incorrect, HistoryChart.Examination.Question.Incorrect),
        new(L["Questions_Answered"], Ratio.Answered, HistoryChart.Examination.Question.Answered),
        new(L["Questions_NotAnswered"], Ratio.NotAnswered, HistoryChart.Examination.Question.NotAnswered),
        new(L["Questions_Total"], Ratio.Questions, null)
    ];

    private sealed record Data(string Name, uint Value, string Color);

}
