@using ApexCharts
@using Education.Client.Features.History.Clients.Quiz.Model
<div class="@Class">
    <ApexChartContainer>
        <ApexChart TItem="Data" Options="@_options">
            <ApexPointSeries
                TItem="Data"
                Items="@Series"
                SeriesType="SeriesType.Donut"
                XValue="@(x => x.Name)"
                YAggregate="@(x => x.Sum(e => e.Value))"/>
        </ApexChart>
    </ApexChartContainer>

    <ChartList Items="@Items"/>
</div>

@code {

    private static ApexChartOptions<Data> _options = new()
    {
        Chart = new Chart
        {
            Background = "transparent",
            ForeColor = "var(--mud-palette-text-primary)"
        },
        Stroke = new Stroke
        {
            Show = false
        },
        Legend = new Legend
        {
            Show = false
        },
        Colors =
        [
            HistoryChart.Quiz.Score.Questions,
            HistoryChart.Quiz.Score.SpeedBonus,
            HistoryChart.Quiz.Score.NoMistakesBonus
        ]
    };

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public required ScoreModel Score { get; set; }

    private EduChartListItem[] Items =>
    [
        new(L["Score_Questions_Title"], Score.Questions, HistoryChart.Quiz.Score.Questions),
        new(L["Score_TimeBonus_Title"], Score.TimeBonus, HistoryChart.Quiz.Score.SpeedBonus),
        new(L["Score_AccuracyBonus_Title"], Score.AccuracyBonus, HistoryChart.Quiz.Score.NoMistakesBonus),
        new(L["Score_Total_Title"], Score.Total, null)
    ];

    private Data[] Series =>
    [
        new(L["Score_Questions_Title"], Score.Questions),
        new(L["Score_TimeBonus_Title"], Score.TimeBonus),
        new(L["Score_AccuracyBonus_Title"], Score.AccuracyBonus)
    ];

    private sealed record Data(string Name, decimal Value);

}
