@using ApexCharts
@using Education.Client.Features.History.Clients.Quiz.Model
<div class="@Class">
    <div class="d-flex justify-center">
        <div class="wrapper">
            <ApexChart TItem="Data" Options="@Options">
                <ApexPointSeries
                    TItem="Data"
                    Items="@Series"
                    SeriesType="SeriesType.Donut"
                    XValue="@(x => x.Name)"
                    YAggregate="@(x => x.Sum(e => e.Value))"/>
            </ApexChart>
        </div>
    </div>

    <ChartList Items="@Items"/>
</div>

@code {

    private static ApexChartOptions<Data> Options =>
        new()
        {
            Chart = new Chart
            {
                Background = "transparent",
                ForeColor = "var(--mud-palette-text-primary)"
            },
            Stroke = new Stroke
            {
                Show = false
            },
            Legend = new Legend
            {
                Show = false
            },
            Colors =
            [
                HistoryChart.Quiz.Score.Questions,
                HistoryChart.Quiz.Score.SpeedBonus,
                HistoryChart.Quiz.Score.NoMistakesBonus
            ]
        };

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public required ScoreModel Value { get; set; }

    private ChartList.Item[] Items =>
    [
        new ChartList.Item(L["Score_Questions_Title"], Value.Questions, HistoryChart.Quiz.Score.Questions),
        new ChartList.Item(L["Score_SpeedBonus_Title"], Value.Speed, HistoryChart.Quiz.Score.SpeedBonus),
        new ChartList.Item(L["Score_NoMistakesBonus_Title"], Value.NoMistakes, HistoryChart.Quiz.Score.NoMistakesBonus),
        new ChartList.Item(L["Score_Total_Title"], Value.Total, null)
    ];

    private Data[] Series =>
    [
        new Data(L["Score_Questions_Title"], Value.Questions),
        new Data(L["Score_SpeedBonus_Title"], Value.Speed),
        new Data(L["Score_NoMistakesBonus_Title"], Value.NoMistakes)
    ];

    private sealed record Data(string Name, decimal Value);

}