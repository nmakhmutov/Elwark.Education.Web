@using ApexCharts
@using Education.Client.Features.History.Clients.DateGuesser.Model
<div class="@Class">
    <ApexChartContainer>
        <ApexChart TItem="Data" Options="@Options">
            <ApexPointSeries
                TItem="Data"
                Items="@Series"
                SeriesType="SeriesType.Donut"
                XValue="@(x => x.Name)"
                YAggregate="@(x => x.Sum(e => e.Value))"/>
        </ApexChart>
    </ApexChartContainer>

    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options =>
        new()
        {
            Chart = new Chart
            {
                Background = "transparent",
                ForeColor = "var(--mud-palette-text-primary)"
            },
            Stroke = new Stroke
            {
                Show = false
            },
            Legend = new Legend
            {
                Show = false
            },
            Colors = [HistoryChart.DateGuesser.Score.Points, HistoryChart.DateGuesser.Score.X2Points]
        };

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public ScoreModel Score { get; set; } = new(0, 0, 0);

    private EduChartListItem[] Items =>
    [
        new(L["History_DateGuesser_Points"], Score.Points, HistoryChart.DateGuesser.Score.Points),
        new(L["History_DateGuesser_x2Bonus"], Score.Bonus, HistoryChart.DateGuesser.Score.X2Points),
        new(L["History_DateGuesser_Score"], Score.Total, null)
    ];

    private Data[] Series =>
    [
        new(L["History_DateGuesser_Points"], Score.Points),
        new(L["History_DateGuesser_x2Bonus"], Score.Bonus)
    ];

    private sealed record Data(string Name, decimal Value);

}
