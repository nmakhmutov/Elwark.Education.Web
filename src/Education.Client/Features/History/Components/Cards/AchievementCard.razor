@using Education.Client.Features.History.Clients.User.Model
<section class="@_class" id="@Achievement.Id">
    <header class="d-flex justify-space-between align-end mb-3">
        <h6 class="title">
            @Achievement.Title
        </h6>
        <MudTooltip Text="@Achievement.Description" Placement="Placement.Left" Color="Color.Secondary" Arrow>
            <MudIcon Class="mud-text-secondary" Icon="@Icons.Material.Outlined.Info" Size="Size.Small"/>
        </MudTooltip>
    </header>
    <footer class="d-flex align-center gap-3">
        <aside class="icon">
            <img class="image" src="@Achievement.IconUrl" alt="@_alt" loading="lazy"/>
        </aside>
        <div class="flex-1">
            @switch (Achievement)
            {
                case Achievement.LadderModel achievement:
                    <div class="d-flex align-center justify-space-between mb-1">
                        <MudText Typo="Typo.body1" Class="text-transform-up">
                            @L["Achievement_Level", achievement.Level]
                        </MudText>

                        <div class="d-flex flex-row align-center">
                            <MetricNumber Value="@achievement.Score" Typo="Typo.body1"/>
                            <span>/</span>
                            <MetricNumber Value="@achievement.Threshold" Typo="Typo.body1"/>
                        </div>
                    </div>
                    <MudProgressLinear Class="mb-1" Min="0" Max="100" Value="@achievement.Completeness" Color="Color.Primary"/>
                    <InternalMonies Monies="@achievement.Rewards" Horizontal/>
                    break;

                case Achievement.ProgressiveModel achievement:
                    <MudProgressLinear Class="mb-1" Min="0" Max="100" Value="@achievement.Completeness" Color="Color.Primary"/>
                    <InternalMonies Monies="@achievement.Rewards" Horizontal/>
                    break;

                case Achievement.CompletedModel achievement:
                    <MudText Class="mb-1" Typo="Typo.body2">
                        @L["Achievement_CompletedOn", DateTimeFormatter(achievement.UnlockedAt)]
                    </MudText>
                    <MudText Class="@(achievement.GlobalUnlockedPercent < 10 ? "rare-achievement" : null)" Typo="Typo.caption">
                        @L["Achievements_PercentOfUsersWhoHaveIt", achievement.GlobalUnlockedPercent]
                    </MudText>
                    break;
            }
        </div>
    </footer>
</section>

@code {
    private string? _alt;
    private string? _class;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required Achievement Achievement { get; set; }

    [Parameter]
    public bool Paper { get; set; }

    [Parameter]
    public bool Dense { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public Func<DateTime, string> DateTimeFormatter { get; set; } = date => date.ToLongDateString();

    protected override void OnInitialized()
    {
        _alt = $"{L["Achievements_Title"]}: {Achievement.Title}";

        _class = CssBuilder.Empty()
            .AddClass("mud-paper", Paper)
            .AddClass("completed", Paper && Achievement is Achievement.CompletedModel)
            .AddClass("pa-3 pa-sm-6", !Dense)
            .AddClass(Class)
            .Build();
    }

}