<article class="mud-paper card @(Horizontal ? "horizontal" : "vertical") @Class">
    <header class="card-header">
        <a href="@HistoryUrl.Content.Article(Article.Id)">
            <img src="@Article.Image.Small" alt="@Article.Image.Alt" loading="lazy"/>
        </a>
    </header>

    <section class="content flex-grow-1 gap-3 pa-3">
        <header>
            <div class="mb-1 @(OneLineTitle ? "one-line-text" : null)">
                <MudLink Href="@HistoryUrl.Content.Article(Article.Id)" Typo="Typo.h6" alt="@Article.Title"
                         title="@Article.Title">
                    @Article.Title
                </MudLink>
            </div>
            <EpochChip Epoch="Article.Epoch"/>
        </header>

        <div class="flex-grow-1">
            @if (!HideOverview)
            {
                <MudText Typo="Typo.body1">
                    @(ShortOverview && Article.Overview.Length > 60 ? $"{Article.Overview[..57].TrimEnd()}..." : Article.Overview)
                </MudText>
            }
        </div>

        <footer class="d-flex align-center gap-3">
            <MudTooltip Text="@L["ContentPopularity_Title"]" Arrow Inline>
                <EduPopularity Popularity="@Article.Popularity"/>
            </MudTooltip>

            <MudTooltip Text="@L["TimeToRead_Title"]" Arrow Inline>
                <EduTimeToRead Time="@Article.TimeToRead"/>
            </MudTooltip>

            <AuthorizeView>

                <MudSpacer/>

                @if (HasQuiz)
                {
                    <ArticleCompletionChip
                        Status="@(Activity?.Status ?? ArticleLearningStatus.NotStarted)"
                        Href="@HistoryUrl.User.MyArticle(Article.Id)"
                        Size="Size.Small"/>
                }

                <EduBookmarkIconButton
                    Id="@Article.Id"
                    IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                    OnBookmarkClick="@OnBookmarkClick"/>
            </AuthorizeView>
        </footer>
    </section>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required ArticleOverviewModel Article { get; set; }

    [Parameter, EditorRequired]
    public bool HasQuiz { get; set; }

    [Parameter, EditorRequired]
    public UserArticleActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<Unit>>> OnBookmarkClick { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

    [Parameter]
    public bool ShortOverview { get; set; }

    [Parameter]
    public bool OneLineTitle { get; set; }

}
