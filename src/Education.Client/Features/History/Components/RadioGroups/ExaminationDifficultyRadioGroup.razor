@using Education.Client.Features.History.Clients.Course.Model
<div class="@Class">
    <MudRadioGroup T="DifficultyType?" Class="radio-group" Value="@SelectedDifficulty" ValueChanged="@SelectedDifficultyChanged">
        @foreach (var examination in Examinations)
        {
            <MudRadio T="DifficultyType?" Class="radio" Value="@examination.Type" Color="Color.Primary" Disabled="@(!examination.IsAllowed)">
                <div class="d-flex justify-space-between gap-3">
                    <div>
                        <MudText Class="one-line-text mb-3" Typo="Typo.subtitle2">
                            @L.GetExaminationDifficultyTitle(examination.Type)
                        </MudText>
                        <MudText Typo="Typo.body2">
                            @examination.AccessInventory.Title
                        </MudText>
                        <MudText Class="mud-text-secondary" Typo="Typo.caption">
                            @L["Inventory_Required_Title"]
                        </MudText>
                    </div>

                    <div class="d-flex justify-center align-center mud-background rounded relative pa-6">
                        <img class="image" src="@examination.AccessInventory.ImageUrl" alt="@L.GetExaminationDifficultyTitle(examination.Type)" loading="lazy"/>
                    </div>
                </div>
            </MudRadio>
        }
    </MudRadioGroup>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public DifficultyType? SelectedDifficulty { get; set; }

    [Parameter]
    public EventCallback<DifficultyType?> SelectedDifficultyChanged { get; set; }

    [Parameter, EditorRequired]
    public required ExaminationInformationModel[] Examinations { get; set; }

    [Parameter]
    public string? Class { get; set; }

}
