@using Education.Client.Models.Test
@using Education.Client.Features.History.Clients.Quiz.Model
<div class="@Class">
    <MudRadioGroup T="DifficultyType?" Class="radio-group" SelectedOption="@SelectedDifficulty" SelectedOptionChanged="@SelectedDifficultyChanged">
        @foreach (var quiz in Quizzes)
        {
            <MudRadio T="DifficultyType?" Class="radio" Option="@quiz.Type" Color="Color.Primary" Disabled="@(!quiz.IsAllowed)">
                <div class="d-flex justify-space-between gap-3">
                    <div>
                        <p class="mud-typography mud-typography-subtitle2 one-line-text mb-3" title="@L[$"Quiz_{quiz.Type}_Title"]">
                            @L[$"Quiz_{quiz.Type}_Title"]
                        </p>
                        <div>
                            <MudText Typo="Typo.body2">@quiz.AccessInventory.Title</MudText>
                            <MudText Class="mud-text-secondary" Typo="Typo.caption">@L["Inventory_Required_Title"]</MudText>
                        </div>
                    </div>

                    <div class="d-flex justify-center align-center mud-background rounded relative pa-6">
                        <img class="image" src="@quiz.AccessInventory.ImageUrl" alt="@L[$"Quiz_{quiz.Type}_Title"]" loading="lazy"/>
                    </div>
                </div>
            </MudRadio>
        }
    </MudRadioGroup>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public DifficultyType? SelectedDifficulty { get; set; }

    [Parameter]
    public EventCallback<DifficultyType?> SelectedDifficultyChanged { get; set; }

    [Parameter, EditorRequired]
    public required QuizInformationModel[] Quizzes { get; set; }

    [Parameter]
    public string? Class { get; set; }

}