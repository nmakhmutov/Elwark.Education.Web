@using Education.Client.Features.History.Clients.Product.Model
<section class="mud-paper d-flex flex-column pa-3">
    <img class="rounded object-cover object-center fluid w-100 mb-3" src="@Bundle.ImageUrl" alt="@Bundle.Title" loading="lazy"/>

    <MudText Class="one-line-text mud-text-secondary" Typo="Typo.caption" Title="@Subtitle">
        @Subtitle
    </MudText>

    <MudText Class="one-line-text" Typo="Typo.body1" Title="@Bundle.Title">
        @Bundle.Title
    </MudText>

    <MudSpacer/>

    <MudBadge Class="w-100 mt-3" Icon="@Icons.Material.Outlined.Lock" Color="@Color.Error" Visible="@ShowLockBadge" Bordered Overlap>
        <PriceButton Price="@Bundle.Selling" OnClick="@(() => OnPurchaseClick.InvokeAsync(Bundle))"/>
    </MudBadge>
</section>

@code {

    private string Subtitle =>
        Bundle.Inventories.Length > 1
            ? L["Product_InventoryCount", Bundle.Inventories.Length]
            : L.GetInventoryCategoryTitles(Bundle.Inventories[0].Categories);

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required Product.BundleModel Bundle { get; set; }

    [Parameter, EditorRequired]
    public bool ShowLockBadge { get; set; }

    [Parameter]
    public EventCallback<Product.BundleModel> OnPurchaseClick { get; set; }

}
