@page "/history/article/{id}/quiz"
@layout HistoryLayout
@attribute [Authorize]

<EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1920">
    <PageBreadcrumbsHeader Items="@Breadcrumbs"/>
</EduContainer>

<ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync" Context="model">
    <PageTitle>
        @model.Article.Title
    </PageTitle>

    <EduContainer Class="pb-3 pb-sm-6" MaxWidth="EduWidth.W1920">
        <section class="grid">
            <section class="course">
                <MudText Typo="Typo.h6" Class="mb-3">
                    @L["Article_Title"]
                </MudText>

                <ArticleCard
                    Article="@model.Article"
                    Activity="@model.Activity"
                    OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"
                    HasQuiz="@(model.Quizzes.Length > 0)"
                    Horizontal/>
            </section>

            <section class="inventory">
                <MudText Typo="Typo.h6" Class="mb-3">
                    @L["Examination_Equipment_Title"]
                </MudText>
                <InventoryGrid Inventory="@model.Inventories" StoreHref="@HistoryUrl.Store.Index(CategoryType.Quiz)">
                    <ChildContent>
                        <InventoryInfoCard
                            Title="@context.Title"
                            Overview="@context.Overview"
                            Quantity="@context.Quantity"
                            IconUrl="@context.ImageUrl"/>
                    </ChildContent>
                    <EmptyContent>
                        <InventoryShortageCard
                            Class="w-max-600"
                            Href="@HistoryUrl.Store.Index(CategoryType.Quiz)"/>
                    </EmptyContent>
                </InventoryGrid>
            </section>

            <section class="exam">
                @if (model.Quizzes.Length > 0)
                {
                    <MudText Typo="Typo.h6" Class="mb-3">
                        @L["Quiz_Type_Title"]
                    </MudText>

                    <QuizDifficultyRadioGroup
                        Class="mb-6"
                        SelectedDifficulty="@_settings.Difficulty"
                        SelectedDifficultyChanged="@ChangeDifficultyAsync"
                        Quizzes="@model.Quizzes"/>

                    <div class="d-flex justify-center">
                        <TakeTheQuizButton
                            Disabled="@(model.Quizzes.All(x => !x.IsAllowed))"
                            Loading="@_isLoading"
                            OnClick="@CreateQuizAsync"/>
                    </div>
                }
                else
                {
                    <MudAlert Severity="Severity.Info">
                        @L["Quiz_NotAvailableForArticle", model.Article.Title]
                    </MudAlert>
                }
            </section>
        </section>
    </EduContainer>
</ApiViewer>