@using Education.Client.Features.History.Clients.Article.Model
@using Education.Client.Features.History.Clients.Learner
<EduContainer Class="py-3 py-sm-6" MaxWidth="EduWidth.W1440">
    <ArticleTitle Class="mud-typography-align-center">
        @General.Title
    </ArticleTitle>

    <EduBreadcrumbs Items="@Breadcrumbs" Class="justify-center pa-0 mb-3 mb-sm-6"/>

    <aside class="image-wrapper mx-auto mb-3">
        <img class="image object-cover object-center" src="@General.Image.Origin" alt="@General.Image.Alt"/>
    </aside>

    <MudText Class="d-block mx-auto w-max-960 mb-3 mb-sm-6" Typo="Typo.body1">
        @General.Description
    </MudText>

    <ContentGrid>
        <Header>
            <ContentToolbarCard Formatter="@Formatter"/>
            <ArticleInformation
                ArticleId="@General.Id"
                TimeToRead="@General.TimeToRead"
                Popularity="@General.Popularity"
                IsBookmarked="@Activity?.IsBookmarked"
                OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"/>
        </Header>

        <Content>
            <ContentCard Formatter="@Formatter" Content="@General.Content"/>
        </Content>

        <Sidebar>
            <AuthorizeView>
                <QuizCard
                    ArticleId="@General.Id"
                    Activity="@Activity"
                    Difficulties="@Difficulties"/>

                <FeedbackCard
                    ArticleId="@General.Id"
                    IsLiked="@Activity?.IsLiked"
                    Quality="@Activity?.Quality"
                    OnLikeClick="@LearnerClient.LikeArticleAsync"
                    OnDislikeClick="@LearnerClient.DislikeArticleAsync"
                    OnQualityClick="@((id, quality) => LearnerClient.ChangeArticleQualityAsync(id, quality))"/>
            </AuthorizeView>
        </Sidebar>
    </ContentGrid>

    <RelatedArticles
        Class="mt-sm-6"
        ArticleId="@General.Id"
        Title="@L["Articles_Related_Title"]"
        OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"/>
</EduContainer>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Inject]
    private ContentFormatter Formatter { get; init; } = default!;

    [Inject]
    private IHistoryLearnerClient LearnerClient { get; init; } = default!;

    private List<BreadcrumbItem> Breadcrumbs =>
    [
        new(L["History_Title"], HistoryUrl.Root),
        new(L.GetEpochTitle(General.Epoch), HistoryUrl.Content.Articles(General.Epoch))
    ];

    [Parameter, EditorRequired]
    public required ArticleDetail.GeneralModel General { get; set; }

    [Parameter, EditorRequired]
    public required UserArticleActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public required DifficultyType[] Difficulties { get; set; }

    protected override async Task OnInitializedAsync() =>
        await Formatter.InitializeAsync();

}
