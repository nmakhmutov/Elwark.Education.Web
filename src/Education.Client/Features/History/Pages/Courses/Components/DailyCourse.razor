@using Education.Client.Features.History.Clients.Course
@using Education.Client.Features.History.Clients.Course.Request
<ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync">
    <Loading>
        <div class="grid @Class">
            <div class="image h-100">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Style="width: 100%; height: 100%"/>
            </div>
            <article class="text">
                <MudSkeleton Class="mb-12" SkeletonType="SkeletonType.Text"/>
                <MudSkeleton Class="mb-12" SkeletonType="SkeletonType.Text"/>
                <MudSkeleton Class="mb-12" SkeletonType="SkeletonType.Text"/>
                <MudSkeleton Class="mb-12" SkeletonType="SkeletonType.Text"/>
                <MudSkeleton Class="mb-12" SkeletonType="SkeletonType.Rectangle"/>
            </article>
        </div>
    </Loading>
    <ChildContent Context="item">
        <div class="grid @Class">
            <div class="image">
                <img src="@item.Course.ThumbnailUrl" alt="@item.Course.Title" loading="lazy"/>
            </div>
            <article class="text">
                <MudText Class="mb-12" Typo="Typo.subtitle1" Color="Color.Default">
                    <em>
                        From today's featured course
                    </em>
                </MudText>

                <ContentRating Class="d-flex align-center my-3" Rating="@item.Course.Rating" ShowTooltip/>

                <MudLink Href="@HistoryUrl.Content.Course(item.Course.Id)" Typo="Typo.h4" Color="Color.Inherit">
                    @item.Course.Title
                </MudLink>

                <MudText Class="my-6" Typo="Typo.subtitle1">
                    @item.Course.Overview
                </MudText>

                <MudButton
                    Link="@HistoryUrl.Content.Course(item.Course.Id)"
                    Variant="Variant.Filled"
                    Color="Color.Primary"
                    DisableElevation>
                    @L["Button_Details"]
                </MudButton>
            </article>
        </div>
    </ChildContent>
</ApiViewer>

@code {

    private ApiResult<UserCourseOverviewModel> _result = ApiResult<UserCourseOverviewModel>.Loading();

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Inject]
    private IHistoryCourseClient CourseClient { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override async Task OnInitializedAsync() =>
        _result = (await CourseClient.GetAsync(new GetCourseRequest(GetCourseRequest.SortType.Trending, 10, 1)))
            .Map(x => x.Items.First());

}