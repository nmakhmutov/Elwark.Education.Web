@using Education.Client.Features.History.Clients.Examination.Model
<div class="statistics">
    <PercentChartCard
        Title="@L["TimeSpent_Title"]"
        Subtitle="@GetSubtitle(ConclusionModel.TimeSpent)"
        Percentage="@Math.Round(ConclusionModel.TimeSpent.Ratio * 100)"/>

    <PercentChartCard
        Title="@L["Score_Title"]"
        Subtitle="@GetSubtitle(ConclusionModel.TotalScore)"
        Percentage="@Math.Round(ConclusionModel.TotalScore.Ratio * 100)"/>

    <PercentChartCard
        Title="@L["Score_Questions_Title"]"
        Subtitle="@GetSubtitle(ConclusionModel.QuestionScore)"
        Percentage="@Math.Round(ConclusionModel.QuestionScore.Ratio * 100)"/>

    <PercentChartCard
        Title="@L["Score_NoMistakesBonus_Title"]"
        Subtitle="@GetSubtitle(ConclusionModel.NoMistakeScore)"
        Percentage="@Math.Round(ConclusionModel.NoMistakeScore.Ratio * 100)"/>

    <PercentChartCard
        Title="@L["Score_SpeedBonus_Title"]"
        Subtitle="@GetSubtitle(ConclusionModel.SpeedScore)"
        Percentage="@Math.Round(ConclusionModel.SpeedScore.Ratio * 100)"/>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public ExaminationConclusionModel ConclusionModel { get; set; } = default!;

    private string GetSubtitle(PerformanceModel<TimeSpan> performance) =>
        $"{performance.UserPoints.Humanize(L)} / {performance.TotalPoints.Humanize(L)}";

    private string GetSubtitle(PerformanceModel<uint> performance) =>
        $"{performance.UserPoints.ToMetric()} / {performance.TotalPoints.ToMetric()}";

}