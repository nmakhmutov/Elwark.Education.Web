<article class="card @Class">
    <span class="image-container">
        <span class="image-wrapper">
            <img src="@Article.Image.Small" alt="@Article.Image.Alt"/>
        </span>
        <a href="@HistoryUrl.Content.Article(Article.Id)" aria-label="@Article.Title"></a>
    </span>

    <div class="content">
        <EpochChip Epoch="@Article.Epoch"/>

        <MudLink Class="@(Article.Title.Length > 50 ? "w-100 one-line-text" : null)"
                 Color="Color.Inherit"
                 Href="@HistoryUrl.Content.Article(Article.Id)"
                 Typo="Typo.h6">
            <b>@Article.Title</b>
        </MudLink>

        @if (!HideOverview)
        {
            <p class="white-text">
                @Article.Overview
            </p>
        }

        <footer class="d-flex align-center gap-3 w-100">
            <EduRating Compact
                       Stars="@Article.Rating.Stars"
                       Votes="@Article.Rating.Votes"/>

            <EduTimeToRead Time="@Article.TimeToRead"/>

            <AuthorizeView>
                <MudSpacer/>

                @if (HasQuiz)
                {
                <ArticleCompletionChip Href="@HistoryUrl.User.MyArticle(Article.Id)"
                                       Size="Size.Small"
                                       Status="@(Activity?.Status ?? ArticleLearningStatus.NotStarted)"/>
                }

                <EduBookmarkButton Color="Color.Inherit"
                                   Id="@Article.Id"
                                   IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                                   OnBookmarkClick="@OnBookmarkClick"/>
            </AuthorizeView>
        </footer>
    </div>
</article>

@code {

    [Parameter, EditorRequired]
    public required ArticleOverviewModel Article { get; set; }

    [Parameter, EditorRequired]
    public required UserArticleActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public bool HasQuiz { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

}
