<article class="card @Class">
    <span class="image-container">
        <span class="image-wrapper">
            <img src="@Article.Image.Small" alt="@Article.Image.Alt"/>
        </span>
        <a href="@HistoryUrl.Content.Article(Article.Id)" aria-label="@Article.Title"></a>
    </span>

    <div class="content">
        <EpochChip Epoch="@Article.Epoch"/>

        <MudLink
            Class="@(Article.Title.Length > 50 ? "w-100 one-line-text" : null)"
            Color="Color.Inherit"
            Href="@HistoryUrl.Content.Article(Article.Id)"
            Typo="Typo.h6">
            <b>@Article.Title</b>
        </MudLink>

        @if (!HideOverview)
        {
            <p class="white-text">
                @Article.Overview
            </p>
        }

        <footer class="d-flex align-center gap-3 w-100">
            <MudTooltip Text="@L["ContentPopularity_Title"]" Arrow Inline>
                <EduPopularity Popularity="@Article.Popularity"/>
            </MudTooltip>

            <MudTooltip Text="@L["TimeToRead_Title"]" Arrow Inline>
                <EduTimeToRead Time="@Article.TimeToRead"/>
            </MudTooltip>

            <AuthorizeView>
                <MudSpacer/>

                @if (HasQuiz)
                {
                    <ArticleCompletionChip
                        Href="@HistoryUrl.User.MyArticle(Article.Id)"
                        Size="Size.Small"
                        Status="@(Activity?.Status ?? ArticleLearningStatus.NotStarted)"/>
                }

                <EduBookmarkIconButton
                    Color="Color.Inherit"
                    Id="@Article.Id"
                    IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                    OnBookmarkClick="@OnBookmarkClick"/>
            </AuthorizeView>
        </footer>
    </div>
</article>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required ArticleOverviewModel Article { get; set; }

    [Parameter, EditorRequired]
    public required UserArticleActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public bool HasQuiz { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool HideOverview { get; set; }

}
