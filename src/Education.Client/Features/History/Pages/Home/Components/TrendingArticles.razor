@using Education.Client.Features.History.Clients.Article
@using Education.Client.Features.History.Clients.Article.Request
@using Education.Client.Features.History.Clients.Learner
<EduApiViewer Result="@_response" OnReloadClick="@OnInitializedAsync">
    <Loading>
        <section class="grid @Class">
            @for (var i = 0; i < Count; i++)
            {
                <SkeletonCard Class="article"/>
            }
        </section>
    </Loading>

    <ChildContent>
        <section class="grid @Class">
            @foreach (var overview in context)
            {
                <TrendingArticleCard Class="article"
                                     Article="@overview.Article"
                                     Activity="@overview.Activity"
                                     HasQuiz="@overview.HasQuiz"
                                     OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"/>
            }
        </section>
    </ChildContent>
</EduApiViewer>

@code {
    private const int Count = 5;
    private ApiResult<UserArticleOverviewModel[]> _response = ApiResult<UserArticleOverviewModel[]>.Loading();

    [Inject]
    private IHistoryArticleClient ArticleClient { get; init; } = default!;

    [Inject]
    private IHistoryLearnerClient LearnerClient { get; init; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var request = new GetArticlesRequest(EpochType.None, GetArticlesRequest.SortType.Trending, 0, Count);
        var response = await ArticleClient.GetAsync(request);

        _response = response
            .Map(x => x.Items);
    }

}
