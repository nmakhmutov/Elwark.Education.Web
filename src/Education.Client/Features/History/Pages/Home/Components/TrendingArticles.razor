@using Education.Client.Features.History.Clients.Article
@using Education.Client.Features.History.Clients.Article.Request
@using Education.Client.Features.History.Clients.Learner

<ApiViewer Result="@_result" OnReloadClick="@OnInitializedAsync">
    <Loading>
        <section class="grid @Class">
            @for (var i = 0; i < Count; i++)
            {
                <SkeletonCard Class="article"/>
            }
        </section>
    </Loading>

    <ChildContent Context="models">
        <section class="grid @Class">
            @foreach (var model in models)
            {
                <TrendingArticleCard
                    Class="article"
                    Model="@model"
                    OnBookmarkClick="@LearnerClient.ToggleArticleBookmarkAsync"/>
            }
        </section>
    </ChildContent>
</ApiViewer>

@code {
    private const int Count = 5;
    private ApiResult<UserArticleOverviewModel[]> _result = ApiResult<UserArticleOverviewModel[]>.Loading();

    [Inject]
    private IHistoryArticleClient ArticleClient { get; init; } = default!;

    [Inject]
    private IHistoryLearnerClient LearnerClient { get; init; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    protected override async Task OnInitializedAsync() =>
        _result = (await ArticleClient.GetAsync(new GetArticlesRequest(EpochType.None, GetArticlesRequest.SortType.Trending, 0, Count)))
            .Map(x => x.Items);

}