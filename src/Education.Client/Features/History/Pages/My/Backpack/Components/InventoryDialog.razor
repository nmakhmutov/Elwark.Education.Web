@using Education.Client.Features.History.Clients.Store.Model
@using Education.Client.Features.History.Clients.Store
<MudDialog
    Class="pa-3 pa-sm-6"
    ClassContent="pa-0"
    ClassActions="pa-0"
    DefaultFocus="DefaultFocus.Element"
    DisableSidePadding>
    <DialogContent>
        <ApiViewer Result="@_result" Context="product">
            <section class="d-flex gap-3 gap-sm-6 mb-3 mb-sm-6">
                <div class="mud-background d-flex justify-center align-center rounded-lg relative pa-9">
                    <img class="image" src="@product.ImageUrl" alt="@product.Title" loading="lazy"/>
                </div>

                <header class="d-flex justify-space-between flex-grow-1 align-start">
                    <div class="d-flex flex-column h-100">
                        <MudText Typo="Typo.h5">
                            @product.Title
                        </MudText>
                        <MudText Class="flex-grow-1" Typo="Typo.body1">
                            @product.Overview
                        </MudText>

                        <MudText Typo="Typo.body2">
                            @L["Inventory_InTheBackpack", ProductQuantity]
                        </MudText>
                    </div>

                    <MudIconButton Icon="@Icons.Material.Outlined.Close" OnClick="@OnCloseClick"/>
                </header>
            </section>

            <MudTabs Elevation="0" Border DisableRipple>
                <MudTabPanel Text="@L["Exchange_Sell_Title"]">
                    Sell
                </MudTabPanel>
                <MudTabPanel Text="@L["Exchange_Buy_Title"]">
                    Buy
                </MudTabPanel>
            </MudTabs>
        </ApiViewer>
    </DialogContent>
</MudDialog>

@code {
    private ApiResult<ProductOverviewModel> _result = ApiResult<ProductOverviewModel>.Loading();

    [Inject]
    private IHistoryStoreClient StoreClient { get; init; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter, EditorRequired]
    public required string ProductId { get; set; }

    [Parameter, EditorRequired]
    public required uint ProductQuantity { get; set; }

    protected override async Task OnInitializedAsync() =>
        _result = await StoreClient.GetProductAsync(ProductId);

    private void OnCloseClick() =>
        MudDialog.Close(DialogResult.Cancel());

}
