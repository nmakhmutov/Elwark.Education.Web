@using Education.Client.Features.History.Clients.Quiz.Model
@using Education.Client.Features.History.Clients.Learner.Model.Quiz
<ul class="@Class">
    <li class="d-flex flex-row justify-space-between border-b mud-border-lines-default mb-1">
        <MudText Typo="Typo.subtitle1">
            @L["TimeSpent_Title"]
        </MudText>
        <MudText Typo="Typo.subtitle1">
            @TimeSpent.Humanize(L)
        </MudText>
    </li>
    @Row(L["Score_Total_Title"], Score.Total)
    <li class="d-flex flex-row">
        <ul class="w-100 ml-6">
            @Row(L["Score_Questions_Title"], Score.Questions)
            @Row(L["Score_SpeedBonus_Title"], Score.Speed)
            @Row(L["Score_NoMistakesBonus_Title"], Score.NoMistakes)
        </ul>
    </li>
    @Row(L["Questions_Total"], AnswerRatio.Questions)
    <li class="d-flex flex-row">
        <ul class="w-100 ml-6">
            @Row(L["Questions_Answered"], AnswerRatio.Answered)
            @Row(L["Questions_NotAnswered"], AnswerRatio.NotAnswered)
            @Row(L["Questions_Correct"], AnswerRatio.Correct)
            @Row(L["Questions_Incorrect"], AnswerRatio.Incorrect, false)
        </ul>
    </li>
</ul>

@code {

    private static RenderFragment Row<T>(string title, T value, bool border = true) =>
        @<li class="d-flex flex-row justify-space-between @(border ? "border-b mud-border-lines-default mb-1" : null)">
            <MudText Typo="Typo.subtitle1">
                @title
            </MudText>
            <MetricNumber Value="@value" Typo="Typo.subtitle1"/>
    </li>;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public required ScoreModel Score { get; set; }

    [Parameter, EditorRequired]
    public required AnswerRatioModel AnswerRatio { get; set; }

    [Parameter, EditorRequired]
    public TimeSpan TimeSpent { get; set; }

}
