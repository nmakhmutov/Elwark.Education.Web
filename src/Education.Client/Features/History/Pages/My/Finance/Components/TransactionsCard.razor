@using Education.Client.Features.History.Clients.User.Model
<section class="mud-paper pa-3 pa-sm-6 @Class">
    <MudText Class="mb-3" Typo="Typo.h5">
        @L["Transactions_Recent_Title"]
    </MudText>
    <MudTable
        Items="@Transactions.Take(HasMore && !_showMore ? Quantity : Transactions.Length)"
        Elevation="0"
        Breakpoint="Breakpoint.None"
        Dense>
        <RowTemplate>
            <MudTd>
                @if (context is TransactionModel.Income)
                {
                    <MudIcon Icon="@Icons.Material.Outlined.TrendingUp" Color="Color.Success"/>
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Outlined.TrendingDown" Color="@Color.Error"/>
                }
            </MudTd>
            <MudTd>
                <MudText Typo="Typo.subtitle1">
                    @context.Title
                </MudText>
                <MudText Class="mud-text-secondary" Typo="Typo.body2">
                    @Customer.Humanize(context.CreatedAt)
                </MudText>
            </MudTd>
            <MudTd>
                <EduGameMoniesDisplay
                    Horizontal
                    IconSize="Size.Small"
                    Monies="@context.Monies"
                    Typo="Typo.body1"/>
            </MudTd>
        </RowTemplate>
    </MudTable>
    @if (HasMore && !_showMore)
    {
        <div class="d-flex justify-center">
            <MudButton
                Color="Color.Primary"
                DropShadow="false"
                Ripple="false"
                OnClick="@(() => _showMore = true)"
                Variant="Variant.Filled">
                Show more
            </MudButton>
        </div>
    }
</section>

@code {
    private const int Quantity = 15;

    private bool _showMore;

    private bool HasMore =>
        Transactions.Length > Quantity;

    [Inject]
    public IStringLocalizer<App> L { get; init; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

    [Parameter, EditorRequired]
    public TransactionModel[] Transactions { get; set; } = [];

    [Parameter]
    public string? Class { get; set; }

}
