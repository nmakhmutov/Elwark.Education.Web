@using Education.Client.Features.History.Clients.Leaderboard.Model
<div class="d-flex flex-column flex-md-row gap-3 mb-sm-6">
    <section class="flex-sm-grow-1">
        <div class="d-flex align-center">
            <div class="d-flex align-center justify-center mud-primary white-text rounded mr-3 mr-sm-6">
                <MudIcon Icon="@Icons.Material.Outlined.StarOutline" Size="Size.Large" Class="ma-6"/>
            </div>
            <div>
                <MudText Typo="Typo.subtitle1">
                    @L["Leaderboard_Title"]
                </MudText>
                <MudText Typo="Typo.h3">
                    @L["Leaderboard_MonthlyTop_Title"]
                </MudText>
            </div>
        </div>

        <MudText Class="w-max-480 my-3 my-sm-6" Typo="Typo.subtitle1">
            @L["Leaderboard_Monthly_Description"]
        </MudText>

        <div class="w-max-180 my-3">
            <MudSelect T="DateOnly" Label="@L["Month_Title"]" Value="@Month" ValueChanged="@MonthChanged">
                @foreach (var month in Months)
                {
                    <MudSelectItem Value="@month">
                        @Customer.Humanize(month, DateStyle.AbbreviatedMonthAndCustomerYear)
                    </MudSelectItem>
                }
            </MudSelect>
        </div>
    </section>

    <section class="w-max-480">
        @if (IsActive)
        {
            <CardCountdown Class="justify-space-between mb-3 mb-sm-6" Date="@_endAt"/>
        }
        else
        {
            <MonthIsOverCard Class="mb-3 mb-sm-6"/>
        }

        @if (User is null)
        {
            <AuthorizeView>
                <Authorized>
                    <div class="mud-paper pa-3">
                        @if (IsActive)
                        {
                            <MudText Typo="Typo.subtitle1">
                                You are not contestant yet
                            </MudText>
                            <MudText Typo="Typo.caption">
                                Just earn experience by passing quizzes, guessers and other type of tasks to join
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.subtitle1">
                                You were not on the leaderboard for the @Month.ToString("MMMM")
                            </MudText>
                        }
                    </div>
                </Authorized>
            </AuthorizeView>
        }
        else
        {
            <RegularRanking DisableHover>
                <Image>
                    <MudAvatar Class="rounded" Image="@User.Image" Alt="@User.FullName" Size="Size.Large" Square/>
                </Image>
                <Name>
                    <div>
                        <MudText Typo="Typo.subtitle1">@User.FullName</MudText>
                        <div class="d-flex align-center gap-1">
                            <MudIcon Icon="@Icons.Material.Outlined.EmojiEvents" Size="Size.Small"/>
                            <MudText Typo="Typo.body1">@User.Rank</MudText>
                        </div>
                    </div>
                </Name>
                <Points>
                    <div class="d-flex align-center gap-3">
                        <MudIcon Icon="@EduIcons.Experience"/>
                        <MetricNumber Value="@User.Experience" Typo="Typo.h6"/>
                    </div>
                </Points>
            </RegularRanking>
        }
    </section>
</div>

@code {
    private DateTime _endAt;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; init; } = default!;

    [Parameter, EditorRequired]
    public required DateOnly[] Months { get; set; }

    [Parameter, EditorRequired]
    public required DateOnly Month { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<DateOnly> MonthChanged { get; set; }

    [Parameter, EditorRequired]
    public bool IsActive { get; set; }

    [Parameter, EditorRequired]
    public MonthlyContestantModel? User { get; set; }

    protected override void OnParametersSet() =>
        _endAt = Month.AddMonths(1)
            .AddDays(-1)
            .ToDateTime(TimeOnly.MaxValue, DateTimeKind.Utc);

}