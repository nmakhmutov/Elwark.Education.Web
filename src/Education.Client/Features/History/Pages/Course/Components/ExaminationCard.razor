<section class="@Class">
    <MudText Class="mb-3" Typo="Typo.h5">
        @L["User_MyExaminations_Title"]
    </MudText>

    @if (Difficulties.Contains(DifficultyType.Easy))
    {
        <div class="d-flex justify-space-between align-center border-b mud-border-lines-default pb-1 mb-3">
            <MudText Typo="Typo.body1">@L["NumberOfExaminations_PassedEasy_Title"]</MudText>
            @if (Activity.IsEasyExaminationCompleted == true)
            {
                <MudIcon Icon="@Icons.Material.Outlined.CheckCircle" Color="Color.Success" Size="Size.Small"/>
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Outlined.Circle" Size="Size.Small"/>
            }
        </div>
    }

    @if (Difficulties.Contains(DifficultyType.Hard))
    {
        <div class="d-flex justify-space-between align-center border-b mud-border-lines-default pb-1 mb-3">
            <MudText Typo="Typo.body1">@L["NumberOfExaminations_PassedHard_Title"]</MudText>
            @if (Activity.IsHardExaminationCompleted == true)
            {
                <MudIcon Icon="@Icons.Material.Outlined.CheckCircle" Color="Color.Success" Size="Size.Small"/>
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Outlined.Circle" Size="Size.Small"/>
            }
        </div>
    }

    <div class="d-flex justify-space-between align-center pb-1 mb-3">
        <MudText Typo="Typo.body1">
            @L["LearningStatus_Title"]
        </MudText>
        <CourseCompletionChip
            Status="@Activity.Status"
            Href="@HistoryUrl.User.MyCourse(CourseId)"
            Size="Size.Small"/>
    </div>

    <MudText Class="mb-3" Typo="Typo.body2">
        @L.GetStatusDescription(Activity.Status)
    </MudText>

    <div class="d-flex justify-center">
        <TryPracticeQuestionsButton
            Link="@HistoryUrl.Content.ExaminationBuilder(CourseId)"
            Disabled="@(Activity.Status <= CourseLearningStatus.InProgress)"/>
    </div>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter, EditorRequired]
    public required string CourseId { get; set; }

    [Parameter, EditorRequired]
    public required UserCourseActivityModel Activity { get; set; }

    [Parameter, EditorRequired]
    public required DifficultyType[] Difficulties { get; set; }

    [Parameter]
    public string? Class { get; set; }

}
