<section class="image-background rounded @Class" style="background-image: url('@Image.Url')">
    <article class="cover rounded">
        <header class="header">
            <EduBreadcrumbs Class="pa-0" Items="@Breadcrumbs" Color="Color.Inherit" SeparatorClass="white-text"/>

            <MudText Typo="Typo.h1" Color="Color.Inherit">
                @Title
            </MudText>

            <MudSpacer/>

            <section>
                @if (HasExaminations && Activity?.Status == CourseLearningStatus.NotStarted)
                {
                    <EduLoadingButton Color="Color.Primary"
                                      DisableElevation
                                      DisableRipple
                                      IsLoading="@_isStarting"
                                      LoadingText="@L["Loading_Title"]"
                                      OnClick="@OnStartCourseClick"
                                      Size="Size.Medium"
                                      Text="@L["Course_Start_Button"]"
                                      Variant="Variant.Filled"/>
                }

                <div class="d-flex flex-wrap align-center align-sm-end gap-3 gap-sm-6">
                    <div class="d-flex align-center">
                        <MudIcon Class="mr-1" Icon="@EduIcons.Articles"/>

                        <MudText Typo="Typo.subtitle1">
                            @ArticleCount @L["Articles_Title"]
                        </MudText>
                    </div>

                    <AuthorizeView>
                        <Authorized>
                            <MudSpacer/>

                            <EduLikeButtons Color="Color.Inherit"
                                            Id="@CourseId"
                                            IsLiked="@Activity?.IsLiked"
                                            OnDislikeClick="@OnDislikeClick"
                                            OnLikeClick="@OnLikeClick"/>

                            <EduBookmarkButton Color="Color.Inherit" Id="@CourseId"
                                               IsBookmarked="@(Activity?.IsBookmarked ?? false)"
                                               OnBookmarkClick="@OnBookmarkClick"/>
                        </Authorized>
                    </AuthorizeView>
                </div>

                @if (Activity?.Status > CourseLearningStatus.NotStarted)
                {
                    <CourseProgress Progress="@(Activity?.Completeness ?? 0)" Typo="Typo.subtitle1"/>
                }
            </section>
        </header>
    </article>
</section>

@code {
    private bool _isStarting;

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    private List<BreadcrumbItem> Breadcrumbs =>
    [
        new BreadcrumbItem(L["History_Title"], HistoryUrl.Root),
        new BreadcrumbItem(L["Courses_Title"], HistoryUrl.Content.Courses())
    ];

    [Parameter, EditorRequired]
    public required string CourseId { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public required string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public required ImageModel Image { get; set; }

    [Parameter, EditorRequired]
    public int ArticleCount { get; set; }

    [Parameter, EditorRequired]
    public bool HasExaminations { get; set; }

    [Parameter, EditorRequired]
    public UserCourseActivityModel? Activity { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<Unit>>> OnLikeClick { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<Unit>>> OnDislikeClick { get; set; }

    [Parameter, EditorRequired]
    public required Func<string, Task<ApiResult<bool>>> OnBookmarkClick { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<string> OnStartClick { get; set; }

    [Parameter]
    public string? Class { get; set; }

    private async Task OnStartCourseClick()
    {
        _isStarting = true;
        await OnStartClick.InvokeAsync(CourseId);

        _isStarting = false;
    }

}
