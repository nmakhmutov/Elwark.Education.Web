<div class="@Class">
    <MudChart ChartType="ChartType.Bar" Width="100%" Height="@Size" ChartSeries="@Series" ChartOptions="@Options"/>
    <ChartList Items="@Items"/>
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter, EditorRequired]
    public AnswerRatio Value { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string Size { get; set; } = "250px";

    private static readonly ChartOptions Options = new()
    {
        DisableLegend = true,
        InterpolationOption = InterpolationOption.NaturalSpline,
        XAxisLines = false,
        YAxisLines = false,
        YAxisTicks = 20,
        ChartPalette = new[]
        {
            Colors.Blue.Default,
            Colors.DeepPurple.Default,
            Colors.Green.Accent4,
            Colors.Red.Default
        }
    };

    private List<ChartSeries> Series => new()
    {
        new ChartSeries { Data = new[] { Value.Answered / (double)Value.Questions * 100 } },
        new ChartSeries { Data = new[] { Value.NotAnswered / (double)Value.Questions * 100 } },
        new ChartSeries { Data = new[] { Value.Correct / (double)Value.Questions * 100 } },
        new ChartSeries { Data = new[] { Value.Incorrect / (double)Value.Questions * 100 } }
    };

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["Questions:Answered"], Value.Answered, Colors.Blue.Default),
        new ChartList.Item(L["Questions:NotAnswered"], Value.NotAnswered, Colors.DeepPurple.Default),
        new ChartList.Item(L["Questions:Correct"], Value.Correct, Colors.Green.Accent4),
        new ChartList.Item(L["Questions:Incorrect"], Value.Incorrect, Colors.Red.Default),
        new ChartList.Item(L["Questions:Total"], Value.Questions, null)
    };

}
