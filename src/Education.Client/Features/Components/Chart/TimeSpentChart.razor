@using ApexCharts

<div class="@Class">
    @if (Value.Total > TimeSpan.Zero)
    {
        <ApexChart TItem="Data" Options="@Options">
            <ApexRangeSeries
                TItem="Data"
                Items="@Series"
                XValue="@(x => x.Name)"
                YValue="@(x => x.Value)"/>
        </ApexChart>
    }
    
    <ChartList Items="@Items"/>
</div>

@code {

    private ApexChartOptions<Data> Options => new()
    {
        PlotOptions = new PlotOptions
        {
            Bar = new PlotOptionsBar
            {
                Horizontal = true
            }
        },
        Tooltip = new Tooltip
        {
            Enabled = false
        },
        Chart = new Chart
        {
            Toolbar = new Toolbar
            {
                Show = false
            }
        },
        Colors = new List<string>
        {
            Colors.Green.Accent4,
            Colors.Blue.Default,
            Colors.DeepPurple.Default
        }
    };

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public TimeSpent Value { get; set; } = default!;

    private ChartList.Item[] Items => new[]
    {
        new ChartList.Item(L["TimeSpent:Min"], Value.Min, Colors.Green.Accent4),
        new ChartList.Item(L["TimeSpent:Average"], Value.Average, Colors.DeepPurple.Default),
        new ChartList.Item(L["TimeSpent:Max"], Value.Max, Colors.Blue.Default),
        new ChartList.Item(L["TimeSpent:Total"], Value.Total, null)
    };

    private Data[] Series => new[]
    {
        new Data(L["TimeSpent:Min"], 0),
        new Data(L["TimeSpent:Min"], (decimal)Value.Min.TotalMinutes),
        new Data(L["TimeSpent:Average"], 0),
        new Data(L["TimeSpent:Average"], (decimal)Value.Average.TotalMinutes),
        new Data(L["TimeSpent:Max"], 0),
        new Data(L["TimeSpent:Max"], (decimal)Value.Max.TotalMinutes)
    };

    private record Data(string Name, decimal Value);

}
