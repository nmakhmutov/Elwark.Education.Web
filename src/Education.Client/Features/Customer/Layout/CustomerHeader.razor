@using Education.Client.Features.History
<header class="header pa-3 pa-sm-6">
    <MudLink Href="@EduUrl.Root" Typo="Typo.h5" Color="Color.Inherit" Underline="Underline.None" Class="d-none d-sm-block">
        Education <sup class="mud-typography mud-typography-caption">beta</sup>
    </MudLink>

    <MudSpacer/>

    <AppbarNotifications/>

    <ThemeSwitchButton/>
</header>

<div class="background"></div>

<div class="panel d-flex flex-column flex-sm-row align-center mud-paper gap-3 pa-3 pa-sm-6 mx-3 mx-sm-6 mt-n12">
    <div class="d-flex align-center gap-3 gap-sm-6">
        <div class="profile-image">
            <img alt="profile-image" src="@Customer.Image">
        </div>
        <div>
            <MudLink Href="@CustomerUrl.Root" Typo="Typo.h5">
                @Customer.Name
            </MudLink>
            <MudText Typo="Typo.body1">
                @L["Account_MemberSince", Customer.Humanize(Customer.CreatedAt)]
            </MudText>
        </div>
    </div>

    <MudSpacer/>

    <section class="d-flex flex-column">
        <ul class="mb-3">
            @foreach (var item in Items)
            {
                <li class="mb-1">
                    <b>@item.Title:</b>&nbsp;<span class="mud-text-secondary">@item.Value</span>
                </li>
            }
        </ul>
        
        <MudButton
            Class="text-transform-none"
            Color="Color.Primary"
            Variant="Variant.Filled"
            EndIcon="@Icons.Material.Outlined.OpenInNew"
            IconSize="Size.Small"
            Href="@Configuration["Urls:Account"]"
            Target="_blank"
            DisableRipple
            DisableElevation>
            @L["ManageYourElwarkAccount_Title"]
        </MudButton>
    </section>
</div>

@code{

    private (string Title, string Value)[] Items =>
    [
        (L["Account_TimeZone"], Customer.TimeZone.Id),
        (L["Account_Language"], L[$"Language_{Customer.Language}"])
    ];

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Inject]
    private IConfiguration Configuration { get; init; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; set; } = default!;

}