@page "/account/my/notifications"
@layout CustomerLayout
@attribute [Authorize]

<PageTitle>
    @L["Notifications_Title"]
</PageTitle>

<header class="d-flex justify-space-between align-center mb-3 mb-sm-6">
    <MudText Typo="Typo.h5">
        @L["Notifications_Title"]
    </MudText>
    <MudButton
        Class="text-transform-none"
        Variant="Variant.Outlined"
        Color="Color.Primary"
        Size="Size.Small"
        StartIcon="@Icons.Material.Outlined.DoneAll"
        Disabled="@(!NotificationService.HasNotifications)"
        OnClick="@MarkAllAsReadAsync"
        DisableRipple
        DisableElevation>
        @L["Notifications_MarkAsRead"]
    </MudButton>
</header>

<ApiViewer Result="_result" OnReloadClick="@OnInitializedAsync">
    <Virtualize Items="@_notifications">
        <EmptyContent>
            <NoContent Title="@L["Notifications_NothingNew"]"/>
        </EmptyContent>
        <ChildContent Context="notification">
            <section class="mud-paper d-flex align-center gap-3 pa-3 mb-3">
                <NotificationBlock Class="flex-grow-1" Notification="@notification"/>

                <MudIconButton
                    Icon="@Icons.Material.Outlined.MarkEmailRead"
                    OnClick="@(() => MarkAsReadAsync(notification.Id))"/>
            </section>
        </ChildContent>
    </Virtualize>

    @if (!string.IsNullOrEmpty(_request.Token))
    {
        <footer class="d-flex justify-center">
            <LoadingButton
                DisableElevation
                Variant="Variant.Filled"
                Color="Color.Primary"
                Text="@L["Button_SeeMore"]"
                IsLoading="@_isMoreLoading"
                OnClick="@LoadMoreAsync"/>
        </footer>
    }
</ApiViewer>