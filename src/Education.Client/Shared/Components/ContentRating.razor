@using Education.Client.Models.Content
@using Education.Client.Extensions
@* <div style="width: 120px;"> *@
@*     <div class="d-flex justify-space-between mb-1"> *@
@*         <div class="d-flex align-center"> *@
@*             <p style="color: var(--mud-palette-primary); font-size: 11px" class="mr-1">80%</p> *@
@*             <MudIcon Icon="@Icons.Material.Outlined.ThumbUp" Style="width: 12px; height: 12px; color: var(--mud-palette-primary)"></MudIcon> *@
@*         </div> *@
@*         <div class="d-flex align-center"> *@
@*             <p style="color: var(--mud-palette-secondary); font-size: 11px" class="mr-1">20%</p> *@
@*             <MudIcon Icon="@Icons.Material.Outlined.ThumbDown" Style="width: 12px; height: 12px; color: var(--mud-palette-secondary)"></MudIcon> *@
@*         </div> *@
@*     </div> *@
@*     <div class="d-flex"> *@
@*         <div style="width: 80%; height: 2px; background-color: var(--mud-palette-primary); border-radius: 4px;"></div> *@
@*         <div style="width: 2px;"></div> *@
@*         <div style="width: 20%; height: 2px; background-color: var(--mud-palette-secondary); border-radius: 4px"></div> *@
@*     </div> *@
@* </div> *@

<div class="@Class">
    @if (ShowTooltip)
    {
        <MudTooltip RootClass="d-flex" Placement="@Placement">
            <ChildContent>
                <MudRating Class="rating" MaxValue="5" Size="Size.Small" SelectedValue="@Stars" ReadOnly/>
            </ChildContent>

            <TooltipContent>
                <div class="d-flex align-center gap-3">
                    <MudRating Class="rating" MaxValue="5" Size="Size.Small" SelectedValue="@Stars" ReadOnly/>

                    <MudText Typo="Typo.body1">
                        @L["ContentRating_OutOf", Rating.Stars, 5]
                    </MudText>
                </div>
                <MudText Typo="Typo.body2">
                    @L["ContentRating_Voters", Rating.Votes.ToMetric()]
                </MudText>
            </TooltipContent>
        </MudTooltip>
    }
    else
    {
        <MudRating Class="rating" MaxValue="5" Size="Size.Small" SelectedValue="@Stars" ReadOnly/>
    }
</div>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter, EditorRequired]
    public ContentRatingModel Rating { get; set; } = default!;

    [Parameter]
    public bool ShowTooltip { get; set; }

    [Parameter]
    public Placement Placement { get; set; } = Placement.Bottom;

    private int Stars =>
        (int)Math.Round(Rating.Stars);

}