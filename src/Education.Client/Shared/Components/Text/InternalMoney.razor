<div class="@_blockClass">
    <MudIcon Size="@IconSize" Class="@_iconClass" Icon="@Currency.GetIcon()"/>
    @if (ShowFullValue)
    {
        <MudText Typo="Typo" Color="Color.Inherit">
            @Amount.ToString("G")
        </MudText>
    }
    else
    {
        <MetricNumber Value="@Amount" Typo="@Typo"/>
    }
</div>

@code {
    private string? _blockClass;
    private string? _iconClass;

    [Parameter, EditorRequired]
    public InternalCurrency Currency { get; set; }

    [Parameter, EditorRequired]
    public long Amount { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public Typo Typo { get; set; } = Typo.body1;

    [Parameter]
    public Size IconSize { get; set; } = Size.Small;

    [Parameter]
    public bool Horizontal { get; set; }

    [Parameter]
    public bool ShowFullValue { get; set; }

    protected override void OnParametersSet()
    {
        _iconClass = Horizontal ? "mr-1" : "mb-1";

        _blockClass = CssBuilder.Default("d-flex align-center")
            .AddClass(Horizontal ? "flex-row" : "flex-column")
            .AddClass(Class)
            .Build();
    }

}