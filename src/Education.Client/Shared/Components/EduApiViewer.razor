@using System.Diagnostics
@typeparam T

@switch (Result.Status)
{
    case Status.Loading:
        if (Loading is null)
        {
            <EduSpinner/>
        }
        else
        {
            @Loading
        }

        break;

    case Status.Error:
        var error = Result.UnwrapError();

        if (Error is null)
        {
            <PageTitle>
                @error.Title
            </PageTitle>

            <EduErrorContainer
                Class="align-center justify-center flex-grow-1"
                Error="@error"
                OnReloadClick="@OnReloadClick"/>
        }
        else
        {
            @Error(error)
        }

        break;

    case Status.Success:
        @ChildContent(Result.Unwrap())
        break;

    default:
        throw new UnreachableException($"Unknown loading status {Result.Status}");
}


@code {

    [Parameter, EditorRequired]
    public required ApiResult<T> Result { get; set; }

    [Parameter]
    public RenderFragment<T> ChildContent { get; init; } = default!;

    [Parameter]
    public RenderFragment? Loading { get; set; }

    [Parameter]
    public RenderFragment<Error>? Error { get; set; }

    [Parameter]
    public EventCallback OnReloadClick { get; set; }

}
