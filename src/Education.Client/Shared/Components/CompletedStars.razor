<div class="d-flex justify-center align-center @Class">
    @foreach (var (icon, color, size) in _stars)
    {
        <MudIcon Icon="@icon" Color="@color" Style="@($"font-size: {size}rem")"/>
    }
</div>

@code {
    private readonly List<(string Icon, Color Color, byte Size)> _stars = [];

    [Parameter, EditorRequired]
    public double Progress { get; set; }

    [Parameter]
    public string? Class { get; set; }

    protected override void OnParametersSet()
    {
        _stars.Clear();

        _stars.Add(GetIcon(StarFullness(Progress, 0, .33), 5));
        _stars.Add(GetIcon(StarFullness(Progress, .34, .66), 7));
        _stars.Add(GetIcon(StarFullness(Progress, .67, 1), 5));
    }

    private static byte StarFullness(double progress, double min, double max)
    {
        if (progress <= min)
            return 0;

        if (progress >= max)
            return 2;

        return 1;
    }

    private static (string Icon, Color Color, byte Size) GetIcon(byte fullness, byte size) =>
        fullness switch
        {
            0 => (Icons.Material.Outlined.StarBorder, Color.Default, size),
            1 => (Icons.Material.Outlined.StarHalf, Color.Warning, size),
            _ => (Icons.Material.Outlined.Star, Color.Warning, size)
        };

}
