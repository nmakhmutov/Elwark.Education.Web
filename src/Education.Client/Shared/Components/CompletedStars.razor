<div class="d-flex justify-center align-center @Class">
    @foreach (var (icon, color, style) in _stars)
    {
        <MudIcon Icon="@icon" Color="@color" Style="@style"/>
    }
</div>

@code {
    private readonly List<(string Icon, Color Color, string Style)> _stars = new();

    [Parameter, EditorRequired]
    public double Progress { get; set; }

    [Parameter]
    public string? Class { get; set; }

    protected override void OnParametersSet()
    {
        _stars.Clear();

        var first = StarFullness(Progress, 0, .33);
        _stars.Add((StarIcon(first), StarColor(first), "font-size: 5rem"));

        var second = StarFullness(Progress, .34, .66);
        _stars.Add((StarIcon(second), StarColor(second), "font-size: 6rem"));

        var third = StarFullness(Progress, .67, .90);
        _stars.Add((StarIcon(third), StarColor(third), "font-size: 5rem"));
    }

    private static short StarFullness(double progress, double min, double max)
    {
        if (progress <= min)
            return 0;

        if (progress >= max)
            return 2;

        return 1;
    }

    private static string StarIcon(short fullness) =>
        fullness switch
        {
            0 => Icons.Material.Outlined.StarBorder,
            1 => Icons.Material.Outlined.StarHalf,
            _ => Icons.Material.Outlined.Star
        };

    private static Color StarColor(short fullness) =>
        fullness == 0 ? Color.Default : Color.Warning;

}