@using Education.Client.Features.Customer.Services.Notification.Model
<section class="d-flex gap-3 @Class">
    <NotificationAvatar Class="mt-1" Subject="@Notification.Subject"/>

    <article class="d-flex flex-column gap-3">
        <header>
            @if (DisableTitleLink || string.IsNullOrEmpty(Notification.Href))
            {
                <MudText Typo="Typo.subtitle2">
                    @Notification.Title
                </MudText>
            }
            else
            {
                <MudLink Typo="Typo.subtitle2" Href="@Notification.Href">
                    @Notification.Title
                </MudLink>
            }

            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                @Customer.Humanize(Notification.CreatedAt) @L[$"{Notification.Subject}_Title"]
            </MudText>
        </header>

        <MudText Typo="Typo.body2">
            @Notification.Message
        </MudText>

        @if (Notification.HasMoney)
        {
            <footer class="d-flex gap-3">
                <MudText Typo="Typo.body2">@L["Rewards_Title"]:</MudText>
                @foreach (var reward in Notification.Money)
                {
                    <InternalMoney Currency="@reward.Currency" Amount="@reward.Amount" Typo="Typo.body2" Horizontal/>
                }
            </footer>
        }
    </article>
</section>

@code {

    [Inject]
    private IStringLocalizer<App> L { get; init; } = default!;

    [CascadingParameter]
    private CustomerState Customer { get; init; } = default!;

    [Parameter, EditorRequired]
    public required NotificationBase Notification { get; set; }

    [Parameter]
    public bool DisableTitleLink { get; set; }

    [Parameter]
    public string? Class { get; set; }

}
